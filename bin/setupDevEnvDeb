#!/bin/bash
#
# Sysbox's development-environment installer for Debian-based distributions.
#
# Supported Distros:
#   - Ubuntu
#   - Debian
#

GO_VERSION="1.13.3"
GO_HOME="${HOME}/go"
GO=/usr/local/go/bin/go


#
# Preps host for Sysbox dev environment
#


install_golang() {

    echo "  Installing Golang compiler ..."

    mkdir -p ~/bin && cd ~/bin

    if ! wget https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz; then
	echo "  Error while fetching Golang v${GO_VERSION}"
	exit 1
    fi

    if ! sudo tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz; then
	echo "  Error while trying to install Golang v${GO_VERSION}"
	exit 1
    fi

    # Create GO_HOME and required directories.
    if [ ! -d ${GO_HOME} ]; then
        mkdir ${GO_HOME}
        mkdir -p ${GO_HOME}/{src,pkg,bin}
    else
        mkdir -p ${GO_HOME}/{src,pkg,bin}
    fi

    export GOPATH=/home/$USER/go
    export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin

    # Set required env-vars.
    grep -q -F 'export GOPATH=${HOME}/go' ${HOME}/.bashrc || echo 'export GOPATH=${HOME}/go' >> ${HOME}/.bashrc
    grep -q -F 'export GOROOT=/usr/local/go' ${HOME}/.bashrc || echo 'export GOROOT=/usr/local/go' >> ${HOME}/.bashrc
    grep -q -F 'export PATH=${PATH}:${GOROOT}/bin' ${HOME}/.bashrc || echo 'export PATH=${PATH}:${GOROOT}/bin' >> ${HOME}/.bashrc
    grep -q -F 'export PATH=${PATH}:${GOPATH}/bin' ${HOME}/.bashrc || echo 'export PATH=${PATH}:${GOPATH}/bin' >> ${HOME}/.bashrc

    source ${HOME}/.bashrc
}


echo "Preparing host for Sysbox dev environment ..."

# Check if Golang is present and install it otherwise.
echo "  Checking for Golang ..."
output=$(sh -c "sudo stat /usr/local/go/bin/go" 2>&1)
if [ $? -ne 0 ]; then
    install_golang
fi

# Check if Docker is present
echo "  Checking for Docker ..."
output=$(sh -c "which docker" 2>&1)
if [ $? -ne 0 ]; then
    echo "  Error: please install Docker."
    exit 1
fi

output=$(sh -c "docker ps" 2>&1)
if [ $? -ne 0 ]; then
    echo "  Error: please make sure you have permission to run Docker."
    echo "  Try: sudo usermod -aG docker ${USER} && sudo su - ${USER}"
    exit 1
fi

# Install utilities required for libseccomp
echo "  Checking for make and autoconf utilities ..."
output=$(sh -c "which make && which autoconf && sudo dpkg -l libtool" 2>&1)
if [ $? -ne 0 ]; then
  echo "  Installing make and autoconf utilities ..."
  sudo apt-get install --no-install-recommends -y \
    autoconf \
    libtool \
    make \
    unzip
  if [ $? -ne 0 ]; then
      echo "  Error: failed to install utilities."
      exit 1
  fi
fi

# install protoc compiler for gRPC
echo "  Checking for gRPC protoc compiler ..."

sudo apt-get install --no-install-recommends -y unzip

output=$(sh -c "which protoc" 2>&1)
if [ $? -ne 0 ]; then
    echo "  Installing gRPC protoc compiler ..."
    mkdir -p ~/bin/protoc \
	&& cd ~/bin/protoc/ \
	&& wget https://github.com/protocolbuffers/protobuf/releases/download/v3.6.1/protoc-3.6.1-linux-x86_64.zip \
	&& unzip protoc-3.6.1-linux-x86_64.zip \
	&& sudo cp -r include/* /usr/local/include/ \
	&& sudo cp bin/protoc /usr/local/bin/ \
	&& sudo chmod 755 /usr/local/bin/protoc \
        && sudo chmod -R 755 /usr/local/include/google \
	&& cd \
	&& rm -rf ~/bin/protoc/ \
	&& GIT_TAG="v1.3.1" \
	&& ${GO} get -d -u github.com/golang/protobuf/protoc-gen-go \
	&& git -C "$GOPATH"/src/github.com/golang/protobuf checkout $GIT_TAG > /dev/null \
	&& ${GO} install github.com/golang/protobuf/protoc-gen-go
    if [ $? -ne 0 ]; then
	echo "  Error: failed to install protoc."
	exit 1
    fi
fi

printf "Done.\n"
printf "\n"
printf "Use the sysbox make targets (e.g., make sysbox, make test-sysbox, etc.) to build or test.\n"

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v0/errors/image_error.proto

package errors // import "google.golang.org/genproto/googleapis/ads/googleads/v0/errors"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Enum describing possible image errors.
type ImageErrorEnum_ImageError int32

const (
	// Enum unspecified.
	ImageErrorEnum_UNSPECIFIED ImageErrorEnum_ImageError = 0
	// The received error code is not known in this version.
	ImageErrorEnum_UNKNOWN ImageErrorEnum_ImageError = 1
	// The image is not valid.
	ImageErrorEnum_INVALID_IMAGE ImageErrorEnum_ImageError = 2
	// The image could not be stored.
	ImageErrorEnum_STORAGE_ERROR ImageErrorEnum_ImageError = 3
	// There was a problem with the request.
	ImageErrorEnum_BAD_REQUEST ImageErrorEnum_ImageError = 4
	// The image is not of legal dimensions.
	ImageErrorEnum_UNEXPECTED_SIZE ImageErrorEnum_ImageError = 5
	// Animated image are not permitted.
	ImageErrorEnum_ANIMATED_NOT_ALLOWED ImageErrorEnum_ImageError = 6
	// Animation is too long.
	ImageErrorEnum_ANIMATION_TOO_LONG ImageErrorEnum_ImageError = 7
	// There was an error on the server.
	ImageErrorEnum_SERVER_ERROR ImageErrorEnum_ImageError = 8
	// Image cannot be in CMYK color format.
	ImageErrorEnum_CMYK_JPEG_NOT_ALLOWED ImageErrorEnum_ImageError = 9
	// Flash images are not permitted.
	ImageErrorEnum_FLASH_NOT_ALLOWED ImageErrorEnum_ImageError = 10
	// Flash images must support clickTag.
	ImageErrorEnum_FLASH_WITHOUT_CLICKTAG ImageErrorEnum_ImageError = 11
	// A flash error has occurred after fixing the click tag.
	ImageErrorEnum_FLASH_ERROR_AFTER_FIXING_CLICK_TAG ImageErrorEnum_ImageError = 12
	// Unacceptable visual effects.
	ImageErrorEnum_ANIMATED_VISUAL_EFFECT ImageErrorEnum_ImageError = 13
	// There was a problem with the flash image.
	ImageErrorEnum_FLASH_ERROR ImageErrorEnum_ImageError = 14
	// Incorrect image layout.
	ImageErrorEnum_LAYOUT_PROBLEM ImageErrorEnum_ImageError = 15
	// There was a problem reading the image file.
	ImageErrorEnum_PROBLEM_READING_IMAGE_FILE ImageErrorEnum_ImageError = 16
	// There was an error storing the image.
	ImageErrorEnum_ERROR_STORING_IMAGE ImageErrorEnum_ImageError = 17
	// The aspect ratio of the image is not allowed.
	ImageErrorEnum_ASPECT_RATIO_NOT_ALLOWED ImageErrorEnum_ImageError = 18
	// Flash cannot have network objects.
	ImageErrorEnum_FLASH_HAS_NETWORK_OBJECTS ImageErrorEnum_ImageError = 19
	// Flash cannot have network methods.
	ImageErrorEnum_FLASH_HAS_NETWORK_METHODS ImageErrorEnum_ImageError = 20
	// Flash cannot have a Url.
	ImageErrorEnum_FLASH_HAS_URL ImageErrorEnum_ImageError = 21
	// Flash cannot use mouse tracking.
	ImageErrorEnum_FLASH_HAS_MOUSE_TRACKING ImageErrorEnum_ImageError = 22
	// Flash cannot have a random number.
	ImageErrorEnum_FLASH_HAS_RANDOM_NUM ImageErrorEnum_ImageError = 23
	// Ad click target cannot be '_self'.
	ImageErrorEnum_FLASH_SELF_TARGETS ImageErrorEnum_ImageError = 24
	// GetUrl method should only use '_blank'.
	ImageErrorEnum_FLASH_BAD_GETURL_TARGET ImageErrorEnum_ImageError = 25
	// Flash version is not supported.
	ImageErrorEnum_FLASH_VERSION_NOT_SUPPORTED ImageErrorEnum_ImageError = 26
	// Flash movies need to have hard coded click URL or clickTAG
	ImageErrorEnum_FLASH_WITHOUT_HARD_CODED_CLICK_URL ImageErrorEnum_ImageError = 27
	// Uploaded flash file is corrupted.
	ImageErrorEnum_INVALID_FLASH_FILE ImageErrorEnum_ImageError = 28
	// Uploaded flash file can be parsed, but the click tag can not be fixed
	// properly.
	ImageErrorEnum_FAILED_TO_FIX_CLICK_TAG_IN_FLASH ImageErrorEnum_ImageError = 29
	// Flash movie accesses network resources
	ImageErrorEnum_FLASH_ACCESSES_NETWORK_RESOURCES ImageErrorEnum_ImageError = 30
	// Flash movie attempts to call external javascript code
	ImageErrorEnum_FLASH_EXTERNAL_JS_CALL ImageErrorEnum_ImageError = 31
	// Flash movie attempts to call flash system commands
	ImageErrorEnum_FLASH_EXTERNAL_FS_CALL ImageErrorEnum_ImageError = 32
	// Image file is too large.
	ImageErrorEnum_FILE_TOO_LARGE ImageErrorEnum_ImageError = 33
	// Image data is too large.
	ImageErrorEnum_IMAGE_DATA_TOO_LARGE ImageErrorEnum_ImageError = 34
	// Error while processing the image.
	ImageErrorEnum_IMAGE_PROCESSING_ERROR ImageErrorEnum_ImageError = 35
	// Image is too small.
	ImageErrorEnum_IMAGE_TOO_SMALL ImageErrorEnum_ImageError = 36
	// Input was invalid.
	ImageErrorEnum_INVALID_INPUT ImageErrorEnum_ImageError = 37
	// There was a problem reading the image file.
	ImageErrorEnum_PROBLEM_READING_FILE ImageErrorEnum_ImageError = 38
)

var ImageErrorEnum_ImageError_name = map[int32]string{
	0:  "UNSPECIFIED",
	1:  "UNKNOWN",
	2:  "INVALID_IMAGE",
	3:  "STORAGE_ERROR",
	4:  "BAD_REQUEST",
	5:  "UNEXPECTED_SIZE",
	6:  "ANIMATED_NOT_ALLOWED",
	7:  "ANIMATION_TOO_LONG",
	8:  "SERVER_ERROR",
	9:  "CMYK_JPEG_NOT_ALLOWED",
	10: "FLASH_NOT_ALLOWED",
	11: "FLASH_WITHOUT_CLICKTAG",
	12: "FLASH_ERROR_AFTER_FIXING_CLICK_TAG",
	13: "ANIMATED_VISUAL_EFFECT",
	14: "FLASH_ERROR",
	15: "LAYOUT_PROBLEM",
	16: "PROBLEM_READING_IMAGE_FILE",
	17: "ERROR_STORING_IMAGE",
	18: "ASPECT_RATIO_NOT_ALLOWED",
	19: "FLASH_HAS_NETWORK_OBJECTS",
	20: "FLASH_HAS_NETWORK_METHODS",
	21: "FLASH_HAS_URL",
	22: "FLASH_HAS_MOUSE_TRACKING",
	23: "FLASH_HAS_RANDOM_NUM",
	24: "FLASH_SELF_TARGETS",
	25: "FLASH_BAD_GETURL_TARGET",
	26: "FLASH_VERSION_NOT_SUPPORTED",
	27: "FLASH_WITHOUT_HARD_CODED_CLICK_URL",
	28: "INVALID_FLASH_FILE",
	29: "FAILED_TO_FIX_CLICK_TAG_IN_FLASH",
	30: "FLASH_ACCESSES_NETWORK_RESOURCES",
	31: "FLASH_EXTERNAL_JS_CALL",
	32: "FLASH_EXTERNAL_FS_CALL",
	33: "FILE_TOO_LARGE",
	34: "IMAGE_DATA_TOO_LARGE",
	35: "IMAGE_PROCESSING_ERROR",
	36: "IMAGE_TOO_SMALL",
	37: "INVALID_INPUT",
	38: "PROBLEM_READING_FILE",
}
var ImageErrorEnum_ImageError_value = map[string]int32{
	"UNSPECIFIED":                        0,
	"UNKNOWN":                            1,
	"INVALID_IMAGE":                      2,
	"STORAGE_ERROR":                      3,
	"BAD_REQUEST":                        4,
	"UNEXPECTED_SIZE":                    5,
	"ANIMATED_NOT_ALLOWED":               6,
	"ANIMATION_TOO_LONG":                 7,
	"SERVER_ERROR":                       8,
	"CMYK_JPEG_NOT_ALLOWED":              9,
	"FLASH_NOT_ALLOWED":                  10,
	"FLASH_WITHOUT_CLICKTAG":             11,
	"FLASH_ERROR_AFTER_FIXING_CLICK_TAG": 12,
	"ANIMATED_VISUAL_EFFECT":             13,
	"FLASH_ERROR":                        14,
	"LAYOUT_PROBLEM":                     15,
	"PROBLEM_READING_IMAGE_FILE":         16,
	"ERROR_STORING_IMAGE":                17,
	"ASPECT_RATIO_NOT_ALLOWED":           18,
	"FLASH_HAS_NETWORK_OBJECTS":          19,
	"FLASH_HAS_NETWORK_METHODS":          20,
	"FLASH_HAS_URL":                      21,
	"FLASH_HAS_MOUSE_TRACKING":           22,
	"FLASH_HAS_RANDOM_NUM":               23,
	"FLASH_SELF_TARGETS":                 24,
	"FLASH_BAD_GETURL_TARGET":            25,
	"FLASH_VERSION_NOT_SUPPORTED":        26,
	"FLASH_WITHOUT_HARD_CODED_CLICK_URL": 27,
	"INVALID_FLASH_FILE":                 28,
	"FAILED_TO_FIX_CLICK_TAG_IN_FLASH":   29,
	"FLASH_ACCESSES_NETWORK_RESOURCES":   30,
	"FLASH_EXTERNAL_JS_CALL":             31,
	"FLASH_EXTERNAL_FS_CALL":             32,
	"FILE_TOO_LARGE":                     33,
	"IMAGE_DATA_TOO_LARGE":               34,
	"IMAGE_PROCESSING_ERROR":             35,
	"IMAGE_TOO_SMALL":                    36,
	"INVALID_INPUT":                      37,
	"PROBLEM_READING_FILE":               38,
}

func (x ImageErrorEnum_ImageError) String() string {
	return proto.EnumName(ImageErrorEnum_ImageError_name, int32(x))
}
func (ImageErrorEnum_ImageError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_image_error_43320018b41b0bdc, []int{0, 0}
}

// Container for enum describing possible image errors.
type ImageErrorEnum struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageErrorEnum) Reset()         { *m = ImageErrorEnum{} }
func (m *ImageErrorEnum) String() string { return proto.CompactTextString(m) }
func (*ImageErrorEnum) ProtoMessage()    {}
func (*ImageErrorEnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_image_error_43320018b41b0bdc, []int{0}
}
func (m *ImageErrorEnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageErrorEnum.Unmarshal(m, b)
}
func (m *ImageErrorEnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageErrorEnum.Marshal(b, m, deterministic)
}
func (dst *ImageErrorEnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageErrorEnum.Merge(dst, src)
}
func (m *ImageErrorEnum) XXX_Size() int {
	return xxx_messageInfo_ImageErrorEnum.Size(m)
}
func (m *ImageErrorEnum) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageErrorEnum.DiscardUnknown(m)
}

var xxx_messageInfo_ImageErrorEnum proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ImageErrorEnum)(nil), "google.ads.googleads.v0.errors.ImageErrorEnum")
	proto.RegisterEnum("google.ads.googleads.v0.errors.ImageErrorEnum_ImageError", ImageErrorEnum_ImageError_name, ImageErrorEnum_ImageError_value)
}

func init() {
	proto.RegisterFile("google/ads/googleads/v0/errors/image_error.proto", fileDescriptor_image_error_43320018b41b0bdc)
}

var fileDescriptor_image_error_43320018b41b0bdc = []byte{
	// 766 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0x5e, 0xd2, 0xad, 0xe9, 0x98, 0x36, 0x61, 0x98, 0xe6, 0xbf, 0x4d, 0x3b, 0xaf, 0xeb, 0xa5,
	0x6c, 0x60, 0x77, 0xda, 0x15, 0x2d, 0x1d, 0xc9, 0x8c, 0x29, 0x52, 0x23, 0x29, 0x27, 0x2d, 0x02,
	0x10, 0xd9, 0x1c, 0x18, 0x05, 0x9a, 0xa8, 0xb0, 0xb6, 0x3e, 0xc4, 0x1e, 0x63, 0x97, 0x7b, 0x94,
	0x3d, 0x4a, 0x5f, 0x60, 0xb7, 0xc3, 0x11, 0x1d, 0xab, 0x1e, 0xb2, 0x5e, 0x89, 0x3c, 0xdf, 0x77,
	0x7e, 0x78, 0xbe, 0xa3, 0x43, 0x06, 0xb3, 0xba, 0x9e, 0xbd, 0xbf, 0xee, 0x5f, 0x4d, 0x9b, 0x7e,
	0x38, 0xe2, 0xe9, 0xe3, 0xa0, 0x7f, 0x3d, 0x9f, 0xd7, 0xf3, 0xa6, 0xff, 0xee, 0xe6, 0x6a, 0x76,
	0xed, 0xdb, 0x4b, 0xf4, 0x61, 0x5e, 0xff, 0x56, 0xb3, 0xd3, 0x40, 0x8b, 0xae, 0xa6, 0x4d, 0xb4,
	0xf4, 0x88, 0x3e, 0x0e, 0xa2, 0xe0, 0xd1, 0xfb, 0xe3, 0x11, 0xd9, 0x12, 0xe8, 0x05, 0x78, 0x87,
	0xdb, 0xdf, 0x6f, 0x7a, 0xff, 0x6c, 0x10, 0xd2, 0x99, 0xd8, 0x36, 0xd9, 0xac, 0x94, 0x2d, 0x21,
	0x11, 0x99, 0x80, 0x94, 0x7e, 0xc5, 0x36, 0xc9, 0x46, 0xa5, 0xc6, 0x4a, 0x9f, 0x2b, 0xba, 0xc6,
	0x76, 0xc8, 0x13, 0xa1, 0x26, 0x5c, 0x8a, 0xd4, 0x8b, 0x82, 0xe7, 0x40, 0xd7, 0xd1, 0x64, 0x9d,
	0x36, 0x3c, 0x07, 0x0f, 0xc6, 0x68, 0x43, 0x1f, 0x60, 0x8c, 0x21, 0x4f, 0xbd, 0x81, 0x9f, 0x2b,
	0xb0, 0x8e, 0x7e, 0xcd, 0x76, 0xc9, 0x76, 0xa5, 0xe0, 0xa2, 0x84, 0xc4, 0x41, 0xea, 0xad, 0x78,
	0x0b, 0xf4, 0x1b, 0x76, 0x48, 0x9e, 0x72, 0x25, 0x0a, 0x8e, 0x26, 0xa5, 0x9d, 0xe7, 0x52, 0xea,
	0x73, 0x48, 0xe9, 0x43, 0xb6, 0x4f, 0x58, 0x40, 0x84, 0x56, 0xde, 0x69, 0xed, 0xa5, 0x56, 0x39,
	0xdd, 0x60, 0x94, 0x3c, 0xb6, 0x60, 0x26, 0x60, 0x16, 0x99, 0x1e, 0xb1, 0x23, 0xb2, 0x97, 0x14,
	0x6f, 0xc6, 0xfe, 0xac, 0x84, 0x7c, 0x25, 0xc8, 0xb7, 0x6c, 0x8f, 0xec, 0x64, 0x92, 0xdb, 0xd1,
	0x8a, 0x99, 0xb0, 0x63, 0xb2, 0x1f, 0xcc, 0xe7, 0xc2, 0x8d, 0x74, 0xe5, 0x7c, 0x22, 0x45, 0x32,
	0x76, 0x3c, 0xa7, 0x9b, 0xec, 0x35, 0xe9, 0x05, 0xac, 0x0d, 0xef, 0x79, 0xe6, 0xc0, 0xf8, 0x4c,
	0x5c, 0x08, 0x95, 0x07, 0x9a, 0x47, 0xde, 0x63, 0x8c, 0xb1, 0xac, 0x7c, 0x22, 0x6c, 0xc5, 0xa5,
	0x87, 0x2c, 0x83, 0xc4, 0xd1, 0x27, 0xf8, 0xf6, 0xcf, 0x62, 0xd0, 0x2d, 0xc6, 0xc8, 0x96, 0xe4,
	0x6f, 0x30, 0x53, 0x69, 0xf4, 0x50, 0x42, 0x41, 0xb7, 0xd9, 0x29, 0x39, 0x5e, 0x5c, 0xbc, 0x01,
	0x9e, 0x62, 0xfc, 0xb6, 0x9d, 0x3e, 0x13, 0x12, 0x28, 0x65, 0x07, 0x64, 0x37, 0x94, 0x80, 0x9d,
	0x5d, 0xa2, 0x74, 0x87, 0x3d, 0x23, 0x87, 0x1c, 0xc5, 0x71, 0xde, 0x60, 0x77, 0x56, 0xde, 0xc6,
	0xd8, 0x73, 0x72, 0x14, 0x72, 0x8f, 0xb8, 0xf5, 0x0a, 0xdc, 0xb9, 0x36, 0x63, 0xaf, 0x87, 0x67,
	0x90, 0x38, 0x4b, 0x77, 0xef, 0x87, 0x0b, 0x70, 0x23, 0x9d, 0x5a, 0xfa, 0x14, 0x85, 0xec, 0xe0,
	0xca, 0x48, 0xba, 0x87, 0xe9, 0x3a, 0x53, 0xa1, 0x2b, 0x0b, 0xde, 0x19, 0x9e, 0x8c, 0x85, 0xca,
	0xe9, 0x3e, 0x0a, 0xd8, 0xa1, 0x86, 0xab, 0x54, 0x17, 0x5e, 0x55, 0x05, 0x3d, 0x40, 0x01, 0x03,
	0x62, 0x41, 0x66, 0xde, 0x71, 0x93, 0x83, 0xb3, 0xf4, 0x90, 0x9d, 0x90, 0x83, 0x60, 0xc7, 0xf1,
	0xc8, 0xc1, 0x55, 0x46, 0x2e, 0x50, 0x7a, 0xc4, 0x5e, 0x90, 0x93, 0x00, 0x4e, 0xc0, 0x58, 0x54,
	0x1e, 0x1f, 0x67, 0xab, 0xb2, 0xd4, 0xc6, 0x41, 0x4a, 0x8f, 0x3b, 0x79, 0xee, 0xa4, 0x1b, 0x71,
	0x93, 0xfa, 0x44, 0xa7, 0x90, 0x2e, 0xe4, 0xc1, 0xaa, 0x4f, 0x30, 0xfb, 0xdd, 0x90, 0x06, 0x7e,
	0xdb, 0xd5, 0x67, 0xec, 0x15, 0x79, 0x99, 0x71, 0x21, 0x21, 0xf5, 0x4e, 0xa3, 0xac, 0x9d, 0xa6,
	0x5e, 0xa8, 0x40, 0xa5, 0xcf, 0x5b, 0x56, 0xeb, 0xc5, 0x93, 0x04, 0xac, 0x85, 0xae, 0x55, 0x06,
	0xac, 0xae, 0x4c, 0x02, 0x96, 0x9e, 0x76, 0x63, 0x04, 0x17, 0x0e, 0x8c, 0xe2, 0xd2, 0x9f, 0x59,
	0x9f, 0x70, 0x29, 0xe9, 0x8b, 0x7b, 0xb0, 0x6c, 0x81, 0xbd, 0xc4, 0x69, 0xc0, 0x6a, 0xc2, 0x54,
	0xe3, 0xcb, 0xe9, 0x77, 0xd8, 0xc7, 0xa0, 0x7e, 0xca, 0x1d, 0xff, 0x0c, 0xe9, 0x61, 0xa4, 0x80,
	0x94, 0x46, 0x63, 0x31, 0x38, 0x0a, 0x61, 0xae, 0xbe, 0xc7, 0x7f, 0x2a, 0x60, 0xe8, 0x60, 0x0b,
	0x0c, 0xff, 0x6a, 0xe5, 0xff, 0x54, 0x65, 0xe5, 0xe8, 0x0f, 0x18, 0xfd, 0xbf, 0xb3, 0xd6, 0xf6,
	0xe3, 0xf5, 0xf0, 0xd3, 0x1a, 0xe9, 0xfd, 0x5a, 0xdf, 0x44, 0x5f, 0xde, 0x19, 0xc3, 0xed, 0x6e,
	0x3b, 0x94, 0xb8, 0x64, 0xca, 0xb5, 0xb7, 0xe9, 0xc2, 0x65, 0x56, 0xbf, 0xbf, 0xba, 0x9d, 0x45,
	0xf5, 0x7c, 0xd6, 0x9f, 0x5d, 0xdf, 0xb6, 0x2b, 0xe8, 0x6e, 0x51, 0x7d, 0x78, 0xd7, 0xfc, 0xdf,
	0xde, 0xfa, 0x29, 0x7c, 0xfe, 0x5c, 0x7f, 0x90, 0x73, 0xfe, 0xd7, 0xfa, 0x69, 0x1e, 0x82, 0xf1,
	0x69, 0x13, 0x85, 0x23, 0x9e, 0x26, 0x83, 0xa8, 0x4d, 0xd9, 0xfc, 0x7d, 0x47, 0xb8, 0xe4, 0xd3,
	0xe6, 0x72, 0x49, 0xb8, 0x9c, 0x0c, 0x2e, 0x03, 0xe1, 0xd3, 0x7a, 0x2f, 0x58, 0xe3, 0x98, 0x4f,
	0x9b, 0x38, 0x5e, 0x52, 0xe2, 0x78, 0x32, 0x88, 0xe3, 0x40, 0xfa, 0xe5, 0x61, 0x5b, 0xdd, 0x8f,
	0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x20, 0x07, 0x21, 0xfb, 0x54, 0x05, 0x00, 0x00,
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v0/common/targeting_setting.proto

package common // import "google.golang.org/genproto/googleapis/ads/googleads/v0/common"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import enums "google.golang.org/genproto/googleapis/ads/googleads/v0/enums"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Settings for the
// <a href="https://support.google.com/google-ads/answer/7365594">
// targeting related features</a>, at Campaign and AdGroup level.
type TargetingSetting struct {
	// The per-targeting-dimension setting to restrict the reach of your campaign
	// or ad group.
	TargetRestrictions   []*TargetRestriction `protobuf:"bytes,1,rep,name=target_restrictions,json=targetRestrictions,proto3" json:"target_restrictions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TargetingSetting) Reset()         { *m = TargetingSetting{} }
func (m *TargetingSetting) String() string { return proto.CompactTextString(m) }
func (*TargetingSetting) ProtoMessage()    {}
func (*TargetingSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_targeting_setting_05b3625fe022ac0d, []int{0}
}
func (m *TargetingSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetingSetting.Unmarshal(m, b)
}
func (m *TargetingSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetingSetting.Marshal(b, m, deterministic)
}
func (dst *TargetingSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetingSetting.Merge(dst, src)
}
func (m *TargetingSetting) XXX_Size() int {
	return xxx_messageInfo_TargetingSetting.Size(m)
}
func (m *TargetingSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetingSetting.DiscardUnknown(m)
}

var xxx_messageInfo_TargetingSetting proto.InternalMessageInfo

func (m *TargetingSetting) GetTargetRestrictions() []*TargetRestriction {
	if m != nil {
		return m.TargetRestrictions
	}
	return nil
}

// The list of per-targeting-dimension targeting settings.
type TargetRestriction struct {
	// The targeting dimension that these settings apply to.
	TargetingDimension enums.TargetingDimensionEnum_TargetingDimension `protobuf:"varint,1,opt,name=targeting_dimension,json=targetingDimension,proto3,enum=google.ads.googleads.v0.enums.TargetingDimensionEnum_TargetingDimension" json:"targeting_dimension,omitempty"`
	// Indicates whether to restrict your ads to show only for the criteria you
	// have selected for this targeting_dimension, or to target all values for
	// this targeting_dimension and show ads based on your targeting in other
	// TargetingDimensions. A value of 'true' means that these criteria will only
	// apply bid modifiers, and not affect targeting. A value of 'false' means
	// that these criteria will restrict targeting as well as applying bid
	// modifiers.
	BidOnly              *wrappers.BoolValue `protobuf:"bytes,2,opt,name=bid_only,json=bidOnly,proto3" json:"bid_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TargetRestriction) Reset()         { *m = TargetRestriction{} }
func (m *TargetRestriction) String() string { return proto.CompactTextString(m) }
func (*TargetRestriction) ProtoMessage()    {}
func (*TargetRestriction) Descriptor() ([]byte, []int) {
	return fileDescriptor_targeting_setting_05b3625fe022ac0d, []int{1}
}
func (m *TargetRestriction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetRestriction.Unmarshal(m, b)
}
func (m *TargetRestriction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetRestriction.Marshal(b, m, deterministic)
}
func (dst *TargetRestriction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetRestriction.Merge(dst, src)
}
func (m *TargetRestriction) XXX_Size() int {
	return xxx_messageInfo_TargetRestriction.Size(m)
}
func (m *TargetRestriction) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetRestriction.DiscardUnknown(m)
}

var xxx_messageInfo_TargetRestriction proto.InternalMessageInfo

func (m *TargetRestriction) GetTargetingDimension() enums.TargetingDimensionEnum_TargetingDimension {
	if m != nil {
		return m.TargetingDimension
	}
	return enums.TargetingDimensionEnum_UNSPECIFIED
}

func (m *TargetRestriction) GetBidOnly() *wrappers.BoolValue {
	if m != nil {
		return m.BidOnly
	}
	return nil
}

func init() {
	proto.RegisterType((*TargetingSetting)(nil), "google.ads.googleads.v0.common.TargetingSetting")
	proto.RegisterType((*TargetRestriction)(nil), "google.ads.googleads.v0.common.TargetRestriction")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v0/common/targeting_setting.proto", fileDescriptor_targeting_setting_05b3625fe022ac0d)
}

var fileDescriptor_targeting_setting_05b3625fe022ac0d = []byte{
	// 379 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0x86, 0x49, 0x0a, 0xf7, 0x5e, 0x52, 0xb8, 0x68, 0x44, 0x28, 0x5d, 0x94, 0x92, 0x55, 0x57,
	0x93, 0x58, 0x51, 0x61, 0x5c, 0xa5, 0x56, 0xea, 0xce, 0x52, 0x25, 0x0b, 0x09, 0x94, 0xa4, 0x33,
	0x0e, 0x03, 0xc9, 0x4c, 0xc8, 0x24, 0x95, 0xbe, 0x8e, 0x4b, 0xdf, 0xc3, 0x8d, 0x8f, 0xe2, 0xca,
	0x47, 0x90, 0xe4, 0x74, 0x62, 0xad, 0x56, 0x57, 0x73, 0x72, 0xf2, 0xff, 0xdf, 0x39, 0xf3, 0x27,
	0xd6, 0x29, 0x93, 0x92, 0x25, 0xd4, 0x8d, 0x88, 0x72, 0xa1, 0xac, 0xaa, 0xa5, 0xe7, 0x2e, 0x64,
	0x9a, 0x4a, 0xe1, 0x16, 0x51, 0xce, 0x68, 0xc1, 0x05, 0x9b, 0x2b, 0x5a, 0x54, 0x27, 0xca, 0x72,
	0x59, 0x48, 0xbb, 0x07, 0x62, 0x14, 0x11, 0x85, 0x1a, 0x1f, 0x5a, 0x7a, 0x08, 0x7c, 0xdd, 0xb3,
	0x5d, 0x5c, 0x2a, 0xca, 0x54, 0x6d, 0x60, 0x09, 0x4f, 0xa9, 0x50, 0x5c, 0x0a, 0x00, 0x77, 0xd7,
	0x60, 0xb7, 0x7e, 0x8a, 0xcb, 0x7b, 0xf7, 0x21, 0x8f, 0xb2, 0x8c, 0xe6, 0x0a, 0xde, 0x3b, 0x4b,
	0x6b, 0xef, 0x56, 0x9b, 0x6f, 0x60, 0x25, 0x3b, 0xb6, 0x0e, 0x00, 0x38, 0xcf, 0xa9, 0x2a, 0x72,
	0xbe, 0x28, 0xb8, 0x14, 0xaa, 0x63, 0xf4, 0x5b, 0x83, 0xf6, 0xf0, 0x08, 0xfd, 0xbc, 0x2a, 0x02,
	0xdc, 0xec, 0xc3, 0x39, 0xb3, 0x8b, 0xed, 0x96, 0x72, 0x9e, 0x0d, 0x6b, 0xff, 0x8b, 0xd2, 0x5e,
	0xe9, 0xc9, 0x9f, 0xae, 0xd2, 0x31, 0xfa, 0xc6, 0xe0, 0xff, 0xf0, 0x6a, 0xe7, 0xe4, 0x3a, 0x04,
	0xd4, 0xdc, 0x63, 0xac, 0x8d, 0x97, 0xa2, 0x4c, 0xbf, 0x69, 0xeb, 0x85, 0x36, 0x7b, 0xf6, 0x89,
	0xf5, 0x2f, 0xe6, 0x64, 0x2e, 0x45, 0xb2, 0xea, 0x98, 0x7d, 0x63, 0xd0, 0x1e, 0x76, 0xf5, 0x3c,
	0x9d, 0x1d, 0x1a, 0x49, 0x99, 0x04, 0x51, 0x52, 0xd2, 0xd9, 0xdf, 0x98, 0x93, 0x6b, 0x91, 0xac,
	0x46, 0x6f, 0x86, 0xe5, 0x2c, 0x64, 0xfa, 0x4b, 0x28, 0xa3, 0xc3, 0xed, 0x90, 0xa7, 0x15, 0x73,
	0x6a, 0xdc, 0x8d, 0xd7, 0x46, 0x26, 0x93, 0x48, 0x30, 0x24, 0x73, 0xe6, 0x32, 0x2a, 0xea, 0x89,
	0xfa, 0x43, 0x67, 0x5c, 0xed, 0xfa, 0x9f, 0xce, 0xe1, 0x78, 0x34, 0x5b, 0x13, 0xdf, 0x7f, 0x32,
	0x7b, 0x13, 0x80, 0xf9, 0x44, 0x21, 0x28, 0xab, 0x2a, 0xf0, 0xd0, 0x45, 0x2d, 0x7b, 0xd1, 0x82,
	0xd0, 0x27, 0x2a, 0x6c, 0x04, 0x61, 0xe0, 0x85, 0x20, 0x78, 0x35, 0x1d, 0xe8, 0x62, 0xec, 0x13,
	0x85, 0x71, 0x23, 0xc1, 0x38, 0xf0, 0x30, 0x06, 0x51, 0xfc, 0xa7, 0xde, 0xee, 0xf8, 0x3d, 0x00,
	0x00, 0xff, 0xff, 0x7a, 0xeb, 0xb9, 0x6b, 0xec, 0x02, 0x00, 0x00,
}

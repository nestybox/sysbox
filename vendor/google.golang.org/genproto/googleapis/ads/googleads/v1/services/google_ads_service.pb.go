// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v1/services/google_ads_service.proto

package services // import "google.golang.org/genproto/googleapis/ads/googleads/v1/services"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "google.golang.org/genproto/googleapis/ads/googleads/v1/common"
import resources "google.golang.org/genproto/googleapis/ads/googleads/v1/resources"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import status "google.golang.org/genproto/googleapis/rpc/status"
import field_mask "google.golang.org/genproto/protobuf/field_mask"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request message for [GoogleAdsService.Search][google.ads.googleads.v1.services.GoogleAdsService.Search].
type SearchGoogleAdsRequest struct {
	// The ID of the customer being queried.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// The query string.
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	// Token of the page to retrieve. If not specified, the first
	// page of results will be returned. Use the value obtained from
	// `next_page_token` in the previous response in order to request
	// the next page of results.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Number of elements to retrieve in a single page.
	// When too large a page is requested, the server may decide to
	// further limit the number of returned resources.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// If true, the request is validated but not executed.
	ValidateOnly         bool     `protobuf:"varint,5,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchGoogleAdsRequest) Reset()         { *m = SearchGoogleAdsRequest{} }
func (m *SearchGoogleAdsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchGoogleAdsRequest) ProtoMessage()    {}
func (*SearchGoogleAdsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_google_ads_service_7f943554245b1e4e, []int{0}
}
func (m *SearchGoogleAdsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchGoogleAdsRequest.Unmarshal(m, b)
}
func (m *SearchGoogleAdsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchGoogleAdsRequest.Marshal(b, m, deterministic)
}
func (dst *SearchGoogleAdsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchGoogleAdsRequest.Merge(dst, src)
}
func (m *SearchGoogleAdsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchGoogleAdsRequest.Size(m)
}
func (m *SearchGoogleAdsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchGoogleAdsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchGoogleAdsRequest proto.InternalMessageInfo

func (m *SearchGoogleAdsRequest) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *SearchGoogleAdsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchGoogleAdsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchGoogleAdsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchGoogleAdsRequest) GetValidateOnly() bool {
	if m != nil {
		return m.ValidateOnly
	}
	return false
}

// Response message for [GoogleAdsService.Search][google.ads.googleads.v1.services.GoogleAdsService.Search].
type SearchGoogleAdsResponse struct {
	// The list of rows that matched the query.
	Results []*GoogleAdsRow `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// Pagination token used to retrieve the next page of results.
	// Pass the content of this string as the `page_token` attribute of
	// the next request. `next_page_token` is not returned for the last
	// page.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of results that match the query ignoring the LIMIT
	// clause.
	TotalResultsCount int64 `protobuf:"varint,3,opt,name=total_results_count,json=totalResultsCount,proto3" json:"total_results_count,omitempty"`
	// FieldMask that represents what fields were requested by the user.
	FieldMask            *field_mask.FieldMask `protobuf:"bytes,5,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SearchGoogleAdsResponse) Reset()         { *m = SearchGoogleAdsResponse{} }
func (m *SearchGoogleAdsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchGoogleAdsResponse) ProtoMessage()    {}
func (*SearchGoogleAdsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_google_ads_service_7f943554245b1e4e, []int{1}
}
func (m *SearchGoogleAdsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchGoogleAdsResponse.Unmarshal(m, b)
}
func (m *SearchGoogleAdsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchGoogleAdsResponse.Marshal(b, m, deterministic)
}
func (dst *SearchGoogleAdsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchGoogleAdsResponse.Merge(dst, src)
}
func (m *SearchGoogleAdsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchGoogleAdsResponse.Size(m)
}
func (m *SearchGoogleAdsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchGoogleAdsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchGoogleAdsResponse proto.InternalMessageInfo

func (m *SearchGoogleAdsResponse) GetResults() []*GoogleAdsRow {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *SearchGoogleAdsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *SearchGoogleAdsResponse) GetTotalResultsCount() int64 {
	if m != nil {
		return m.TotalResultsCount
	}
	return 0
}

func (m *SearchGoogleAdsResponse) GetFieldMask() *field_mask.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

// A returned row from the query.
type GoogleAdsRow struct {
	// The account budget in the query.
	AccountBudget *resources.AccountBudget `protobuf:"bytes,42,opt,name=account_budget,json=accountBudget,proto3" json:"account_budget,omitempty"`
	// The account budget proposal referenced in the query.
	AccountBudgetProposal *resources.AccountBudgetProposal `protobuf:"bytes,43,opt,name=account_budget_proposal,json=accountBudgetProposal,proto3" json:"account_budget_proposal,omitempty"`
	// The ad group referenced in the query.
	AdGroup *resources.AdGroup `protobuf:"bytes,3,opt,name=ad_group,json=adGroup,proto3" json:"ad_group,omitempty"`
	// The ad referenced in the query.
	AdGroupAd *resources.AdGroupAd `protobuf:"bytes,16,opt,name=ad_group_ad,json=adGroupAd,proto3" json:"ad_group_ad,omitempty"`
	// The ad group ad label referenced in the query.
	AdGroupAdLabel *resources.AdGroupAdLabel `protobuf:"bytes,120,opt,name=ad_group_ad_label,json=adGroupAdLabel,proto3" json:"ad_group_ad_label,omitempty"`
	// The ad group audience view referenced in the query.
	AdGroupAudienceView *resources.AdGroupAudienceView `protobuf:"bytes,57,opt,name=ad_group_audience_view,json=adGroupAudienceView,proto3" json:"ad_group_audience_view,omitempty"`
	// The bid modifier referenced in the query.
	AdGroupBidModifier *resources.AdGroupBidModifier `protobuf:"bytes,24,opt,name=ad_group_bid_modifier,json=adGroupBidModifier,proto3" json:"ad_group_bid_modifier,omitempty"`
	// The criterion referenced in the query.
	AdGroupCriterion *resources.AdGroupCriterion `protobuf:"bytes,17,opt,name=ad_group_criterion,json=adGroupCriterion,proto3" json:"ad_group_criterion,omitempty"`
	// The ad group criterion label referenced in the query.
	AdGroupCriterionLabel *resources.AdGroupCriterionLabel `protobuf:"bytes,121,opt,name=ad_group_criterion_label,json=adGroupCriterionLabel,proto3" json:"ad_group_criterion_label,omitempty"`
	// The ad group extension setting referenced in the query.
	AdGroupExtensionSetting *resources.AdGroupExtensionSetting `protobuf:"bytes,112,opt,name=ad_group_extension_setting,json=adGroupExtensionSetting,proto3" json:"ad_group_extension_setting,omitempty"`
	// The ad group feed referenced in the query.
	AdGroupFeed *resources.AdGroupFeed `protobuf:"bytes,67,opt,name=ad_group_feed,json=adGroupFeed,proto3" json:"ad_group_feed,omitempty"`
	// The ad group label referenced in the query.
	AdGroupLabel *resources.AdGroupLabel `protobuf:"bytes,115,opt,name=ad_group_label,json=adGroupLabel,proto3" json:"ad_group_label,omitempty"`
	// The age range view referenced in the query.
	AgeRangeView *resources.AgeRangeView `protobuf:"bytes,48,opt,name=age_range_view,json=ageRangeView,proto3" json:"age_range_view,omitempty"`
	// The ad schedule view referenced in the query.
	AdScheduleView *resources.AdScheduleView `protobuf:"bytes,89,opt,name=ad_schedule_view,json=adScheduleView,proto3" json:"ad_schedule_view,omitempty"`
	// The domain category referenced in the query.
	DomainCategory *resources.DomainCategory `protobuf:"bytes,91,opt,name=domain_category,json=domainCategory,proto3" json:"domain_category,omitempty"`
	// The asset referenced in the query.
	Asset *resources.Asset `protobuf:"bytes,105,opt,name=asset,proto3" json:"asset,omitempty"`
	// The bidding strategy referenced in the query.
	BiddingStrategy *resources.BiddingStrategy `protobuf:"bytes,18,opt,name=bidding_strategy,json=biddingStrategy,proto3" json:"bidding_strategy,omitempty"`
	// The billing setup referenced in the query.
	BillingSetup *resources.BillingSetup `protobuf:"bytes,41,opt,name=billing_setup,json=billingSetup,proto3" json:"billing_setup,omitempty"`
	// The campaign budget referenced in the query.
	CampaignBudget *resources.CampaignBudget `protobuf:"bytes,19,opt,name=campaign_budget,json=campaignBudget,proto3" json:"campaign_budget,omitempty"`
	// The campaign referenced in the query.
	Campaign *resources.Campaign `protobuf:"bytes,2,opt,name=campaign,proto3" json:"campaign,omitempty"`
	// The campaign audience view referenced in the query.
	CampaignAudienceView *resources.CampaignAudienceView `protobuf:"bytes,69,opt,name=campaign_audience_view,json=campaignAudienceView,proto3" json:"campaign_audience_view,omitempty"`
	// The campaign bid modifier referenced in the query.
	CampaignBidModifier *resources.CampaignBidModifier `protobuf:"bytes,26,opt,name=campaign_bid_modifier,json=campaignBidModifier,proto3" json:"campaign_bid_modifier,omitempty"`
	// The campaign criterion referenced in the query.
	CampaignCriterion *resources.CampaignCriterion `protobuf:"bytes,20,opt,name=campaign_criterion,json=campaignCriterion,proto3" json:"campaign_criterion,omitempty"`
	// The campaign extension setting referenced in the query.
	CampaignExtensionSetting *resources.CampaignExtensionSetting `protobuf:"bytes,113,opt,name=campaign_extension_setting,json=campaignExtensionSetting,proto3" json:"campaign_extension_setting,omitempty"`
	// The campaign feed referenced in the query.
	CampaignFeed *resources.CampaignFeed `protobuf:"bytes,63,opt,name=campaign_feed,json=campaignFeed,proto3" json:"campaign_feed,omitempty"`
	// The campaign label referenced in the query.
	CampaignLabel *resources.CampaignLabel `protobuf:"bytes,108,opt,name=campaign_label,json=campaignLabel,proto3" json:"campaign_label,omitempty"`
	// Campaign Shared Set referenced in AWQL query.
	CampaignSharedSet *resources.CampaignSharedSet `protobuf:"bytes,30,opt,name=campaign_shared_set,json=campaignSharedSet,proto3" json:"campaign_shared_set,omitempty"`
	// The carrier constant referenced in the query.
	CarrierConstant *resources.CarrierConstant `protobuf:"bytes,66,opt,name=carrier_constant,json=carrierConstant,proto3" json:"carrier_constant,omitempty"`
	// The ChangeStatus referenced in the query.
	ChangeStatus *resources.ChangeStatus `protobuf:"bytes,37,opt,name=change_status,json=changeStatus,proto3" json:"change_status,omitempty"`
	// The conversion action referenced in the query.
	ConversionAction *resources.ConversionAction `protobuf:"bytes,103,opt,name=conversion_action,json=conversionAction,proto3" json:"conversion_action,omitempty"`
	// The ClickView referenced in the query.
	ClickView *resources.ClickView `protobuf:"bytes,122,opt,name=click_view,json=clickView,proto3" json:"click_view,omitempty"`
	// The CustomInterest referenced in the query.
	CustomInterest *resources.CustomInterest `protobuf:"bytes,104,opt,name=custom_interest,json=customInterest,proto3" json:"custom_interest,omitempty"`
	// The customer referenced in the query.
	Customer *resources.Customer `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	// The CustomerManagerLink referenced in the query.
	CustomerManagerLink *resources.CustomerManagerLink `protobuf:"bytes,61,opt,name=customer_manager_link,json=customerManagerLink,proto3" json:"customer_manager_link,omitempty"`
	// The CustomerClientLink referenced in the query.
	CustomerClientLink *resources.CustomerClientLink `protobuf:"bytes,62,opt,name=customer_client_link,json=customerClientLink,proto3" json:"customer_client_link,omitempty"`
	// The CustomerClient referenced in the query.
	CustomerClient *resources.CustomerClient `protobuf:"bytes,70,opt,name=customer_client,json=customerClient,proto3" json:"customer_client,omitempty"`
	// The customer extension setting referenced in the query.
	CustomerExtensionSetting *resources.CustomerExtensionSetting `protobuf:"bytes,114,opt,name=customer_extension_setting,json=customerExtensionSetting,proto3" json:"customer_extension_setting,omitempty"`
	// The customer feed referenced in the query.
	CustomerFeed *resources.CustomerFeed `protobuf:"bytes,64,opt,name=customer_feed,json=customerFeed,proto3" json:"customer_feed,omitempty"`
	// The customer label referenced in the query.
	CustomerLabel *resources.CustomerLabel `protobuf:"bytes,124,opt,name=customer_label,json=customerLabel,proto3" json:"customer_label,omitempty"`
	// The customer negative criterion referenced in the query.
	CustomerNegativeCriterion *resources.CustomerNegativeCriterion `protobuf:"bytes,88,opt,name=customer_negative_criterion,json=customerNegativeCriterion,proto3" json:"customer_negative_criterion,omitempty"`
	// The detail placement view referenced in the query.
	DetailPlacementView *resources.DetailPlacementView `protobuf:"bytes,118,opt,name=detail_placement_view,json=detailPlacementView,proto3" json:"detail_placement_view,omitempty"`
	// The display keyword view referenced in the query.
	DisplayKeywordView *resources.DisplayKeywordView `protobuf:"bytes,47,opt,name=display_keyword_view,json=displayKeywordView,proto3" json:"display_keyword_view,omitempty"`
	// The dynamic search ads search term view referenced in the query.
	DynamicSearchAdsSearchTermView *resources.DynamicSearchAdsSearchTermView `protobuf:"bytes,106,opt,name=dynamic_search_ads_search_term_view,json=dynamicSearchAdsSearchTermView,proto3" json:"dynamic_search_ads_search_term_view,omitempty"`
	// The extension feed item referenced in the query.
	ExtensionFeedItem *resources.ExtensionFeedItem `protobuf:"bytes,85,opt,name=extension_feed_item,json=extensionFeedItem,proto3" json:"extension_feed_item,omitempty"`
	// The feed referenced in the query.
	Feed *resources.Feed `protobuf:"bytes,46,opt,name=feed,proto3" json:"feed,omitempty"`
	// The feed item referenced in the query.
	FeedItem *resources.FeedItem `protobuf:"bytes,50,opt,name=feed_item,json=feedItem,proto3" json:"feed_item,omitempty"`
	// The feed item target referenced in the query.
	FeedItemTarget *resources.FeedItemTarget `protobuf:"bytes,116,opt,name=feed_item_target,json=feedItemTarget,proto3" json:"feed_item_target,omitempty"`
	// The feed mapping referenced in the query.
	FeedMapping *resources.FeedMapping `protobuf:"bytes,58,opt,name=feed_mapping,json=feedMapping,proto3" json:"feed_mapping,omitempty"`
	// The feed placeholder view referenced in the query.
	FeedPlaceholderView *resources.FeedPlaceholderView `protobuf:"bytes,97,opt,name=feed_placeholder_view,json=feedPlaceholderView,proto3" json:"feed_placeholder_view,omitempty"`
	// The gender view referenced in the query.
	GenderView *resources.GenderView `protobuf:"bytes,40,opt,name=gender_view,json=genderView,proto3" json:"gender_view,omitempty"`
	// The geo target constant referenced in the query.
	GeoTargetConstant *resources.GeoTargetConstant `protobuf:"bytes,23,opt,name=geo_target_constant,json=geoTargetConstant,proto3" json:"geo_target_constant,omitempty"`
	// The geographic view referenced in the query.
	GeographicView *resources.GeographicView `protobuf:"bytes,125,opt,name=geographic_view,json=geographicView,proto3" json:"geographic_view,omitempty"`
	// The group placement view referenced in the query.
	GroupPlacementView *resources.GroupPlacementView `protobuf:"bytes,119,opt,name=group_placement_view,json=groupPlacementView,proto3" json:"group_placement_view,omitempty"`
	// The hotel group view referenced in the query.
	HotelGroupView *resources.HotelGroupView `protobuf:"bytes,51,opt,name=hotel_group_view,json=hotelGroupView,proto3" json:"hotel_group_view,omitempty"`
	// The hotel performance view referenced in the query.
	HotelPerformanceView *resources.HotelPerformanceView `protobuf:"bytes,71,opt,name=hotel_performance_view,json=hotelPerformanceView,proto3" json:"hotel_performance_view,omitempty"`
	// The keyword view referenced in the query.
	KeywordView *resources.KeywordView `protobuf:"bytes,21,opt,name=keyword_view,json=keywordView,proto3" json:"keyword_view,omitempty"`
	// The keyword plan referenced in the query.
	KeywordPlan *resources.KeywordPlan `protobuf:"bytes,32,opt,name=keyword_plan,json=keywordPlan,proto3" json:"keyword_plan,omitempty"`
	// The keyword plan campaign referenced in the query.
	KeywordPlanCampaign *resources.KeywordPlanCampaign `protobuf:"bytes,33,opt,name=keyword_plan_campaign,json=keywordPlanCampaign,proto3" json:"keyword_plan_campaign,omitempty"`
	// The keyword plan negative keyword referenced in the query.
	KeywordPlanNegativeKeyword *resources.KeywordPlanNegativeKeyword `protobuf:"bytes,34,opt,name=keyword_plan_negative_keyword,json=keywordPlanNegativeKeyword,proto3" json:"keyword_plan_negative_keyword,omitempty"`
	// The keyword plan ad group referenced in the query.
	KeywordPlanAdGroup *resources.KeywordPlanAdGroup `protobuf:"bytes,35,opt,name=keyword_plan_ad_group,json=keywordPlanAdGroup,proto3" json:"keyword_plan_ad_group,omitempty"`
	// The keyword plan keyword referenced in the query.
	KeywordPlanKeyword *resources.KeywordPlanKeyword `protobuf:"bytes,36,opt,name=keyword_plan_keyword,json=keywordPlanKeyword,proto3" json:"keyword_plan_keyword,omitempty"`
	// The label referenced in the query.
	Label *resources.Label `protobuf:"bytes,52,opt,name=label,proto3" json:"label,omitempty"`
	// The language constant referenced in the query.
	LanguageConstant *resources.LanguageConstant `protobuf:"bytes,55,opt,name=language_constant,json=languageConstant,proto3" json:"language_constant,omitempty"`
	// The location view referenced in the query.
	LocationView *resources.LocationView `protobuf:"bytes,123,opt,name=location_view,json=locationView,proto3" json:"location_view,omitempty"`
	// The managed placement view referenced in the query.
	ManagedPlacementView *resources.ManagedPlacementView `protobuf:"bytes,53,opt,name=managed_placement_view,json=managedPlacementView,proto3" json:"managed_placement_view,omitempty"`
	// The media file referenced in the query.
	MediaFile *resources.MediaFile `protobuf:"bytes,90,opt,name=media_file,json=mediaFile,proto3" json:"media_file,omitempty"`
	// The mobile app category constant referenced in the query.
	MobileAppCategoryConstant *resources.MobileAppCategoryConstant `protobuf:"bytes,87,opt,name=mobile_app_category_constant,json=mobileAppCategoryConstant,proto3" json:"mobile_app_category_constant,omitempty"`
	// The mobile device constant referenced in the query.
	MobileDeviceConstant *resources.MobileDeviceConstant `protobuf:"bytes,98,opt,name=mobile_device_constant,json=mobileDeviceConstant,proto3" json:"mobile_device_constant,omitempty"`
	// The operating system version constant referenced in the query.
	OperatingSystemVersionConstant *resources.OperatingSystemVersionConstant `protobuf:"bytes,86,opt,name=operating_system_version_constant,json=operatingSystemVersionConstant,proto3" json:"operating_system_version_constant,omitempty"`
	// The parental status view referenced in the query.
	ParentalStatusView *resources.ParentalStatusView `protobuf:"bytes,45,opt,name=parental_status_view,json=parentalStatusView,proto3" json:"parental_status_view,omitempty"`
	// The Product Bidding Category referenced in the query.
	ProductBiddingCategoryConstant *resources.ProductBiddingCategoryConstant `protobuf:"bytes,109,opt,name=product_bidding_category_constant,json=productBiddingCategoryConstant,proto3" json:"product_bidding_category_constant,omitempty"`
	// The product group view referenced in the query.
	ProductGroupView *resources.ProductGroupView `protobuf:"bytes,54,opt,name=product_group_view,json=productGroupView,proto3" json:"product_group_view,omitempty"`
	// The recommendation referenced in the query.
	Recommendation *resources.Recommendation `protobuf:"bytes,22,opt,name=recommendation,proto3" json:"recommendation,omitempty"`
	// The search term view referenced in the query.
	SearchTermView *resources.SearchTermView `protobuf:"bytes,68,opt,name=search_term_view,json=searchTermView,proto3" json:"search_term_view,omitempty"`
	// The shared set referenced in the query.
	SharedCriterion *resources.SharedCriterion `protobuf:"bytes,29,opt,name=shared_criterion,json=sharedCriterion,proto3" json:"shared_criterion,omitempty"`
	// The shared set referenced in the query.
	SharedSet *resources.SharedSet `protobuf:"bytes,27,opt,name=shared_set,json=sharedSet,proto3" json:"shared_set,omitempty"`
	// The shopping performance view referenced in the query.
	ShoppingPerformanceView *resources.ShoppingPerformanceView `protobuf:"bytes,117,opt,name=shopping_performance_view,json=shoppingPerformanceView,proto3" json:"shopping_performance_view,omitempty"`
	// The topic view referenced in the query.
	TopicView *resources.TopicView `protobuf:"bytes,44,opt,name=topic_view,json=topicView,proto3" json:"topic_view,omitempty"`
	// The user interest referenced in the query.
	UserInterest *resources.UserInterest `protobuf:"bytes,59,opt,name=user_interest,json=userInterest,proto3" json:"user_interest,omitempty"`
	// The user list referenced in the query.
	UserList *resources.UserList `protobuf:"bytes,38,opt,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	// The remarketing action referenced in the query.
	RemarketingAction *resources.RemarketingAction `protobuf:"bytes,60,opt,name=remarketing_action,json=remarketingAction,proto3" json:"remarketing_action,omitempty"`
	// The topic constant referenced in the query.
	TopicConstant *resources.TopicConstant `protobuf:"bytes,31,opt,name=topic_constant,json=topicConstant,proto3" json:"topic_constant,omitempty"`
	// The video referenced in the query.
	Video *resources.Video `protobuf:"bytes,39,opt,name=video,proto3" json:"video,omitempty"`
	// The metrics.
	Metrics *common.Metrics `protobuf:"bytes,4,opt,name=metrics,proto3" json:"metrics,omitempty"`
	// The segments.
	Segments             *common.Segments `protobuf:"bytes,102,opt,name=segments,proto3" json:"segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GoogleAdsRow) Reset()         { *m = GoogleAdsRow{} }
func (m *GoogleAdsRow) String() string { return proto.CompactTextString(m) }
func (*GoogleAdsRow) ProtoMessage()    {}
func (*GoogleAdsRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_google_ads_service_7f943554245b1e4e, []int{2}
}
func (m *GoogleAdsRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoogleAdsRow.Unmarshal(m, b)
}
func (m *GoogleAdsRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoogleAdsRow.Marshal(b, m, deterministic)
}
func (dst *GoogleAdsRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleAdsRow.Merge(dst, src)
}
func (m *GoogleAdsRow) XXX_Size() int {
	return xxx_messageInfo_GoogleAdsRow.Size(m)
}
func (m *GoogleAdsRow) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleAdsRow.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleAdsRow proto.InternalMessageInfo

func (m *GoogleAdsRow) GetAccountBudget() *resources.AccountBudget {
	if m != nil {
		return m.AccountBudget
	}
	return nil
}

func (m *GoogleAdsRow) GetAccountBudgetProposal() *resources.AccountBudgetProposal {
	if m != nil {
		return m.AccountBudgetProposal
	}
	return nil
}

func (m *GoogleAdsRow) GetAdGroup() *resources.AdGroup {
	if m != nil {
		return m.AdGroup
	}
	return nil
}

func (m *GoogleAdsRow) GetAdGroupAd() *resources.AdGroupAd {
	if m != nil {
		return m.AdGroupAd
	}
	return nil
}

func (m *GoogleAdsRow) GetAdGroupAdLabel() *resources.AdGroupAdLabel {
	if m != nil {
		return m.AdGroupAdLabel
	}
	return nil
}

func (m *GoogleAdsRow) GetAdGroupAudienceView() *resources.AdGroupAudienceView {
	if m != nil {
		return m.AdGroupAudienceView
	}
	return nil
}

func (m *GoogleAdsRow) GetAdGroupBidModifier() *resources.AdGroupBidModifier {
	if m != nil {
		return m.AdGroupBidModifier
	}
	return nil
}

func (m *GoogleAdsRow) GetAdGroupCriterion() *resources.AdGroupCriterion {
	if m != nil {
		return m.AdGroupCriterion
	}
	return nil
}

func (m *GoogleAdsRow) GetAdGroupCriterionLabel() *resources.AdGroupCriterionLabel {
	if m != nil {
		return m.AdGroupCriterionLabel
	}
	return nil
}

func (m *GoogleAdsRow) GetAdGroupExtensionSetting() *resources.AdGroupExtensionSetting {
	if m != nil {
		return m.AdGroupExtensionSetting
	}
	return nil
}

func (m *GoogleAdsRow) GetAdGroupFeed() *resources.AdGroupFeed {
	if m != nil {
		return m.AdGroupFeed
	}
	return nil
}

func (m *GoogleAdsRow) GetAdGroupLabel() *resources.AdGroupLabel {
	if m != nil {
		return m.AdGroupLabel
	}
	return nil
}

func (m *GoogleAdsRow) GetAgeRangeView() *resources.AgeRangeView {
	if m != nil {
		return m.AgeRangeView
	}
	return nil
}

func (m *GoogleAdsRow) GetAdScheduleView() *resources.AdScheduleView {
	if m != nil {
		return m.AdScheduleView
	}
	return nil
}

func (m *GoogleAdsRow) GetDomainCategory() *resources.DomainCategory {
	if m != nil {
		return m.DomainCategory
	}
	return nil
}

func (m *GoogleAdsRow) GetAsset() *resources.Asset {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *GoogleAdsRow) GetBiddingStrategy() *resources.BiddingStrategy {
	if m != nil {
		return m.BiddingStrategy
	}
	return nil
}

func (m *GoogleAdsRow) GetBillingSetup() *resources.BillingSetup {
	if m != nil {
		return m.BillingSetup
	}
	return nil
}

func (m *GoogleAdsRow) GetCampaignBudget() *resources.CampaignBudget {
	if m != nil {
		return m.CampaignBudget
	}
	return nil
}

func (m *GoogleAdsRow) GetCampaign() *resources.Campaign {
	if m != nil {
		return m.Campaign
	}
	return nil
}

func (m *GoogleAdsRow) GetCampaignAudienceView() *resources.CampaignAudienceView {
	if m != nil {
		return m.CampaignAudienceView
	}
	return nil
}

func (m *GoogleAdsRow) GetCampaignBidModifier() *resources.CampaignBidModifier {
	if m != nil {
		return m.CampaignBidModifier
	}
	return nil
}

func (m *GoogleAdsRow) GetCampaignCriterion() *resources.CampaignCriterion {
	if m != nil {
		return m.CampaignCriterion
	}
	return nil
}

func (m *GoogleAdsRow) GetCampaignExtensionSetting() *resources.CampaignExtensionSetting {
	if m != nil {
		return m.CampaignExtensionSetting
	}
	return nil
}

func (m *GoogleAdsRow) GetCampaignFeed() *resources.CampaignFeed {
	if m != nil {
		return m.CampaignFeed
	}
	return nil
}

func (m *GoogleAdsRow) GetCampaignLabel() *resources.CampaignLabel {
	if m != nil {
		return m.CampaignLabel
	}
	return nil
}

func (m *GoogleAdsRow) GetCampaignSharedSet() *resources.CampaignSharedSet {
	if m != nil {
		return m.CampaignSharedSet
	}
	return nil
}

func (m *GoogleAdsRow) GetCarrierConstant() *resources.CarrierConstant {
	if m != nil {
		return m.CarrierConstant
	}
	return nil
}

func (m *GoogleAdsRow) GetChangeStatus() *resources.ChangeStatus {
	if m != nil {
		return m.ChangeStatus
	}
	return nil
}

func (m *GoogleAdsRow) GetConversionAction() *resources.ConversionAction {
	if m != nil {
		return m.ConversionAction
	}
	return nil
}

func (m *GoogleAdsRow) GetClickView() *resources.ClickView {
	if m != nil {
		return m.ClickView
	}
	return nil
}

func (m *GoogleAdsRow) GetCustomInterest() *resources.CustomInterest {
	if m != nil {
		return m.CustomInterest
	}
	return nil
}

func (m *GoogleAdsRow) GetCustomer() *resources.Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *GoogleAdsRow) GetCustomerManagerLink() *resources.CustomerManagerLink {
	if m != nil {
		return m.CustomerManagerLink
	}
	return nil
}

func (m *GoogleAdsRow) GetCustomerClientLink() *resources.CustomerClientLink {
	if m != nil {
		return m.CustomerClientLink
	}
	return nil
}

func (m *GoogleAdsRow) GetCustomerClient() *resources.CustomerClient {
	if m != nil {
		return m.CustomerClient
	}
	return nil
}

func (m *GoogleAdsRow) GetCustomerExtensionSetting() *resources.CustomerExtensionSetting {
	if m != nil {
		return m.CustomerExtensionSetting
	}
	return nil
}

func (m *GoogleAdsRow) GetCustomerFeed() *resources.CustomerFeed {
	if m != nil {
		return m.CustomerFeed
	}
	return nil
}

func (m *GoogleAdsRow) GetCustomerLabel() *resources.CustomerLabel {
	if m != nil {
		return m.CustomerLabel
	}
	return nil
}

func (m *GoogleAdsRow) GetCustomerNegativeCriterion() *resources.CustomerNegativeCriterion {
	if m != nil {
		return m.CustomerNegativeCriterion
	}
	return nil
}

func (m *GoogleAdsRow) GetDetailPlacementView() *resources.DetailPlacementView {
	if m != nil {
		return m.DetailPlacementView
	}
	return nil
}

func (m *GoogleAdsRow) GetDisplayKeywordView() *resources.DisplayKeywordView {
	if m != nil {
		return m.DisplayKeywordView
	}
	return nil
}

func (m *GoogleAdsRow) GetDynamicSearchAdsSearchTermView() *resources.DynamicSearchAdsSearchTermView {
	if m != nil {
		return m.DynamicSearchAdsSearchTermView
	}
	return nil
}

func (m *GoogleAdsRow) GetExtensionFeedItem() *resources.ExtensionFeedItem {
	if m != nil {
		return m.ExtensionFeedItem
	}
	return nil
}

func (m *GoogleAdsRow) GetFeed() *resources.Feed {
	if m != nil {
		return m.Feed
	}
	return nil
}

func (m *GoogleAdsRow) GetFeedItem() *resources.FeedItem {
	if m != nil {
		return m.FeedItem
	}
	return nil
}

func (m *GoogleAdsRow) GetFeedItemTarget() *resources.FeedItemTarget {
	if m != nil {
		return m.FeedItemTarget
	}
	return nil
}

func (m *GoogleAdsRow) GetFeedMapping() *resources.FeedMapping {
	if m != nil {
		return m.FeedMapping
	}
	return nil
}

func (m *GoogleAdsRow) GetFeedPlaceholderView() *resources.FeedPlaceholderView {
	if m != nil {
		return m.FeedPlaceholderView
	}
	return nil
}

func (m *GoogleAdsRow) GetGenderView() *resources.GenderView {
	if m != nil {
		return m.GenderView
	}
	return nil
}

func (m *GoogleAdsRow) GetGeoTargetConstant() *resources.GeoTargetConstant {
	if m != nil {
		return m.GeoTargetConstant
	}
	return nil
}

func (m *GoogleAdsRow) GetGeographicView() *resources.GeographicView {
	if m != nil {
		return m.GeographicView
	}
	return nil
}

func (m *GoogleAdsRow) GetGroupPlacementView() *resources.GroupPlacementView {
	if m != nil {
		return m.GroupPlacementView
	}
	return nil
}

func (m *GoogleAdsRow) GetHotelGroupView() *resources.HotelGroupView {
	if m != nil {
		return m.HotelGroupView
	}
	return nil
}

func (m *GoogleAdsRow) GetHotelPerformanceView() *resources.HotelPerformanceView {
	if m != nil {
		return m.HotelPerformanceView
	}
	return nil
}

func (m *GoogleAdsRow) GetKeywordView() *resources.KeywordView {
	if m != nil {
		return m.KeywordView
	}
	return nil
}

func (m *GoogleAdsRow) GetKeywordPlan() *resources.KeywordPlan {
	if m != nil {
		return m.KeywordPlan
	}
	return nil
}

func (m *GoogleAdsRow) GetKeywordPlanCampaign() *resources.KeywordPlanCampaign {
	if m != nil {
		return m.KeywordPlanCampaign
	}
	return nil
}

func (m *GoogleAdsRow) GetKeywordPlanNegativeKeyword() *resources.KeywordPlanNegativeKeyword {
	if m != nil {
		return m.KeywordPlanNegativeKeyword
	}
	return nil
}

func (m *GoogleAdsRow) GetKeywordPlanAdGroup() *resources.KeywordPlanAdGroup {
	if m != nil {
		return m.KeywordPlanAdGroup
	}
	return nil
}

func (m *GoogleAdsRow) GetKeywordPlanKeyword() *resources.KeywordPlanKeyword {
	if m != nil {
		return m.KeywordPlanKeyword
	}
	return nil
}

func (m *GoogleAdsRow) GetLabel() *resources.Label {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *GoogleAdsRow) GetLanguageConstant() *resources.LanguageConstant {
	if m != nil {
		return m.LanguageConstant
	}
	return nil
}

func (m *GoogleAdsRow) GetLocationView() *resources.LocationView {
	if m != nil {
		return m.LocationView
	}
	return nil
}

func (m *GoogleAdsRow) GetManagedPlacementView() *resources.ManagedPlacementView {
	if m != nil {
		return m.ManagedPlacementView
	}
	return nil
}

func (m *GoogleAdsRow) GetMediaFile() *resources.MediaFile {
	if m != nil {
		return m.MediaFile
	}
	return nil
}

func (m *GoogleAdsRow) GetMobileAppCategoryConstant() *resources.MobileAppCategoryConstant {
	if m != nil {
		return m.MobileAppCategoryConstant
	}
	return nil
}

func (m *GoogleAdsRow) GetMobileDeviceConstant() *resources.MobileDeviceConstant {
	if m != nil {
		return m.MobileDeviceConstant
	}
	return nil
}

func (m *GoogleAdsRow) GetOperatingSystemVersionConstant() *resources.OperatingSystemVersionConstant {
	if m != nil {
		return m.OperatingSystemVersionConstant
	}
	return nil
}

func (m *GoogleAdsRow) GetParentalStatusView() *resources.ParentalStatusView {
	if m != nil {
		return m.ParentalStatusView
	}
	return nil
}

func (m *GoogleAdsRow) GetProductBiddingCategoryConstant() *resources.ProductBiddingCategoryConstant {
	if m != nil {
		return m.ProductBiddingCategoryConstant
	}
	return nil
}

func (m *GoogleAdsRow) GetProductGroupView() *resources.ProductGroupView {
	if m != nil {
		return m.ProductGroupView
	}
	return nil
}

func (m *GoogleAdsRow) GetRecommendation() *resources.Recommendation {
	if m != nil {
		return m.Recommendation
	}
	return nil
}

func (m *GoogleAdsRow) GetSearchTermView() *resources.SearchTermView {
	if m != nil {
		return m.SearchTermView
	}
	return nil
}

func (m *GoogleAdsRow) GetSharedCriterion() *resources.SharedCriterion {
	if m != nil {
		return m.SharedCriterion
	}
	return nil
}

func (m *GoogleAdsRow) GetSharedSet() *resources.SharedSet {
	if m != nil {
		return m.SharedSet
	}
	return nil
}

func (m *GoogleAdsRow) GetShoppingPerformanceView() *resources.ShoppingPerformanceView {
	if m != nil {
		return m.ShoppingPerformanceView
	}
	return nil
}

func (m *GoogleAdsRow) GetTopicView() *resources.TopicView {
	if m != nil {
		return m.TopicView
	}
	return nil
}

func (m *GoogleAdsRow) GetUserInterest() *resources.UserInterest {
	if m != nil {
		return m.UserInterest
	}
	return nil
}

func (m *GoogleAdsRow) GetUserList() *resources.UserList {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *GoogleAdsRow) GetRemarketingAction() *resources.RemarketingAction {
	if m != nil {
		return m.RemarketingAction
	}
	return nil
}

func (m *GoogleAdsRow) GetTopicConstant() *resources.TopicConstant {
	if m != nil {
		return m.TopicConstant
	}
	return nil
}

func (m *GoogleAdsRow) GetVideo() *resources.Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *GoogleAdsRow) GetMetrics() *common.Metrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *GoogleAdsRow) GetSegments() *common.Segments {
	if m != nil {
		return m.Segments
	}
	return nil
}

// Request message for [GoogleAdsService.Mutate][google.ads.googleads.v1.services.GoogleAdsService.Mutate].
type MutateGoogleAdsRequest struct {
	// The ID of the customer whose resources are being modified.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// The list of operations to perform on individual resources.
	MutateOperations []*MutateOperation `protobuf:"bytes,2,rep,name=mutate_operations,json=mutateOperations,proto3" json:"mutate_operations,omitempty"`
	// If true, successful operations will be carried out and invalid
	// operations will return errors. If false, all operations will be carried
	// out in one transaction if and only if they are all valid.
	// Default is false.
	PartialFailure bool `protobuf:"varint,3,opt,name=partial_failure,json=partialFailure,proto3" json:"partial_failure,omitempty"`
	// If true, the request is validated but not executed. Only errors are
	// returned, not results.
	ValidateOnly         bool     `protobuf:"varint,4,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MutateGoogleAdsRequest) Reset()         { *m = MutateGoogleAdsRequest{} }
func (m *MutateGoogleAdsRequest) String() string { return proto.CompactTextString(m) }
func (*MutateGoogleAdsRequest) ProtoMessage()    {}
func (*MutateGoogleAdsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_google_ads_service_7f943554245b1e4e, []int{3}
}
func (m *MutateGoogleAdsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateGoogleAdsRequest.Unmarshal(m, b)
}
func (m *MutateGoogleAdsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateGoogleAdsRequest.Marshal(b, m, deterministic)
}
func (dst *MutateGoogleAdsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateGoogleAdsRequest.Merge(dst, src)
}
func (m *MutateGoogleAdsRequest) XXX_Size() int {
	return xxx_messageInfo_MutateGoogleAdsRequest.Size(m)
}
func (m *MutateGoogleAdsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateGoogleAdsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MutateGoogleAdsRequest proto.InternalMessageInfo

func (m *MutateGoogleAdsRequest) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *MutateGoogleAdsRequest) GetMutateOperations() []*MutateOperation {
	if m != nil {
		return m.MutateOperations
	}
	return nil
}

func (m *MutateGoogleAdsRequest) GetPartialFailure() bool {
	if m != nil {
		return m.PartialFailure
	}
	return false
}

func (m *MutateGoogleAdsRequest) GetValidateOnly() bool {
	if m != nil {
		return m.ValidateOnly
	}
	return false
}

// Response message for [GoogleAdsService.Mutate][google.ads.googleads.v1.services.GoogleAdsService.Mutate].
type MutateGoogleAdsResponse struct {
	// Errors that pertain to operation failures in the partial failure mode.
	// Returned only when partial_failure = true and all errors occur inside the
	// operations. If any errors occur outside the operations (e.g. auth errors),
	// we return an RPC level error.
	PartialFailureError *status.Status `protobuf:"bytes,3,opt,name=partial_failure_error,json=partialFailureError,proto3" json:"partial_failure_error,omitempty"`
	// All responses for the mutate.
	MutateOperationResponses []*MutateOperationResponse `protobuf:"bytes,1,rep,name=mutate_operation_responses,json=mutateOperationResponses,proto3" json:"mutate_operation_responses,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                   `json:"-"`
	XXX_unrecognized         []byte                     `json:"-"`
	XXX_sizecache            int32                      `json:"-"`
}

func (m *MutateGoogleAdsResponse) Reset()         { *m = MutateGoogleAdsResponse{} }
func (m *MutateGoogleAdsResponse) String() string { return proto.CompactTextString(m) }
func (*MutateGoogleAdsResponse) ProtoMessage()    {}
func (*MutateGoogleAdsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_google_ads_service_7f943554245b1e4e, []int{4}
}
func (m *MutateGoogleAdsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateGoogleAdsResponse.Unmarshal(m, b)
}
func (m *MutateGoogleAdsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateGoogleAdsResponse.Marshal(b, m, deterministic)
}
func (dst *MutateGoogleAdsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateGoogleAdsResponse.Merge(dst, src)
}
func (m *MutateGoogleAdsResponse) XXX_Size() int {
	return xxx_messageInfo_MutateGoogleAdsResponse.Size(m)
}
func (m *MutateGoogleAdsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateGoogleAdsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MutateGoogleAdsResponse proto.InternalMessageInfo

func (m *MutateGoogleAdsResponse) GetPartialFailureError() *status.Status {
	if m != nil {
		return m.PartialFailureError
	}
	return nil
}

func (m *MutateGoogleAdsResponse) GetMutateOperationResponses() []*MutateOperationResponse {
	if m != nil {
		return m.MutateOperationResponses
	}
	return nil
}

// A single operation (create, update, remove) on a resource.
type MutateOperation struct {
	// The mutate operation.
	//
	// Types that are valid to be assigned to Operation:
	//	*MutateOperation_AdGroupAdLabelOperation
	//	*MutateOperation_AdGroupAdOperation
	//	*MutateOperation_AdGroupBidModifierOperation
	//	*MutateOperation_AdGroupCriterionLabelOperation
	//	*MutateOperation_AdGroupCriterionOperation
	//	*MutateOperation_AdGroupExtensionSettingOperation
	//	*MutateOperation_AdGroupFeedOperation
	//	*MutateOperation_AdGroupLabelOperation
	//	*MutateOperation_AdGroupOperation
	//	*MutateOperation_AdParameterOperation
	//	*MutateOperation_AssetOperation
	//	*MutateOperation_BiddingStrategyOperation
	//	*MutateOperation_CampaignBidModifierOperation
	//	*MutateOperation_CampaignBudgetOperation
	//	*MutateOperation_CampaignCriterionOperation
	//	*MutateOperation_CampaignExtensionSettingOperation
	//	*MutateOperation_CampaignFeedOperation
	//	*MutateOperation_CampaignLabelOperation
	//	*MutateOperation_CampaignOperation
	//	*MutateOperation_CampaignSharedSetOperation
	//	*MutateOperation_ConversionActionOperation
	//	*MutateOperation_CustomerExtensionSettingOperation
	//	*MutateOperation_CustomerFeedOperation
	//	*MutateOperation_CustomerLabelOperation
	//	*MutateOperation_CustomerNegativeCriterionOperation
	//	*MutateOperation_CustomerOperation
	//	*MutateOperation_ExtensionFeedItemOperation
	//	*MutateOperation_FeedItemOperation
	//	*MutateOperation_FeedItemTargetOperation
	//	*MutateOperation_FeedMappingOperation
	//	*MutateOperation_FeedOperation
	//	*MutateOperation_LabelOperation
	//	*MutateOperation_MediaFileOperation
	//	*MutateOperation_RemarketingActionOperation
	//	*MutateOperation_SharedCriterionOperation
	//	*MutateOperation_SharedSetOperation
	//	*MutateOperation_UserListOperation
	Operation            isMutateOperation_Operation `protobuf_oneof:"operation"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *MutateOperation) Reset()         { *m = MutateOperation{} }
func (m *MutateOperation) String() string { return proto.CompactTextString(m) }
func (*MutateOperation) ProtoMessage()    {}
func (*MutateOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_google_ads_service_7f943554245b1e4e, []int{5}
}
func (m *MutateOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateOperation.Unmarshal(m, b)
}
func (m *MutateOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateOperation.Marshal(b, m, deterministic)
}
func (dst *MutateOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateOperation.Merge(dst, src)
}
func (m *MutateOperation) XXX_Size() int {
	return xxx_messageInfo_MutateOperation.Size(m)
}
func (m *MutateOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateOperation.DiscardUnknown(m)
}

var xxx_messageInfo_MutateOperation proto.InternalMessageInfo

type isMutateOperation_Operation interface {
	isMutateOperation_Operation()
}

type MutateOperation_AdGroupAdLabelOperation struct {
	AdGroupAdLabelOperation *AdGroupAdLabelOperation `protobuf:"bytes,17,opt,name=ad_group_ad_label_operation,json=adGroupAdLabelOperation,proto3,oneof"`
}

type MutateOperation_AdGroupAdOperation struct {
	AdGroupAdOperation *AdGroupAdOperation `protobuf:"bytes,1,opt,name=ad_group_ad_operation,json=adGroupAdOperation,proto3,oneof"`
}

type MutateOperation_AdGroupBidModifierOperation struct {
	AdGroupBidModifierOperation *AdGroupBidModifierOperation `protobuf:"bytes,2,opt,name=ad_group_bid_modifier_operation,json=adGroupBidModifierOperation,proto3,oneof"`
}

type MutateOperation_AdGroupCriterionLabelOperation struct {
	AdGroupCriterionLabelOperation *AdGroupCriterionLabelOperation `protobuf:"bytes,18,opt,name=ad_group_criterion_label_operation,json=adGroupCriterionLabelOperation,proto3,oneof"`
}

type MutateOperation_AdGroupCriterionOperation struct {
	AdGroupCriterionOperation *AdGroupCriterionOperation `protobuf:"bytes,3,opt,name=ad_group_criterion_operation,json=adGroupCriterionOperation,proto3,oneof"`
}

type MutateOperation_AdGroupExtensionSettingOperation struct {
	AdGroupExtensionSettingOperation *AdGroupExtensionSettingOperation `protobuf:"bytes,19,opt,name=ad_group_extension_setting_operation,json=adGroupExtensionSettingOperation,proto3,oneof"`
}

type MutateOperation_AdGroupFeedOperation struct {
	AdGroupFeedOperation *AdGroupFeedOperation `protobuf:"bytes,20,opt,name=ad_group_feed_operation,json=adGroupFeedOperation,proto3,oneof"`
}

type MutateOperation_AdGroupLabelOperation struct {
	AdGroupLabelOperation *AdGroupLabelOperation `protobuf:"bytes,21,opt,name=ad_group_label_operation,json=adGroupLabelOperation,proto3,oneof"`
}

type MutateOperation_AdGroupOperation struct {
	AdGroupOperation *AdGroupOperation `protobuf:"bytes,5,opt,name=ad_group_operation,json=adGroupOperation,proto3,oneof"`
}

type MutateOperation_AdParameterOperation struct {
	AdParameterOperation *AdParameterOperation `protobuf:"bytes,22,opt,name=ad_parameter_operation,json=adParameterOperation,proto3,oneof"`
}

type MutateOperation_AssetOperation struct {
	AssetOperation *AssetOperation `protobuf:"bytes,23,opt,name=asset_operation,json=assetOperation,proto3,oneof"`
}

type MutateOperation_BiddingStrategyOperation struct {
	BiddingStrategyOperation *BiddingStrategyOperation `protobuf:"bytes,6,opt,name=bidding_strategy_operation,json=biddingStrategyOperation,proto3,oneof"`
}

type MutateOperation_CampaignBidModifierOperation struct {
	CampaignBidModifierOperation *CampaignBidModifierOperation `protobuf:"bytes,7,opt,name=campaign_bid_modifier_operation,json=campaignBidModifierOperation,proto3,oneof"`
}

type MutateOperation_CampaignBudgetOperation struct {
	CampaignBudgetOperation *CampaignBudgetOperation `protobuf:"bytes,8,opt,name=campaign_budget_operation,json=campaignBudgetOperation,proto3,oneof"`
}

type MutateOperation_CampaignCriterionOperation struct {
	CampaignCriterionOperation *CampaignCriterionOperation `protobuf:"bytes,13,opt,name=campaign_criterion_operation,json=campaignCriterionOperation,proto3,oneof"`
}

type MutateOperation_CampaignExtensionSettingOperation struct {
	CampaignExtensionSettingOperation *CampaignExtensionSettingOperation `protobuf:"bytes,26,opt,name=campaign_extension_setting_operation,json=campaignExtensionSettingOperation,proto3,oneof"`
}

type MutateOperation_CampaignFeedOperation struct {
	CampaignFeedOperation *CampaignFeedOperation `protobuf:"bytes,27,opt,name=campaign_feed_operation,json=campaignFeedOperation,proto3,oneof"`
}

type MutateOperation_CampaignLabelOperation struct {
	CampaignLabelOperation *CampaignLabelOperation `protobuf:"bytes,28,opt,name=campaign_label_operation,json=campaignLabelOperation,proto3,oneof"`
}

type MutateOperation_CampaignOperation struct {
	CampaignOperation *CampaignOperation `protobuf:"bytes,10,opt,name=campaign_operation,json=campaignOperation,proto3,oneof"`
}

type MutateOperation_CampaignSharedSetOperation struct {
	CampaignSharedSetOperation *CampaignSharedSetOperation `protobuf:"bytes,11,opt,name=campaign_shared_set_operation,json=campaignSharedSetOperation,proto3,oneof"`
}

type MutateOperation_ConversionActionOperation struct {
	ConversionActionOperation *ConversionActionOperation `protobuf:"bytes,12,opt,name=conversion_action_operation,json=conversionActionOperation,proto3,oneof"`
}

type MutateOperation_CustomerExtensionSettingOperation struct {
	CustomerExtensionSettingOperation *CustomerExtensionSettingOperation `protobuf:"bytes,30,opt,name=customer_extension_setting_operation,json=customerExtensionSettingOperation,proto3,oneof"`
}

type MutateOperation_CustomerFeedOperation struct {
	CustomerFeedOperation *CustomerFeedOperation `protobuf:"bytes,31,opt,name=customer_feed_operation,json=customerFeedOperation,proto3,oneof"`
}

type MutateOperation_CustomerLabelOperation struct {
	CustomerLabelOperation *CustomerLabelOperation `protobuf:"bytes,32,opt,name=customer_label_operation,json=customerLabelOperation,proto3,oneof"`
}

type MutateOperation_CustomerNegativeCriterionOperation struct {
	CustomerNegativeCriterionOperation *CustomerNegativeCriterionOperation `protobuf:"bytes,34,opt,name=customer_negative_criterion_operation,json=customerNegativeCriterionOperation,proto3,oneof"`
}

type MutateOperation_CustomerOperation struct {
	CustomerOperation *CustomerOperation `protobuf:"bytes,35,opt,name=customer_operation,json=customerOperation,proto3,oneof"`
}

type MutateOperation_ExtensionFeedItemOperation struct {
	ExtensionFeedItemOperation *ExtensionFeedItemOperation `protobuf:"bytes,36,opt,name=extension_feed_item_operation,json=extensionFeedItemOperation,proto3,oneof"`
}

type MutateOperation_FeedItemOperation struct {
	FeedItemOperation *FeedItemOperation `protobuf:"bytes,37,opt,name=feed_item_operation,json=feedItemOperation,proto3,oneof"`
}

type MutateOperation_FeedItemTargetOperation struct {
	FeedItemTargetOperation *FeedItemTargetOperation `protobuf:"bytes,38,opt,name=feed_item_target_operation,json=feedItemTargetOperation,proto3,oneof"`
}

type MutateOperation_FeedMappingOperation struct {
	FeedMappingOperation *FeedMappingOperation `protobuf:"bytes,39,opt,name=feed_mapping_operation,json=feedMappingOperation,proto3,oneof"`
}

type MutateOperation_FeedOperation struct {
	FeedOperation *FeedOperation `protobuf:"bytes,40,opt,name=feed_operation,json=feedOperation,proto3,oneof"`
}

type MutateOperation_LabelOperation struct {
	LabelOperation *LabelOperation `protobuf:"bytes,41,opt,name=label_operation,json=labelOperation,proto3,oneof"`
}

type MutateOperation_MediaFileOperation struct {
	MediaFileOperation *MediaFileOperation `protobuf:"bytes,42,opt,name=media_file_operation,json=mediaFileOperation,proto3,oneof"`
}

type MutateOperation_RemarketingActionOperation struct {
	RemarketingActionOperation *RemarketingActionOperation `protobuf:"bytes,43,opt,name=remarketing_action_operation,json=remarketingActionOperation,proto3,oneof"`
}

type MutateOperation_SharedCriterionOperation struct {
	SharedCriterionOperation *SharedCriterionOperation `protobuf:"bytes,14,opt,name=shared_criterion_operation,json=sharedCriterionOperation,proto3,oneof"`
}

type MutateOperation_SharedSetOperation struct {
	SharedSetOperation *SharedSetOperation `protobuf:"bytes,15,opt,name=shared_set_operation,json=sharedSetOperation,proto3,oneof"`
}

type MutateOperation_UserListOperation struct {
	UserListOperation *UserListOperation `protobuf:"bytes,16,opt,name=user_list_operation,json=userListOperation,proto3,oneof"`
}

func (*MutateOperation_AdGroupAdLabelOperation) isMutateOperation_Operation() {}

func (*MutateOperation_AdGroupAdOperation) isMutateOperation_Operation() {}

func (*MutateOperation_AdGroupBidModifierOperation) isMutateOperation_Operation() {}

func (*MutateOperation_AdGroupCriterionLabelOperation) isMutateOperation_Operation() {}

func (*MutateOperation_AdGroupCriterionOperation) isMutateOperation_Operation() {}

func (*MutateOperation_AdGroupExtensionSettingOperation) isMutateOperation_Operation() {}

func (*MutateOperation_AdGroupFeedOperation) isMutateOperation_Operation() {}

func (*MutateOperation_AdGroupLabelOperation) isMutateOperation_Operation() {}

func (*MutateOperation_AdGroupOperation) isMutateOperation_Operation() {}

func (*MutateOperation_AdParameterOperation) isMutateOperation_Operation() {}

func (*MutateOperation_AssetOperation) isMutateOperation_Operation() {}

func (*MutateOperation_BiddingStrategyOperation) isMutateOperation_Operation() {}

func (*MutateOperation_CampaignBidModifierOperation) isMutateOperation_Operation() {}

func (*MutateOperation_CampaignBudgetOperation) isMutateOperation_Operation() {}

func (*MutateOperation_CampaignCriterionOperation) isMutateOperation_Operation() {}

func (*MutateOperation_CampaignExtensionSettingOperation) isMutateOperation_Operation() {}

func (*MutateOperation_CampaignFeedOperation) isMutateOperation_Operation() {}

func (*MutateOperation_CampaignLabelOperation) isMutateOperation_Operation() {}

func (*MutateOperation_CampaignOperation) isMutateOperation_Operation() {}

func (*MutateOperation_CampaignSharedSetOperation) isMutateOperation_Operation() {}

func (*MutateOperation_ConversionActionOperation) isMutateOperation_Operation() {}

func (*MutateOperation_CustomerExtensionSettingOperation) isMutateOperation_Operation() {}

func (*MutateOperation_CustomerFeedOperation) isMutateOperation_Operation() {}

func (*MutateOperation_CustomerLabelOperation) isMutateOperation_Operation() {}

func (*MutateOperation_CustomerNegativeCriterionOperation) isMutateOperation_Operation() {}

func (*MutateOperation_CustomerOperation) isMutateOperation_Operation() {}

func (*MutateOperation_ExtensionFeedItemOperation) isMutateOperation_Operation() {}

func (*MutateOperation_FeedItemOperation) isMutateOperation_Operation() {}

func (*MutateOperation_FeedItemTargetOperation) isMutateOperation_Operation() {}

func (*MutateOperation_FeedMappingOperation) isMutateOperation_Operation() {}

func (*MutateOperation_FeedOperation) isMutateOperation_Operation() {}

func (*MutateOperation_LabelOperation) isMutateOperation_Operation() {}

func (*MutateOperation_MediaFileOperation) isMutateOperation_Operation() {}

func (*MutateOperation_RemarketingActionOperation) isMutateOperation_Operation() {}

func (*MutateOperation_SharedCriterionOperation) isMutateOperation_Operation() {}

func (*MutateOperation_SharedSetOperation) isMutateOperation_Operation() {}

func (*MutateOperation_UserListOperation) isMutateOperation_Operation() {}

func (m *MutateOperation) GetOperation() isMutateOperation_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *MutateOperation) GetAdGroupAdLabelOperation() *AdGroupAdLabelOperation {
	if x, ok := m.GetOperation().(*MutateOperation_AdGroupAdLabelOperation); ok {
		return x.AdGroupAdLabelOperation
	}
	return nil
}

func (m *MutateOperation) GetAdGroupAdOperation() *AdGroupAdOperation {
	if x, ok := m.GetOperation().(*MutateOperation_AdGroupAdOperation); ok {
		return x.AdGroupAdOperation
	}
	return nil
}

func (m *MutateOperation) GetAdGroupBidModifierOperation() *AdGroupBidModifierOperation {
	if x, ok := m.GetOperation().(*MutateOperation_AdGroupBidModifierOperation); ok {
		return x.AdGroupBidModifierOperation
	}
	return nil
}

func (m *MutateOperation) GetAdGroupCriterionLabelOperation() *AdGroupCriterionLabelOperation {
	if x, ok := m.GetOperation().(*MutateOperation_AdGroupCriterionLabelOperation); ok {
		return x.AdGroupCriterionLabelOperation
	}
	return nil
}

func (m *MutateOperation) GetAdGroupCriterionOperation() *AdGroupCriterionOperation {
	if x, ok := m.GetOperation().(*MutateOperation_AdGroupCriterionOperation); ok {
		return x.AdGroupCriterionOperation
	}
	return nil
}

func (m *MutateOperation) GetAdGroupExtensionSettingOperation() *AdGroupExtensionSettingOperation {
	if x, ok := m.GetOperation().(*MutateOperation_AdGroupExtensionSettingOperation); ok {
		return x.AdGroupExtensionSettingOperation
	}
	return nil
}

func (m *MutateOperation) GetAdGroupFeedOperation() *AdGroupFeedOperation {
	if x, ok := m.GetOperation().(*MutateOperation_AdGroupFeedOperation); ok {
		return x.AdGroupFeedOperation
	}
	return nil
}

func (m *MutateOperation) GetAdGroupLabelOperation() *AdGroupLabelOperation {
	if x, ok := m.GetOperation().(*MutateOperation_AdGroupLabelOperation); ok {
		return x.AdGroupLabelOperation
	}
	return nil
}

func (m *MutateOperation) GetAdGroupOperation() *AdGroupOperation {
	if x, ok := m.GetOperation().(*MutateOperation_AdGroupOperation); ok {
		return x.AdGroupOperation
	}
	return nil
}

func (m *MutateOperation) GetAdParameterOperation() *AdParameterOperation {
	if x, ok := m.GetOperation().(*MutateOperation_AdParameterOperation); ok {
		return x.AdParameterOperation
	}
	return nil
}

func (m *MutateOperation) GetAssetOperation() *AssetOperation {
	if x, ok := m.GetOperation().(*MutateOperation_AssetOperation); ok {
		return x.AssetOperation
	}
	return nil
}

func (m *MutateOperation) GetBiddingStrategyOperation() *BiddingStrategyOperation {
	if x, ok := m.GetOperation().(*MutateOperation_BiddingStrategyOperation); ok {
		return x.BiddingStrategyOperation
	}
	return nil
}

func (m *MutateOperation) GetCampaignBidModifierOperation() *CampaignBidModifierOperation {
	if x, ok := m.GetOperation().(*MutateOperation_CampaignBidModifierOperation); ok {
		return x.CampaignBidModifierOperation
	}
	return nil
}

func (m *MutateOperation) GetCampaignBudgetOperation() *CampaignBudgetOperation {
	if x, ok := m.GetOperation().(*MutateOperation_CampaignBudgetOperation); ok {
		return x.CampaignBudgetOperation
	}
	return nil
}

func (m *MutateOperation) GetCampaignCriterionOperation() *CampaignCriterionOperation {
	if x, ok := m.GetOperation().(*MutateOperation_CampaignCriterionOperation); ok {
		return x.CampaignCriterionOperation
	}
	return nil
}

func (m *MutateOperation) GetCampaignExtensionSettingOperation() *CampaignExtensionSettingOperation {
	if x, ok := m.GetOperation().(*MutateOperation_CampaignExtensionSettingOperation); ok {
		return x.CampaignExtensionSettingOperation
	}
	return nil
}

func (m *MutateOperation) GetCampaignFeedOperation() *CampaignFeedOperation {
	if x, ok := m.GetOperation().(*MutateOperation_CampaignFeedOperation); ok {
		return x.CampaignFeedOperation
	}
	return nil
}

func (m *MutateOperation) GetCampaignLabelOperation() *CampaignLabelOperation {
	if x, ok := m.GetOperation().(*MutateOperation_CampaignLabelOperation); ok {
		return x.CampaignLabelOperation
	}
	return nil
}

func (m *MutateOperation) GetCampaignOperation() *CampaignOperation {
	if x, ok := m.GetOperation().(*MutateOperation_CampaignOperation); ok {
		return x.CampaignOperation
	}
	return nil
}

func (m *MutateOperation) GetCampaignSharedSetOperation() *CampaignSharedSetOperation {
	if x, ok := m.GetOperation().(*MutateOperation_CampaignSharedSetOperation); ok {
		return x.CampaignSharedSetOperation
	}
	return nil
}

func (m *MutateOperation) GetConversionActionOperation() *ConversionActionOperation {
	if x, ok := m.GetOperation().(*MutateOperation_ConversionActionOperation); ok {
		return x.ConversionActionOperation
	}
	return nil
}

func (m *MutateOperation) GetCustomerExtensionSettingOperation() *CustomerExtensionSettingOperation {
	if x, ok := m.GetOperation().(*MutateOperation_CustomerExtensionSettingOperation); ok {
		return x.CustomerExtensionSettingOperation
	}
	return nil
}

func (m *MutateOperation) GetCustomerFeedOperation() *CustomerFeedOperation {
	if x, ok := m.GetOperation().(*MutateOperation_CustomerFeedOperation); ok {
		return x.CustomerFeedOperation
	}
	return nil
}

func (m *MutateOperation) GetCustomerLabelOperation() *CustomerLabelOperation {
	if x, ok := m.GetOperation().(*MutateOperation_CustomerLabelOperation); ok {
		return x.CustomerLabelOperation
	}
	return nil
}

func (m *MutateOperation) GetCustomerNegativeCriterionOperation() *CustomerNegativeCriterionOperation {
	if x, ok := m.GetOperation().(*MutateOperation_CustomerNegativeCriterionOperation); ok {
		return x.CustomerNegativeCriterionOperation
	}
	return nil
}

func (m *MutateOperation) GetCustomerOperation() *CustomerOperation {
	if x, ok := m.GetOperation().(*MutateOperation_CustomerOperation); ok {
		return x.CustomerOperation
	}
	return nil
}

func (m *MutateOperation) GetExtensionFeedItemOperation() *ExtensionFeedItemOperation {
	if x, ok := m.GetOperation().(*MutateOperation_ExtensionFeedItemOperation); ok {
		return x.ExtensionFeedItemOperation
	}
	return nil
}

func (m *MutateOperation) GetFeedItemOperation() *FeedItemOperation {
	if x, ok := m.GetOperation().(*MutateOperation_FeedItemOperation); ok {
		return x.FeedItemOperation
	}
	return nil
}

func (m *MutateOperation) GetFeedItemTargetOperation() *FeedItemTargetOperation {
	if x, ok := m.GetOperation().(*MutateOperation_FeedItemTargetOperation); ok {
		return x.FeedItemTargetOperation
	}
	return nil
}

func (m *MutateOperation) GetFeedMappingOperation() *FeedMappingOperation {
	if x, ok := m.GetOperation().(*MutateOperation_FeedMappingOperation); ok {
		return x.FeedMappingOperation
	}
	return nil
}

func (m *MutateOperation) GetFeedOperation() *FeedOperation {
	if x, ok := m.GetOperation().(*MutateOperation_FeedOperation); ok {
		return x.FeedOperation
	}
	return nil
}

func (m *MutateOperation) GetLabelOperation() *LabelOperation {
	if x, ok := m.GetOperation().(*MutateOperation_LabelOperation); ok {
		return x.LabelOperation
	}
	return nil
}

func (m *MutateOperation) GetMediaFileOperation() *MediaFileOperation {
	if x, ok := m.GetOperation().(*MutateOperation_MediaFileOperation); ok {
		return x.MediaFileOperation
	}
	return nil
}

func (m *MutateOperation) GetRemarketingActionOperation() *RemarketingActionOperation {
	if x, ok := m.GetOperation().(*MutateOperation_RemarketingActionOperation); ok {
		return x.RemarketingActionOperation
	}
	return nil
}

func (m *MutateOperation) GetSharedCriterionOperation() *SharedCriterionOperation {
	if x, ok := m.GetOperation().(*MutateOperation_SharedCriterionOperation); ok {
		return x.SharedCriterionOperation
	}
	return nil
}

func (m *MutateOperation) GetSharedSetOperation() *SharedSetOperation {
	if x, ok := m.GetOperation().(*MutateOperation_SharedSetOperation); ok {
		return x.SharedSetOperation
	}
	return nil
}

func (m *MutateOperation) GetUserListOperation() *UserListOperation {
	if x, ok := m.GetOperation().(*MutateOperation_UserListOperation); ok {
		return x.UserListOperation
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MutateOperation) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MutateOperation_OneofMarshaler, _MutateOperation_OneofUnmarshaler, _MutateOperation_OneofSizer, []interface{}{
		(*MutateOperation_AdGroupAdLabelOperation)(nil),
		(*MutateOperation_AdGroupAdOperation)(nil),
		(*MutateOperation_AdGroupBidModifierOperation)(nil),
		(*MutateOperation_AdGroupCriterionLabelOperation)(nil),
		(*MutateOperation_AdGroupCriterionOperation)(nil),
		(*MutateOperation_AdGroupExtensionSettingOperation)(nil),
		(*MutateOperation_AdGroupFeedOperation)(nil),
		(*MutateOperation_AdGroupLabelOperation)(nil),
		(*MutateOperation_AdGroupOperation)(nil),
		(*MutateOperation_AdParameterOperation)(nil),
		(*MutateOperation_AssetOperation)(nil),
		(*MutateOperation_BiddingStrategyOperation)(nil),
		(*MutateOperation_CampaignBidModifierOperation)(nil),
		(*MutateOperation_CampaignBudgetOperation)(nil),
		(*MutateOperation_CampaignCriterionOperation)(nil),
		(*MutateOperation_CampaignExtensionSettingOperation)(nil),
		(*MutateOperation_CampaignFeedOperation)(nil),
		(*MutateOperation_CampaignLabelOperation)(nil),
		(*MutateOperation_CampaignOperation)(nil),
		(*MutateOperation_CampaignSharedSetOperation)(nil),
		(*MutateOperation_ConversionActionOperation)(nil),
		(*MutateOperation_CustomerExtensionSettingOperation)(nil),
		(*MutateOperation_CustomerFeedOperation)(nil),
		(*MutateOperation_CustomerLabelOperation)(nil),
		(*MutateOperation_CustomerNegativeCriterionOperation)(nil),
		(*MutateOperation_CustomerOperation)(nil),
		(*MutateOperation_ExtensionFeedItemOperation)(nil),
		(*MutateOperation_FeedItemOperation)(nil),
		(*MutateOperation_FeedItemTargetOperation)(nil),
		(*MutateOperation_FeedMappingOperation)(nil),
		(*MutateOperation_FeedOperation)(nil),
		(*MutateOperation_LabelOperation)(nil),
		(*MutateOperation_MediaFileOperation)(nil),
		(*MutateOperation_RemarketingActionOperation)(nil),
		(*MutateOperation_SharedCriterionOperation)(nil),
		(*MutateOperation_SharedSetOperation)(nil),
		(*MutateOperation_UserListOperation)(nil),
	}
}

func _MutateOperation_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MutateOperation)
	// operation
	switch x := m.Operation.(type) {
	case *MutateOperation_AdGroupAdLabelOperation:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupAdLabelOperation); err != nil {
			return err
		}
	case *MutateOperation_AdGroupAdOperation:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupAdOperation); err != nil {
			return err
		}
	case *MutateOperation_AdGroupBidModifierOperation:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupBidModifierOperation); err != nil {
			return err
		}
	case *MutateOperation_AdGroupCriterionLabelOperation:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupCriterionLabelOperation); err != nil {
			return err
		}
	case *MutateOperation_AdGroupCriterionOperation:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupCriterionOperation); err != nil {
			return err
		}
	case *MutateOperation_AdGroupExtensionSettingOperation:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupExtensionSettingOperation); err != nil {
			return err
		}
	case *MutateOperation_AdGroupFeedOperation:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupFeedOperation); err != nil {
			return err
		}
	case *MutateOperation_AdGroupLabelOperation:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupLabelOperation); err != nil {
			return err
		}
	case *MutateOperation_AdGroupOperation:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupOperation); err != nil {
			return err
		}
	case *MutateOperation_AdParameterOperation:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdParameterOperation); err != nil {
			return err
		}
	case *MutateOperation_AssetOperation:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AssetOperation); err != nil {
			return err
		}
	case *MutateOperation_BiddingStrategyOperation:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BiddingStrategyOperation); err != nil {
			return err
		}
	case *MutateOperation_CampaignBidModifierOperation:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignBidModifierOperation); err != nil {
			return err
		}
	case *MutateOperation_CampaignBudgetOperation:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignBudgetOperation); err != nil {
			return err
		}
	case *MutateOperation_CampaignCriterionOperation:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignCriterionOperation); err != nil {
			return err
		}
	case *MutateOperation_CampaignExtensionSettingOperation:
		b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignExtensionSettingOperation); err != nil {
			return err
		}
	case *MutateOperation_CampaignFeedOperation:
		b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignFeedOperation); err != nil {
			return err
		}
	case *MutateOperation_CampaignLabelOperation:
		b.EncodeVarint(28<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignLabelOperation); err != nil {
			return err
		}
	case *MutateOperation_CampaignOperation:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignOperation); err != nil {
			return err
		}
	case *MutateOperation_CampaignSharedSetOperation:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignSharedSetOperation); err != nil {
			return err
		}
	case *MutateOperation_ConversionActionOperation:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConversionActionOperation); err != nil {
			return err
		}
	case *MutateOperation_CustomerExtensionSettingOperation:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CustomerExtensionSettingOperation); err != nil {
			return err
		}
	case *MutateOperation_CustomerFeedOperation:
		b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CustomerFeedOperation); err != nil {
			return err
		}
	case *MutateOperation_CustomerLabelOperation:
		b.EncodeVarint(32<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CustomerLabelOperation); err != nil {
			return err
		}
	case *MutateOperation_CustomerNegativeCriterionOperation:
		b.EncodeVarint(34<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CustomerNegativeCriterionOperation); err != nil {
			return err
		}
	case *MutateOperation_CustomerOperation:
		b.EncodeVarint(35<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CustomerOperation); err != nil {
			return err
		}
	case *MutateOperation_ExtensionFeedItemOperation:
		b.EncodeVarint(36<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ExtensionFeedItemOperation); err != nil {
			return err
		}
	case *MutateOperation_FeedItemOperation:
		b.EncodeVarint(37<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FeedItemOperation); err != nil {
			return err
		}
	case *MutateOperation_FeedItemTargetOperation:
		b.EncodeVarint(38<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FeedItemTargetOperation); err != nil {
			return err
		}
	case *MutateOperation_FeedMappingOperation:
		b.EncodeVarint(39<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FeedMappingOperation); err != nil {
			return err
		}
	case *MutateOperation_FeedOperation:
		b.EncodeVarint(40<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FeedOperation); err != nil {
			return err
		}
	case *MutateOperation_LabelOperation:
		b.EncodeVarint(41<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LabelOperation); err != nil {
			return err
		}
	case *MutateOperation_MediaFileOperation:
		b.EncodeVarint(42<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MediaFileOperation); err != nil {
			return err
		}
	case *MutateOperation_RemarketingActionOperation:
		b.EncodeVarint(43<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RemarketingActionOperation); err != nil {
			return err
		}
	case *MutateOperation_SharedCriterionOperation:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SharedCriterionOperation); err != nil {
			return err
		}
	case *MutateOperation_SharedSetOperation:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SharedSetOperation); err != nil {
			return err
		}
	case *MutateOperation_UserListOperation:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserListOperation); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MutateOperation.Operation has unexpected type %T", x)
	}
	return nil
}

func _MutateOperation_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MutateOperation)
	switch tag {
	case 17: // operation.ad_group_ad_label_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdGroupAdLabelOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_AdGroupAdLabelOperation{msg}
		return true, err
	case 1: // operation.ad_group_ad_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdGroupAdOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_AdGroupAdOperation{msg}
		return true, err
	case 2: // operation.ad_group_bid_modifier_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdGroupBidModifierOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_AdGroupBidModifierOperation{msg}
		return true, err
	case 18: // operation.ad_group_criterion_label_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdGroupCriterionLabelOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_AdGroupCriterionLabelOperation{msg}
		return true, err
	case 3: // operation.ad_group_criterion_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdGroupCriterionOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_AdGroupCriterionOperation{msg}
		return true, err
	case 19: // operation.ad_group_extension_setting_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdGroupExtensionSettingOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_AdGroupExtensionSettingOperation{msg}
		return true, err
	case 20: // operation.ad_group_feed_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdGroupFeedOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_AdGroupFeedOperation{msg}
		return true, err
	case 21: // operation.ad_group_label_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdGroupLabelOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_AdGroupLabelOperation{msg}
		return true, err
	case 5: // operation.ad_group_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdGroupOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_AdGroupOperation{msg}
		return true, err
	case 22: // operation.ad_parameter_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdParameterOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_AdParameterOperation{msg}
		return true, err
	case 23: // operation.asset_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AssetOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_AssetOperation{msg}
		return true, err
	case 6: // operation.bidding_strategy_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BiddingStrategyOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_BiddingStrategyOperation{msg}
		return true, err
	case 7: // operation.campaign_bid_modifier_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CampaignBidModifierOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_CampaignBidModifierOperation{msg}
		return true, err
	case 8: // operation.campaign_budget_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CampaignBudgetOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_CampaignBudgetOperation{msg}
		return true, err
	case 13: // operation.campaign_criterion_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CampaignCriterionOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_CampaignCriterionOperation{msg}
		return true, err
	case 26: // operation.campaign_extension_setting_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CampaignExtensionSettingOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_CampaignExtensionSettingOperation{msg}
		return true, err
	case 27: // operation.campaign_feed_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CampaignFeedOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_CampaignFeedOperation{msg}
		return true, err
	case 28: // operation.campaign_label_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CampaignLabelOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_CampaignLabelOperation{msg}
		return true, err
	case 10: // operation.campaign_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CampaignOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_CampaignOperation{msg}
		return true, err
	case 11: // operation.campaign_shared_set_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CampaignSharedSetOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_CampaignSharedSetOperation{msg}
		return true, err
	case 12: // operation.conversion_action_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConversionActionOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_ConversionActionOperation{msg}
		return true, err
	case 30: // operation.customer_extension_setting_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CustomerExtensionSettingOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_CustomerExtensionSettingOperation{msg}
		return true, err
	case 31: // operation.customer_feed_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CustomerFeedOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_CustomerFeedOperation{msg}
		return true, err
	case 32: // operation.customer_label_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CustomerLabelOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_CustomerLabelOperation{msg}
		return true, err
	case 34: // operation.customer_negative_criterion_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CustomerNegativeCriterionOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_CustomerNegativeCriterionOperation{msg}
		return true, err
	case 35: // operation.customer_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CustomerOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_CustomerOperation{msg}
		return true, err
	case 36: // operation.extension_feed_item_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExtensionFeedItemOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_ExtensionFeedItemOperation{msg}
		return true, err
	case 37: // operation.feed_item_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FeedItemOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_FeedItemOperation{msg}
		return true, err
	case 38: // operation.feed_item_target_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FeedItemTargetOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_FeedItemTargetOperation{msg}
		return true, err
	case 39: // operation.feed_mapping_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FeedMappingOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_FeedMappingOperation{msg}
		return true, err
	case 40: // operation.feed_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FeedOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_FeedOperation{msg}
		return true, err
	case 41: // operation.label_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LabelOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_LabelOperation{msg}
		return true, err
	case 42: // operation.media_file_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MediaFileOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_MediaFileOperation{msg}
		return true, err
	case 43: // operation.remarketing_action_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemarketingActionOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_RemarketingActionOperation{msg}
		return true, err
	case 14: // operation.shared_criterion_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SharedCriterionOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_SharedCriterionOperation{msg}
		return true, err
	case 15: // operation.shared_set_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SharedSetOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_SharedSetOperation{msg}
		return true, err
	case 16: // operation.user_list_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserListOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &MutateOperation_UserListOperation{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MutateOperation_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MutateOperation)
	// operation
	switch x := m.Operation.(type) {
	case *MutateOperation_AdGroupAdLabelOperation:
		s := proto.Size(x.AdGroupAdLabelOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_AdGroupAdOperation:
		s := proto.Size(x.AdGroupAdOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_AdGroupBidModifierOperation:
		s := proto.Size(x.AdGroupBidModifierOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_AdGroupCriterionLabelOperation:
		s := proto.Size(x.AdGroupCriterionLabelOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_AdGroupCriterionOperation:
		s := proto.Size(x.AdGroupCriterionOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_AdGroupExtensionSettingOperation:
		s := proto.Size(x.AdGroupExtensionSettingOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_AdGroupFeedOperation:
		s := proto.Size(x.AdGroupFeedOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_AdGroupLabelOperation:
		s := proto.Size(x.AdGroupLabelOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_AdGroupOperation:
		s := proto.Size(x.AdGroupOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_AdParameterOperation:
		s := proto.Size(x.AdParameterOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_AssetOperation:
		s := proto.Size(x.AssetOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_BiddingStrategyOperation:
		s := proto.Size(x.BiddingStrategyOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_CampaignBidModifierOperation:
		s := proto.Size(x.CampaignBidModifierOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_CampaignBudgetOperation:
		s := proto.Size(x.CampaignBudgetOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_CampaignCriterionOperation:
		s := proto.Size(x.CampaignCriterionOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_CampaignExtensionSettingOperation:
		s := proto.Size(x.CampaignExtensionSettingOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_CampaignFeedOperation:
		s := proto.Size(x.CampaignFeedOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_CampaignLabelOperation:
		s := proto.Size(x.CampaignLabelOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_CampaignOperation:
		s := proto.Size(x.CampaignOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_CampaignSharedSetOperation:
		s := proto.Size(x.CampaignSharedSetOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_ConversionActionOperation:
		s := proto.Size(x.ConversionActionOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_CustomerExtensionSettingOperation:
		s := proto.Size(x.CustomerExtensionSettingOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_CustomerFeedOperation:
		s := proto.Size(x.CustomerFeedOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_CustomerLabelOperation:
		s := proto.Size(x.CustomerLabelOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_CustomerNegativeCriterionOperation:
		s := proto.Size(x.CustomerNegativeCriterionOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_CustomerOperation:
		s := proto.Size(x.CustomerOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_ExtensionFeedItemOperation:
		s := proto.Size(x.ExtensionFeedItemOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_FeedItemOperation:
		s := proto.Size(x.FeedItemOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_FeedItemTargetOperation:
		s := proto.Size(x.FeedItemTargetOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_FeedMappingOperation:
		s := proto.Size(x.FeedMappingOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_FeedOperation:
		s := proto.Size(x.FeedOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_LabelOperation:
		s := proto.Size(x.LabelOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_MediaFileOperation:
		s := proto.Size(x.MediaFileOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_RemarketingActionOperation:
		s := proto.Size(x.RemarketingActionOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_SharedCriterionOperation:
		s := proto.Size(x.SharedCriterionOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_SharedSetOperation:
		s := proto.Size(x.SharedSetOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperation_UserListOperation:
		s := proto.Size(x.UserListOperation)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Response message for the resource mutate.
type MutateOperationResponse struct {
	// The mutate response
	//
	// Types that are valid to be assigned to Response:
	//	*MutateOperationResponse_AdGroupAdLabelResult
	//	*MutateOperationResponse_AdGroupAdResult
	//	*MutateOperationResponse_AdGroupBidModifierResult
	//	*MutateOperationResponse_AdGroupCriterionLabelResult
	//	*MutateOperationResponse_AdGroupCriterionResult
	//	*MutateOperationResponse_AdGroupExtensionSettingResult
	//	*MutateOperationResponse_AdGroupFeedResult
	//	*MutateOperationResponse_AdGroupLabelResult
	//	*MutateOperationResponse_AdGroupResult
	//	*MutateOperationResponse_AdParameterResult
	//	*MutateOperationResponse_AssetResult
	//	*MutateOperationResponse_BiddingStrategyResult
	//	*MutateOperationResponse_CampaignBidModifierResult
	//	*MutateOperationResponse_CampaignBudgetResult
	//	*MutateOperationResponse_CampaignCriterionResult
	//	*MutateOperationResponse_CampaignExtensionSettingResult
	//	*MutateOperationResponse_CampaignFeedResult
	//	*MutateOperationResponse_CampaignLabelResult
	//	*MutateOperationResponse_CampaignResult
	//	*MutateOperationResponse_CampaignSharedSetResult
	//	*MutateOperationResponse_ConversionActionResult
	//	*MutateOperationResponse_CustomerExtensionSettingResult
	//	*MutateOperationResponse_CustomerFeedResult
	//	*MutateOperationResponse_CustomerLabelResult
	//	*MutateOperationResponse_CustomerNegativeCriterionResult
	//	*MutateOperationResponse_CustomerResult
	//	*MutateOperationResponse_ExtensionFeedItemResult
	//	*MutateOperationResponse_FeedItemResult
	//	*MutateOperationResponse_FeedItemTargetResult
	//	*MutateOperationResponse_FeedMappingResult
	//	*MutateOperationResponse_FeedResult
	//	*MutateOperationResponse_LabelResult
	//	*MutateOperationResponse_MediaFileResult
	//	*MutateOperationResponse_RemarketingActionResult
	//	*MutateOperationResponse_SharedCriterionResult
	//	*MutateOperationResponse_SharedSetResult
	//	*MutateOperationResponse_UserListResult
	Response             isMutateOperationResponse_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *MutateOperationResponse) Reset()         { *m = MutateOperationResponse{} }
func (m *MutateOperationResponse) String() string { return proto.CompactTextString(m) }
func (*MutateOperationResponse) ProtoMessage()    {}
func (*MutateOperationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_google_ads_service_7f943554245b1e4e, []int{6}
}
func (m *MutateOperationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateOperationResponse.Unmarshal(m, b)
}
func (m *MutateOperationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateOperationResponse.Marshal(b, m, deterministic)
}
func (dst *MutateOperationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateOperationResponse.Merge(dst, src)
}
func (m *MutateOperationResponse) XXX_Size() int {
	return xxx_messageInfo_MutateOperationResponse.Size(m)
}
func (m *MutateOperationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateOperationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MutateOperationResponse proto.InternalMessageInfo

type isMutateOperationResponse_Response interface {
	isMutateOperationResponse_Response()
}

type MutateOperationResponse_AdGroupAdLabelResult struct {
	AdGroupAdLabelResult *MutateAdGroupAdLabelResult `protobuf:"bytes,17,opt,name=ad_group_ad_label_result,json=adGroupAdLabelResult,proto3,oneof"`
}

type MutateOperationResponse_AdGroupAdResult struct {
	AdGroupAdResult *MutateAdGroupAdResult `protobuf:"bytes,1,opt,name=ad_group_ad_result,json=adGroupAdResult,proto3,oneof"`
}

type MutateOperationResponse_AdGroupBidModifierResult struct {
	AdGroupBidModifierResult *MutateAdGroupBidModifierResult `protobuf:"bytes,2,opt,name=ad_group_bid_modifier_result,json=adGroupBidModifierResult,proto3,oneof"`
}

type MutateOperationResponse_AdGroupCriterionLabelResult struct {
	AdGroupCriterionLabelResult *MutateAdGroupCriterionLabelResult `protobuf:"bytes,18,opt,name=ad_group_criterion_label_result,json=adGroupCriterionLabelResult,proto3,oneof"`
}

type MutateOperationResponse_AdGroupCriterionResult struct {
	AdGroupCriterionResult *MutateAdGroupCriterionResult `protobuf:"bytes,3,opt,name=ad_group_criterion_result,json=adGroupCriterionResult,proto3,oneof"`
}

type MutateOperationResponse_AdGroupExtensionSettingResult struct {
	AdGroupExtensionSettingResult *MutateAdGroupExtensionSettingResult `protobuf:"bytes,19,opt,name=ad_group_extension_setting_result,json=adGroupExtensionSettingResult,proto3,oneof"`
}

type MutateOperationResponse_AdGroupFeedResult struct {
	AdGroupFeedResult *MutateAdGroupFeedResult `protobuf:"bytes,20,opt,name=ad_group_feed_result,json=adGroupFeedResult,proto3,oneof"`
}

type MutateOperationResponse_AdGroupLabelResult struct {
	AdGroupLabelResult *MutateAdGroupLabelResult `protobuf:"bytes,21,opt,name=ad_group_label_result,json=adGroupLabelResult,proto3,oneof"`
}

type MutateOperationResponse_AdGroupResult struct {
	AdGroupResult *MutateAdGroupResult `protobuf:"bytes,5,opt,name=ad_group_result,json=adGroupResult,proto3,oneof"`
}

type MutateOperationResponse_AdParameterResult struct {
	AdParameterResult *MutateAdParameterResult `protobuf:"bytes,22,opt,name=ad_parameter_result,json=adParameterResult,proto3,oneof"`
}

type MutateOperationResponse_AssetResult struct {
	AssetResult *MutateAssetResult `protobuf:"bytes,23,opt,name=asset_result,json=assetResult,proto3,oneof"`
}

type MutateOperationResponse_BiddingStrategyResult struct {
	BiddingStrategyResult *MutateBiddingStrategyResult `protobuf:"bytes,6,opt,name=bidding_strategy_result,json=biddingStrategyResult,proto3,oneof"`
}

type MutateOperationResponse_CampaignBidModifierResult struct {
	CampaignBidModifierResult *MutateCampaignBidModifierResult `protobuf:"bytes,7,opt,name=campaign_bid_modifier_result,json=campaignBidModifierResult,proto3,oneof"`
}

type MutateOperationResponse_CampaignBudgetResult struct {
	CampaignBudgetResult *MutateCampaignBudgetResult `protobuf:"bytes,8,opt,name=campaign_budget_result,json=campaignBudgetResult,proto3,oneof"`
}

type MutateOperationResponse_CampaignCriterionResult struct {
	CampaignCriterionResult *MutateCampaignCriterionResult `protobuf:"bytes,13,opt,name=campaign_criterion_result,json=campaignCriterionResult,proto3,oneof"`
}

type MutateOperationResponse_CampaignExtensionSettingResult struct {
	CampaignExtensionSettingResult *MutateCampaignExtensionSettingResult `protobuf:"bytes,26,opt,name=campaign_extension_setting_result,json=campaignExtensionSettingResult,proto3,oneof"`
}

type MutateOperationResponse_CampaignFeedResult struct {
	CampaignFeedResult *MutateCampaignFeedResult `protobuf:"bytes,27,opt,name=campaign_feed_result,json=campaignFeedResult,proto3,oneof"`
}

type MutateOperationResponse_CampaignLabelResult struct {
	CampaignLabelResult *MutateCampaignLabelResult `protobuf:"bytes,28,opt,name=campaign_label_result,json=campaignLabelResult,proto3,oneof"`
}

type MutateOperationResponse_CampaignResult struct {
	CampaignResult *MutateCampaignResult `protobuf:"bytes,10,opt,name=campaign_result,json=campaignResult,proto3,oneof"`
}

type MutateOperationResponse_CampaignSharedSetResult struct {
	CampaignSharedSetResult *MutateCampaignSharedSetResult `protobuf:"bytes,11,opt,name=campaign_shared_set_result,json=campaignSharedSetResult,proto3,oneof"`
}

type MutateOperationResponse_ConversionActionResult struct {
	ConversionActionResult *MutateConversionActionResult `protobuf:"bytes,12,opt,name=conversion_action_result,json=conversionActionResult,proto3,oneof"`
}

type MutateOperationResponse_CustomerExtensionSettingResult struct {
	CustomerExtensionSettingResult *MutateCustomerExtensionSettingResult `protobuf:"bytes,30,opt,name=customer_extension_setting_result,json=customerExtensionSettingResult,proto3,oneof"`
}

type MutateOperationResponse_CustomerFeedResult struct {
	CustomerFeedResult *MutateCustomerFeedResult `protobuf:"bytes,31,opt,name=customer_feed_result,json=customerFeedResult,proto3,oneof"`
}

type MutateOperationResponse_CustomerLabelResult struct {
	CustomerLabelResult *MutateCustomerLabelResult `protobuf:"bytes,32,opt,name=customer_label_result,json=customerLabelResult,proto3,oneof"`
}

type MutateOperationResponse_CustomerNegativeCriterionResult struct {
	CustomerNegativeCriterionResult *MutateCustomerNegativeCriteriaResult `protobuf:"bytes,34,opt,name=customer_negative_criterion_result,json=customerNegativeCriterionResult,proto3,oneof"`
}

type MutateOperationResponse_CustomerResult struct {
	CustomerResult *MutateCustomerResult `protobuf:"bytes,35,opt,name=customer_result,json=customerResult,proto3,oneof"`
}

type MutateOperationResponse_ExtensionFeedItemResult struct {
	ExtensionFeedItemResult *MutateExtensionFeedItemResult `protobuf:"bytes,36,opt,name=extension_feed_item_result,json=extensionFeedItemResult,proto3,oneof"`
}

type MutateOperationResponse_FeedItemResult struct {
	FeedItemResult *MutateFeedItemResult `protobuf:"bytes,37,opt,name=feed_item_result,json=feedItemResult,proto3,oneof"`
}

type MutateOperationResponse_FeedItemTargetResult struct {
	FeedItemTargetResult *MutateFeedItemTargetResult `protobuf:"bytes,38,opt,name=feed_item_target_result,json=feedItemTargetResult,proto3,oneof"`
}

type MutateOperationResponse_FeedMappingResult struct {
	FeedMappingResult *MutateFeedMappingResult `protobuf:"bytes,39,opt,name=feed_mapping_result,json=feedMappingResult,proto3,oneof"`
}

type MutateOperationResponse_FeedResult struct {
	FeedResult *MutateFeedResult `protobuf:"bytes,40,opt,name=feed_result,json=feedResult,proto3,oneof"`
}

type MutateOperationResponse_LabelResult struct {
	LabelResult *MutateLabelResult `protobuf:"bytes,41,opt,name=label_result,json=labelResult,proto3,oneof"`
}

type MutateOperationResponse_MediaFileResult struct {
	MediaFileResult *MutateMediaFileResult `protobuf:"bytes,42,opt,name=media_file_result,json=mediaFileResult,proto3,oneof"`
}

type MutateOperationResponse_RemarketingActionResult struct {
	RemarketingActionResult *MutateRemarketingActionResult `protobuf:"bytes,43,opt,name=remarketing_action_result,json=remarketingActionResult,proto3,oneof"`
}

type MutateOperationResponse_SharedCriterionResult struct {
	SharedCriterionResult *MutateSharedCriterionResult `protobuf:"bytes,14,opt,name=shared_criterion_result,json=sharedCriterionResult,proto3,oneof"`
}

type MutateOperationResponse_SharedSetResult struct {
	SharedSetResult *MutateSharedSetResult `protobuf:"bytes,15,opt,name=shared_set_result,json=sharedSetResult,proto3,oneof"`
}

type MutateOperationResponse_UserListResult struct {
	UserListResult *MutateUserListResult `protobuf:"bytes,16,opt,name=user_list_result,json=userListResult,proto3,oneof"`
}

func (*MutateOperationResponse_AdGroupAdLabelResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_AdGroupAdResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_AdGroupBidModifierResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_AdGroupCriterionLabelResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_AdGroupCriterionResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_AdGroupExtensionSettingResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_AdGroupFeedResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_AdGroupLabelResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_AdGroupResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_AdParameterResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_AssetResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_BiddingStrategyResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_CampaignBidModifierResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_CampaignBudgetResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_CampaignCriterionResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_CampaignExtensionSettingResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_CampaignFeedResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_CampaignLabelResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_CampaignResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_CampaignSharedSetResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_ConversionActionResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_CustomerExtensionSettingResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_CustomerFeedResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_CustomerLabelResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_CustomerNegativeCriterionResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_CustomerResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_ExtensionFeedItemResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_FeedItemResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_FeedItemTargetResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_FeedMappingResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_FeedResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_LabelResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_MediaFileResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_RemarketingActionResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_SharedCriterionResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_SharedSetResult) isMutateOperationResponse_Response() {}

func (*MutateOperationResponse_UserListResult) isMutateOperationResponse_Response() {}

func (m *MutateOperationResponse) GetResponse() isMutateOperationResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *MutateOperationResponse) GetAdGroupAdLabelResult() *MutateAdGroupAdLabelResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_AdGroupAdLabelResult); ok {
		return x.AdGroupAdLabelResult
	}
	return nil
}

func (m *MutateOperationResponse) GetAdGroupAdResult() *MutateAdGroupAdResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_AdGroupAdResult); ok {
		return x.AdGroupAdResult
	}
	return nil
}

func (m *MutateOperationResponse) GetAdGroupBidModifierResult() *MutateAdGroupBidModifierResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_AdGroupBidModifierResult); ok {
		return x.AdGroupBidModifierResult
	}
	return nil
}

func (m *MutateOperationResponse) GetAdGroupCriterionLabelResult() *MutateAdGroupCriterionLabelResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_AdGroupCriterionLabelResult); ok {
		return x.AdGroupCriterionLabelResult
	}
	return nil
}

func (m *MutateOperationResponse) GetAdGroupCriterionResult() *MutateAdGroupCriterionResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_AdGroupCriterionResult); ok {
		return x.AdGroupCriterionResult
	}
	return nil
}

func (m *MutateOperationResponse) GetAdGroupExtensionSettingResult() *MutateAdGroupExtensionSettingResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_AdGroupExtensionSettingResult); ok {
		return x.AdGroupExtensionSettingResult
	}
	return nil
}

func (m *MutateOperationResponse) GetAdGroupFeedResult() *MutateAdGroupFeedResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_AdGroupFeedResult); ok {
		return x.AdGroupFeedResult
	}
	return nil
}

func (m *MutateOperationResponse) GetAdGroupLabelResult() *MutateAdGroupLabelResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_AdGroupLabelResult); ok {
		return x.AdGroupLabelResult
	}
	return nil
}

func (m *MutateOperationResponse) GetAdGroupResult() *MutateAdGroupResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_AdGroupResult); ok {
		return x.AdGroupResult
	}
	return nil
}

func (m *MutateOperationResponse) GetAdParameterResult() *MutateAdParameterResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_AdParameterResult); ok {
		return x.AdParameterResult
	}
	return nil
}

func (m *MutateOperationResponse) GetAssetResult() *MutateAssetResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_AssetResult); ok {
		return x.AssetResult
	}
	return nil
}

func (m *MutateOperationResponse) GetBiddingStrategyResult() *MutateBiddingStrategyResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_BiddingStrategyResult); ok {
		return x.BiddingStrategyResult
	}
	return nil
}

func (m *MutateOperationResponse) GetCampaignBidModifierResult() *MutateCampaignBidModifierResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_CampaignBidModifierResult); ok {
		return x.CampaignBidModifierResult
	}
	return nil
}

func (m *MutateOperationResponse) GetCampaignBudgetResult() *MutateCampaignBudgetResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_CampaignBudgetResult); ok {
		return x.CampaignBudgetResult
	}
	return nil
}

func (m *MutateOperationResponse) GetCampaignCriterionResult() *MutateCampaignCriterionResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_CampaignCriterionResult); ok {
		return x.CampaignCriterionResult
	}
	return nil
}

func (m *MutateOperationResponse) GetCampaignExtensionSettingResult() *MutateCampaignExtensionSettingResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_CampaignExtensionSettingResult); ok {
		return x.CampaignExtensionSettingResult
	}
	return nil
}

func (m *MutateOperationResponse) GetCampaignFeedResult() *MutateCampaignFeedResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_CampaignFeedResult); ok {
		return x.CampaignFeedResult
	}
	return nil
}

func (m *MutateOperationResponse) GetCampaignLabelResult() *MutateCampaignLabelResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_CampaignLabelResult); ok {
		return x.CampaignLabelResult
	}
	return nil
}

func (m *MutateOperationResponse) GetCampaignResult() *MutateCampaignResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_CampaignResult); ok {
		return x.CampaignResult
	}
	return nil
}

func (m *MutateOperationResponse) GetCampaignSharedSetResult() *MutateCampaignSharedSetResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_CampaignSharedSetResult); ok {
		return x.CampaignSharedSetResult
	}
	return nil
}

func (m *MutateOperationResponse) GetConversionActionResult() *MutateConversionActionResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_ConversionActionResult); ok {
		return x.ConversionActionResult
	}
	return nil
}

func (m *MutateOperationResponse) GetCustomerExtensionSettingResult() *MutateCustomerExtensionSettingResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_CustomerExtensionSettingResult); ok {
		return x.CustomerExtensionSettingResult
	}
	return nil
}

func (m *MutateOperationResponse) GetCustomerFeedResult() *MutateCustomerFeedResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_CustomerFeedResult); ok {
		return x.CustomerFeedResult
	}
	return nil
}

func (m *MutateOperationResponse) GetCustomerLabelResult() *MutateCustomerLabelResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_CustomerLabelResult); ok {
		return x.CustomerLabelResult
	}
	return nil
}

func (m *MutateOperationResponse) GetCustomerNegativeCriterionResult() *MutateCustomerNegativeCriteriaResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_CustomerNegativeCriterionResult); ok {
		return x.CustomerNegativeCriterionResult
	}
	return nil
}

func (m *MutateOperationResponse) GetCustomerResult() *MutateCustomerResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_CustomerResult); ok {
		return x.CustomerResult
	}
	return nil
}

func (m *MutateOperationResponse) GetExtensionFeedItemResult() *MutateExtensionFeedItemResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_ExtensionFeedItemResult); ok {
		return x.ExtensionFeedItemResult
	}
	return nil
}

func (m *MutateOperationResponse) GetFeedItemResult() *MutateFeedItemResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_FeedItemResult); ok {
		return x.FeedItemResult
	}
	return nil
}

func (m *MutateOperationResponse) GetFeedItemTargetResult() *MutateFeedItemTargetResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_FeedItemTargetResult); ok {
		return x.FeedItemTargetResult
	}
	return nil
}

func (m *MutateOperationResponse) GetFeedMappingResult() *MutateFeedMappingResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_FeedMappingResult); ok {
		return x.FeedMappingResult
	}
	return nil
}

func (m *MutateOperationResponse) GetFeedResult() *MutateFeedResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_FeedResult); ok {
		return x.FeedResult
	}
	return nil
}

func (m *MutateOperationResponse) GetLabelResult() *MutateLabelResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_LabelResult); ok {
		return x.LabelResult
	}
	return nil
}

func (m *MutateOperationResponse) GetMediaFileResult() *MutateMediaFileResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_MediaFileResult); ok {
		return x.MediaFileResult
	}
	return nil
}

func (m *MutateOperationResponse) GetRemarketingActionResult() *MutateRemarketingActionResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_RemarketingActionResult); ok {
		return x.RemarketingActionResult
	}
	return nil
}

func (m *MutateOperationResponse) GetSharedCriterionResult() *MutateSharedCriterionResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_SharedCriterionResult); ok {
		return x.SharedCriterionResult
	}
	return nil
}

func (m *MutateOperationResponse) GetSharedSetResult() *MutateSharedSetResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_SharedSetResult); ok {
		return x.SharedSetResult
	}
	return nil
}

func (m *MutateOperationResponse) GetUserListResult() *MutateUserListResult {
	if x, ok := m.GetResponse().(*MutateOperationResponse_UserListResult); ok {
		return x.UserListResult
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MutateOperationResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MutateOperationResponse_OneofMarshaler, _MutateOperationResponse_OneofUnmarshaler, _MutateOperationResponse_OneofSizer, []interface{}{
		(*MutateOperationResponse_AdGroupAdLabelResult)(nil),
		(*MutateOperationResponse_AdGroupAdResult)(nil),
		(*MutateOperationResponse_AdGroupBidModifierResult)(nil),
		(*MutateOperationResponse_AdGroupCriterionLabelResult)(nil),
		(*MutateOperationResponse_AdGroupCriterionResult)(nil),
		(*MutateOperationResponse_AdGroupExtensionSettingResult)(nil),
		(*MutateOperationResponse_AdGroupFeedResult)(nil),
		(*MutateOperationResponse_AdGroupLabelResult)(nil),
		(*MutateOperationResponse_AdGroupResult)(nil),
		(*MutateOperationResponse_AdParameterResult)(nil),
		(*MutateOperationResponse_AssetResult)(nil),
		(*MutateOperationResponse_BiddingStrategyResult)(nil),
		(*MutateOperationResponse_CampaignBidModifierResult)(nil),
		(*MutateOperationResponse_CampaignBudgetResult)(nil),
		(*MutateOperationResponse_CampaignCriterionResult)(nil),
		(*MutateOperationResponse_CampaignExtensionSettingResult)(nil),
		(*MutateOperationResponse_CampaignFeedResult)(nil),
		(*MutateOperationResponse_CampaignLabelResult)(nil),
		(*MutateOperationResponse_CampaignResult)(nil),
		(*MutateOperationResponse_CampaignSharedSetResult)(nil),
		(*MutateOperationResponse_ConversionActionResult)(nil),
		(*MutateOperationResponse_CustomerExtensionSettingResult)(nil),
		(*MutateOperationResponse_CustomerFeedResult)(nil),
		(*MutateOperationResponse_CustomerLabelResult)(nil),
		(*MutateOperationResponse_CustomerNegativeCriterionResult)(nil),
		(*MutateOperationResponse_CustomerResult)(nil),
		(*MutateOperationResponse_ExtensionFeedItemResult)(nil),
		(*MutateOperationResponse_FeedItemResult)(nil),
		(*MutateOperationResponse_FeedItemTargetResult)(nil),
		(*MutateOperationResponse_FeedMappingResult)(nil),
		(*MutateOperationResponse_FeedResult)(nil),
		(*MutateOperationResponse_LabelResult)(nil),
		(*MutateOperationResponse_MediaFileResult)(nil),
		(*MutateOperationResponse_RemarketingActionResult)(nil),
		(*MutateOperationResponse_SharedCriterionResult)(nil),
		(*MutateOperationResponse_SharedSetResult)(nil),
		(*MutateOperationResponse_UserListResult)(nil),
	}
}

func _MutateOperationResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MutateOperationResponse)
	// response
	switch x := m.Response.(type) {
	case *MutateOperationResponse_AdGroupAdLabelResult:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupAdLabelResult); err != nil {
			return err
		}
	case *MutateOperationResponse_AdGroupAdResult:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupAdResult); err != nil {
			return err
		}
	case *MutateOperationResponse_AdGroupBidModifierResult:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupBidModifierResult); err != nil {
			return err
		}
	case *MutateOperationResponse_AdGroupCriterionLabelResult:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupCriterionLabelResult); err != nil {
			return err
		}
	case *MutateOperationResponse_AdGroupCriterionResult:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupCriterionResult); err != nil {
			return err
		}
	case *MutateOperationResponse_AdGroupExtensionSettingResult:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupExtensionSettingResult); err != nil {
			return err
		}
	case *MutateOperationResponse_AdGroupFeedResult:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupFeedResult); err != nil {
			return err
		}
	case *MutateOperationResponse_AdGroupLabelResult:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupLabelResult); err != nil {
			return err
		}
	case *MutateOperationResponse_AdGroupResult:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdGroupResult); err != nil {
			return err
		}
	case *MutateOperationResponse_AdParameterResult:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdParameterResult); err != nil {
			return err
		}
	case *MutateOperationResponse_AssetResult:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AssetResult); err != nil {
			return err
		}
	case *MutateOperationResponse_BiddingStrategyResult:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BiddingStrategyResult); err != nil {
			return err
		}
	case *MutateOperationResponse_CampaignBidModifierResult:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignBidModifierResult); err != nil {
			return err
		}
	case *MutateOperationResponse_CampaignBudgetResult:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignBudgetResult); err != nil {
			return err
		}
	case *MutateOperationResponse_CampaignCriterionResult:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignCriterionResult); err != nil {
			return err
		}
	case *MutateOperationResponse_CampaignExtensionSettingResult:
		b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignExtensionSettingResult); err != nil {
			return err
		}
	case *MutateOperationResponse_CampaignFeedResult:
		b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignFeedResult); err != nil {
			return err
		}
	case *MutateOperationResponse_CampaignLabelResult:
		b.EncodeVarint(28<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignLabelResult); err != nil {
			return err
		}
	case *MutateOperationResponse_CampaignResult:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignResult); err != nil {
			return err
		}
	case *MutateOperationResponse_CampaignSharedSetResult:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CampaignSharedSetResult); err != nil {
			return err
		}
	case *MutateOperationResponse_ConversionActionResult:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConversionActionResult); err != nil {
			return err
		}
	case *MutateOperationResponse_CustomerExtensionSettingResult:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CustomerExtensionSettingResult); err != nil {
			return err
		}
	case *MutateOperationResponse_CustomerFeedResult:
		b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CustomerFeedResult); err != nil {
			return err
		}
	case *MutateOperationResponse_CustomerLabelResult:
		b.EncodeVarint(32<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CustomerLabelResult); err != nil {
			return err
		}
	case *MutateOperationResponse_CustomerNegativeCriterionResult:
		b.EncodeVarint(34<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CustomerNegativeCriterionResult); err != nil {
			return err
		}
	case *MutateOperationResponse_CustomerResult:
		b.EncodeVarint(35<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CustomerResult); err != nil {
			return err
		}
	case *MutateOperationResponse_ExtensionFeedItemResult:
		b.EncodeVarint(36<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ExtensionFeedItemResult); err != nil {
			return err
		}
	case *MutateOperationResponse_FeedItemResult:
		b.EncodeVarint(37<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FeedItemResult); err != nil {
			return err
		}
	case *MutateOperationResponse_FeedItemTargetResult:
		b.EncodeVarint(38<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FeedItemTargetResult); err != nil {
			return err
		}
	case *MutateOperationResponse_FeedMappingResult:
		b.EncodeVarint(39<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FeedMappingResult); err != nil {
			return err
		}
	case *MutateOperationResponse_FeedResult:
		b.EncodeVarint(40<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FeedResult); err != nil {
			return err
		}
	case *MutateOperationResponse_LabelResult:
		b.EncodeVarint(41<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LabelResult); err != nil {
			return err
		}
	case *MutateOperationResponse_MediaFileResult:
		b.EncodeVarint(42<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MediaFileResult); err != nil {
			return err
		}
	case *MutateOperationResponse_RemarketingActionResult:
		b.EncodeVarint(43<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RemarketingActionResult); err != nil {
			return err
		}
	case *MutateOperationResponse_SharedCriterionResult:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SharedCriterionResult); err != nil {
			return err
		}
	case *MutateOperationResponse_SharedSetResult:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SharedSetResult); err != nil {
			return err
		}
	case *MutateOperationResponse_UserListResult:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserListResult); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MutateOperationResponse.Response has unexpected type %T", x)
	}
	return nil
}

func _MutateOperationResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MutateOperationResponse)
	switch tag {
	case 17: // response.ad_group_ad_label_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateAdGroupAdLabelResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_AdGroupAdLabelResult{msg}
		return true, err
	case 1: // response.ad_group_ad_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateAdGroupAdResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_AdGroupAdResult{msg}
		return true, err
	case 2: // response.ad_group_bid_modifier_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateAdGroupBidModifierResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_AdGroupBidModifierResult{msg}
		return true, err
	case 18: // response.ad_group_criterion_label_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateAdGroupCriterionLabelResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_AdGroupCriterionLabelResult{msg}
		return true, err
	case 3: // response.ad_group_criterion_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateAdGroupCriterionResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_AdGroupCriterionResult{msg}
		return true, err
	case 19: // response.ad_group_extension_setting_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateAdGroupExtensionSettingResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_AdGroupExtensionSettingResult{msg}
		return true, err
	case 20: // response.ad_group_feed_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateAdGroupFeedResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_AdGroupFeedResult{msg}
		return true, err
	case 21: // response.ad_group_label_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateAdGroupLabelResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_AdGroupLabelResult{msg}
		return true, err
	case 5: // response.ad_group_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateAdGroupResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_AdGroupResult{msg}
		return true, err
	case 22: // response.ad_parameter_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateAdParameterResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_AdParameterResult{msg}
		return true, err
	case 23: // response.asset_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateAssetResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_AssetResult{msg}
		return true, err
	case 6: // response.bidding_strategy_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateBiddingStrategyResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_BiddingStrategyResult{msg}
		return true, err
	case 7: // response.campaign_bid_modifier_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateCampaignBidModifierResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_CampaignBidModifierResult{msg}
		return true, err
	case 8: // response.campaign_budget_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateCampaignBudgetResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_CampaignBudgetResult{msg}
		return true, err
	case 13: // response.campaign_criterion_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateCampaignCriterionResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_CampaignCriterionResult{msg}
		return true, err
	case 26: // response.campaign_extension_setting_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateCampaignExtensionSettingResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_CampaignExtensionSettingResult{msg}
		return true, err
	case 27: // response.campaign_feed_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateCampaignFeedResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_CampaignFeedResult{msg}
		return true, err
	case 28: // response.campaign_label_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateCampaignLabelResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_CampaignLabelResult{msg}
		return true, err
	case 10: // response.campaign_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateCampaignResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_CampaignResult{msg}
		return true, err
	case 11: // response.campaign_shared_set_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateCampaignSharedSetResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_CampaignSharedSetResult{msg}
		return true, err
	case 12: // response.conversion_action_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateConversionActionResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_ConversionActionResult{msg}
		return true, err
	case 30: // response.customer_extension_setting_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateCustomerExtensionSettingResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_CustomerExtensionSettingResult{msg}
		return true, err
	case 31: // response.customer_feed_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateCustomerFeedResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_CustomerFeedResult{msg}
		return true, err
	case 32: // response.customer_label_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateCustomerLabelResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_CustomerLabelResult{msg}
		return true, err
	case 34: // response.customer_negative_criterion_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateCustomerNegativeCriteriaResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_CustomerNegativeCriterionResult{msg}
		return true, err
	case 35: // response.customer_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateCustomerResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_CustomerResult{msg}
		return true, err
	case 36: // response.extension_feed_item_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateExtensionFeedItemResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_ExtensionFeedItemResult{msg}
		return true, err
	case 37: // response.feed_item_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateFeedItemResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_FeedItemResult{msg}
		return true, err
	case 38: // response.feed_item_target_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateFeedItemTargetResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_FeedItemTargetResult{msg}
		return true, err
	case 39: // response.feed_mapping_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateFeedMappingResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_FeedMappingResult{msg}
		return true, err
	case 40: // response.feed_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateFeedResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_FeedResult{msg}
		return true, err
	case 41: // response.label_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateLabelResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_LabelResult{msg}
		return true, err
	case 42: // response.media_file_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateMediaFileResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_MediaFileResult{msg}
		return true, err
	case 43: // response.remarketing_action_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateRemarketingActionResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_RemarketingActionResult{msg}
		return true, err
	case 14: // response.shared_criterion_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateSharedCriterionResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_SharedCriterionResult{msg}
		return true, err
	case 15: // response.shared_set_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateSharedSetResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_SharedSetResult{msg}
		return true, err
	case 16: // response.user_list_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutateUserListResult)
		err := b.DecodeMessage(msg)
		m.Response = &MutateOperationResponse_UserListResult{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MutateOperationResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MutateOperationResponse)
	// response
	switch x := m.Response.(type) {
	case *MutateOperationResponse_AdGroupAdLabelResult:
		s := proto.Size(x.AdGroupAdLabelResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_AdGroupAdResult:
		s := proto.Size(x.AdGroupAdResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_AdGroupBidModifierResult:
		s := proto.Size(x.AdGroupBidModifierResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_AdGroupCriterionLabelResult:
		s := proto.Size(x.AdGroupCriterionLabelResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_AdGroupCriterionResult:
		s := proto.Size(x.AdGroupCriterionResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_AdGroupExtensionSettingResult:
		s := proto.Size(x.AdGroupExtensionSettingResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_AdGroupFeedResult:
		s := proto.Size(x.AdGroupFeedResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_AdGroupLabelResult:
		s := proto.Size(x.AdGroupLabelResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_AdGroupResult:
		s := proto.Size(x.AdGroupResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_AdParameterResult:
		s := proto.Size(x.AdParameterResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_AssetResult:
		s := proto.Size(x.AssetResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_BiddingStrategyResult:
		s := proto.Size(x.BiddingStrategyResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_CampaignBidModifierResult:
		s := proto.Size(x.CampaignBidModifierResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_CampaignBudgetResult:
		s := proto.Size(x.CampaignBudgetResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_CampaignCriterionResult:
		s := proto.Size(x.CampaignCriterionResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_CampaignExtensionSettingResult:
		s := proto.Size(x.CampaignExtensionSettingResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_CampaignFeedResult:
		s := proto.Size(x.CampaignFeedResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_CampaignLabelResult:
		s := proto.Size(x.CampaignLabelResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_CampaignResult:
		s := proto.Size(x.CampaignResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_CampaignSharedSetResult:
		s := proto.Size(x.CampaignSharedSetResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_ConversionActionResult:
		s := proto.Size(x.ConversionActionResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_CustomerExtensionSettingResult:
		s := proto.Size(x.CustomerExtensionSettingResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_CustomerFeedResult:
		s := proto.Size(x.CustomerFeedResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_CustomerLabelResult:
		s := proto.Size(x.CustomerLabelResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_CustomerNegativeCriterionResult:
		s := proto.Size(x.CustomerNegativeCriterionResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_CustomerResult:
		s := proto.Size(x.CustomerResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_ExtensionFeedItemResult:
		s := proto.Size(x.ExtensionFeedItemResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_FeedItemResult:
		s := proto.Size(x.FeedItemResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_FeedItemTargetResult:
		s := proto.Size(x.FeedItemTargetResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_FeedMappingResult:
		s := proto.Size(x.FeedMappingResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_FeedResult:
		s := proto.Size(x.FeedResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_LabelResult:
		s := proto.Size(x.LabelResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_MediaFileResult:
		s := proto.Size(x.MediaFileResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_RemarketingActionResult:
		s := proto.Size(x.RemarketingActionResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_SharedCriterionResult:
		s := proto.Size(x.SharedCriterionResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_SharedSetResult:
		s := proto.Size(x.SharedSetResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MutateOperationResponse_UserListResult:
		s := proto.Size(x.UserListResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*SearchGoogleAdsRequest)(nil), "google.ads.googleads.v1.services.SearchGoogleAdsRequest")
	proto.RegisterType((*SearchGoogleAdsResponse)(nil), "google.ads.googleads.v1.services.SearchGoogleAdsResponse")
	proto.RegisterType((*GoogleAdsRow)(nil), "google.ads.googleads.v1.services.GoogleAdsRow")
	proto.RegisterType((*MutateGoogleAdsRequest)(nil), "google.ads.googleads.v1.services.MutateGoogleAdsRequest")
	proto.RegisterType((*MutateGoogleAdsResponse)(nil), "google.ads.googleads.v1.services.MutateGoogleAdsResponse")
	proto.RegisterType((*MutateOperation)(nil), "google.ads.googleads.v1.services.MutateOperation")
	proto.RegisterType((*MutateOperationResponse)(nil), "google.ads.googleads.v1.services.MutateOperationResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GoogleAdsServiceClient is the client API for GoogleAdsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoogleAdsServiceClient interface {
	// Returns all rows that match the search query.
	Search(ctx context.Context, in *SearchGoogleAdsRequest, opts ...grpc.CallOption) (*SearchGoogleAdsResponse, error)
	// Creates, updates, or removes resources. Operation statuses are returned.
	Mutate(ctx context.Context, in *MutateGoogleAdsRequest, opts ...grpc.CallOption) (*MutateGoogleAdsResponse, error)
}

type googleAdsServiceClient struct {
	cc *grpc.ClientConn
}

func NewGoogleAdsServiceClient(cc *grpc.ClientConn) GoogleAdsServiceClient {
	return &googleAdsServiceClient{cc}
}

func (c *googleAdsServiceClient) Search(ctx context.Context, in *SearchGoogleAdsRequest, opts ...grpc.CallOption) (*SearchGoogleAdsResponse, error) {
	out := new(SearchGoogleAdsResponse)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v1.services.GoogleAdsService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *googleAdsServiceClient) Mutate(ctx context.Context, in *MutateGoogleAdsRequest, opts ...grpc.CallOption) (*MutateGoogleAdsResponse, error) {
	out := new(MutateGoogleAdsResponse)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v1.services.GoogleAdsService/Mutate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoogleAdsServiceServer is the server API for GoogleAdsService service.
type GoogleAdsServiceServer interface {
	// Returns all rows that match the search query.
	Search(context.Context, *SearchGoogleAdsRequest) (*SearchGoogleAdsResponse, error)
	// Creates, updates, or removes resources. Operation statuses are returned.
	Mutate(context.Context, *MutateGoogleAdsRequest) (*MutateGoogleAdsResponse, error)
}

func RegisterGoogleAdsServiceServer(s *grpc.Server, srv GoogleAdsServiceServer) {
	s.RegisterService(&_GoogleAdsService_serviceDesc, srv)
}

func _GoogleAdsService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchGoogleAdsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleAdsServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v1.services.GoogleAdsService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleAdsServiceServer).Search(ctx, req.(*SearchGoogleAdsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoogleAdsService_Mutate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MutateGoogleAdsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleAdsServiceServer).Mutate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v1.services.GoogleAdsService/Mutate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleAdsServiceServer).Mutate(ctx, req.(*MutateGoogleAdsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoogleAdsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.ads.googleads.v1.services.GoogleAdsService",
	HandlerType: (*GoogleAdsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _GoogleAdsService_Search_Handler,
		},
		{
			MethodName: "Mutate",
			Handler:    _GoogleAdsService_Mutate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/ads/googleads/v1/services/google_ads_service.proto",
}

func init() {
	proto.RegisterFile("google/ads/googleads/v1/services/google_ads_service.proto", fileDescriptor_google_ads_service_7f943554245b1e4e)
}

var fileDescriptor_google_ads_service_7f943554245b1e4e = []byte{
	// 4892 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x5d, 0xcd, 0x73, 0xdc, 0x46,
	0x76, 0xcf, 0x48, 0x96, 0x4d, 0x35, 0x29, 0x7e, 0x34, 0x49, 0xb1, 0x45, 0xc9, 0x12, 0x45, 0xc9,
	0x96, 0x2c, 0xdb, 0x43, 0x8b, 0xb2, 0x2d, 0x8b, 0xfa, 0x32, 0x49, 0x7d, 0xc6, 0xd2, 0x9a, 0x01,
	0x65, 0xd9, 0x6b, 0x69, 0x33, 0x69, 0x02, 0x3d, 0x43, 0x2c, 0x67, 0x80, 0x11, 0x80, 0xa1, 0x4c,
	0x79, 0xb5, 0xb5, 0xbb, 0x95, 0x54, 0x52, 0x95, 0xd4, 0x56, 0xa5, 0x76, 0x93, 0xaa, 0x5c, 0x73,
	0xcc, 0x29, 0xc7, 0xfc, 0x0d, 0xb9, 0xe6, 0x96, 0x73, 0xaa, 0x52, 0x95, 0x6b, 0xaa, 0x72, 0xca,
	0x61, 0x0b, 0x8d, 0x06, 0xd0, 0xdd, 0x68, 0xcc, 0xbc, 0xd6, 0xde, 0x06, 0xaf, 0xf1, 0x7b, 0xef,
	0xa1, 0xf1, 0xfa, 0xf5, 0x7b, 0x0f, 0xaf, 0x49, 0x74, 0xad, 0x13, 0x86, 0x9d, 0x2e, 0x5b, 0xa1,
	0x5e, 0xbc, 0x92, 0xfd, 0x4c, 0x7f, 0xed, 0x5f, 0x5e, 0x89, 0x59, 0xb4, 0xef, 0xbb, 0x2c, 0xa7,
	0xb6, 0xa8, 0x17, 0xb7, 0x04, 0xad, 0xd9, 0x8f, 0xc2, 0x24, 0xc4, 0x4b, 0xd9, 0x48, 0x93, 0x7a,
	0x71, 0xb3, 0x80, 0x36, 0xf7, 0x2f, 0x37, 0x73, 0xe8, 0xe2, 0x47, 0x75, 0xcc, 0xdd, 0xb0, 0xd7,
	0x0b, 0x83, 0x95, 0x1e, 0x4b, 0x22, 0xdf, 0x8d, 0x33, 0x7e, 0x8b, 0x1f, 0x8f, 0xb8, 0x3b, 0x66,
	0x9d, 0x1e, 0x0b, 0x92, 0xfc, 0xf6, 0xcf, 0xeb, 0x6e, 0x8f, 0x58, 0x1c, 0x0e, 0xa2, 0x54, 0x75,
	0xea, 0xba, 0xe1, 0x20, 0x48, 0x5a, 0x3b, 0x03, 0xaf, 0xc3, 0x12, 0x81, 0xbb, 0x6d, 0x8b, 0x6b,
	0xf5, 0xa3, 0xb0, 0x1f, 0xc6, 0xb4, 0x2b, 0x18, 0x7c, 0x02, 0x60, 0xe0, 0xb5, 0x3a, 0x51, 0x38,
	0xe8, 0x0b, 0xc4, 0x15, 0x38, 0xa2, 0x45, 0x3d, 0x01, 0xba, 0x66, 0x05, 0x6a, 0x75, 0xe9, 0x0e,
	0xcb, 0x35, 0xbc, 0x65, 0x03, 0x1d, 0x78, 0x3e, 0x0b, 0x5c, 0xd6, 0xda, 0xf7, 0xd9, 0x4b, 0x81,
	0xbf, 0x69, 0x81, 0xdf, 0xf1, 0xbd, 0x56, 0x2f, 0xf4, 0xfc, 0xb6, 0xcf, 0x22, 0x01, 0x5f, 0xb3,
	0x80, 0xbb, 0x91, 0x9f, 0xb0, 0xc8, 0x0f, 0x03, 0x81, 0xfd, 0xf2, 0x4d, 0xb0, 0xca, 0xc3, 0x6f,
	0x58, 0x70, 0x60, 0x3f, 0x24, 0x2c, 0x88, 0x53, 0x0e, 0x31, 0x4b, 0x12, 0x3f, 0xe8, 0x08, 0x1e,
	0x9f, 0x59, 0xf0, 0x68, 0x33, 0xe6, 0x59, 0x98, 0x64, 0x0e, 0x93, 0x55, 0xfe, 0x02, 0x84, 0x8b,
	0xdd, 0x5d, 0xe6, 0x0d, 0xba, 0xca, 0x9b, 0x82, 0x48, 0xec, 0xb0, 0x56, 0x44, 0x83, 0x8e, 0x82,
	0xfb, 0x18, 0x80, 0x8b, 0xe3, 0x62, 0xcd, 0x00, 0x14, 0xdc, 0xf1, 0x3d, 0xcf, 0x0f, 0x3a, 0xad,
	0x38, 0x89, 0x68, 0xc2, 0x3a, 0x07, 0xf0, 0x99, 0xdc, 0xf1, 0xbb, 0x5d, 0x8e, 0x64, 0x49, 0xb1,
	0x62, 0x00, 0x6b, 0xcc, 0xa5, 0xbd, 0x3e, 0xf5, 0x3b, 0x01, 0xdc, 0xe6, 0x73, 0xc4, 0x9b, 0xda,
	0x7c, 0x81, 0x37, 0xd8, 0xfc, 0x55, 0x1b, 0xb8, 0xec, 0x8e, 0xd6, 0x2c, 0x80, 0xfa, 0x62, 0xd9,
	0xb0, 0xc0, 0xfe, 0x11, 0xa6, 0x5e, 0xf0, 0xb0, 0x33, 0xf5, 0x02, 0x26, 0x9b, 0xfa, 0x75, 0x0b,
	0x5c, 0xbc, 0x4b, 0x23, 0xe6, 0xb5, 0xac, 0xcc, 0xd0, 0xa5, 0x51, 0xe4, 0xb3, 0xa8, 0xe5, 0x86,
	0x41, 0x9c, 0xd0, 0x20, 0xb1, 0x78, 0xca, 0x5d, 0xbe, 0x48, 0xe2, 0x84, 0x26, 0x83, 0x7c, 0x8f,
	0x59, 0x05, 0xc0, 0xba, 0xbe, 0xbb, 0x27, 0x1b, 0x12, 0xc0, 0x6f, 0xbb, 0x61, 0xb0, 0xcf, 0x22,
	0xfe, 0x32, 0xa8, 0x9b, 0x94, 0xef, 0x13, 0x62, 0x44, 0x83, 0x38, 0x09, 0x7b, 0x2d, 0x3f, 0x48,
	0x58, 0xc4, 0xe2, 0xc4, 0x62, 0xb9, 0x70, 0xa0, 0x95, 0xbd, 0x0a, 0x44, 0xcb, 0xed, 0xfa, 0xac,
	0x98, 0xc9, 0x1b, 0xd6, 0xc0, 0x56, 0xd7, 0x0f, 0xf6, 0x2c, 0x2c, 0x36, 0x47, 0xff, 0x31, 0x16,
	0x9b, 0xf3, 0xb0, 0xb4, 0xd8, 0x1c, 0x26, 0x5b, 0xec, 0x4d, 0x0b, 0x5c, 0x8f, 0x06, 0xb4, 0x93,
	0xe2, 0xcb, 0x27, 0xde, 0xb4, 0x80, 0x07, 0xac, 0x43, 0x13, 0x7f, 0x9f, 0x55, 0x16, 0x3a, 0x40,
	0x07, 0x8f, 0x25, 0xd4, 0xef, 0xb6, 0xfa, 0x5d, 0xea, 0xb2, 0x34, 0x4c, 0x92, 0x4d, 0x12, 0xf0,
	0xce, 0x3c, 0x3f, 0xee, 0x77, 0xe9, 0x41, 0x6b, 0x8f, 0x1d, 0xbc, 0x0c, 0x23, 0x4f, 0x46, 0x03,
	0x4c, 0xc5, 0x0b, 0x7b, 0xd4, 0x0f, 0x5a, 0x6e, 0xea, 0xf9, 0xc3, 0x28, 0xf7, 0xfd, 0x5f, 0x01,
	0x80, 0x07, 0x01, 0xed, 0xf9, 0x6e, 0x2b, 0x66, 0x34, 0x72, 0x77, 0x45, 0x90, 0xc9, 0x7f, 0x26,
	0x2c, 0xea, 0xc9, 0x5a, 0x00, 0x1c, 0x47, 0x69, 0x30, 0xe9, 0x6b, 0x6f, 0xf9, 0x09, 0xeb, 0x09,
	0xf0, 0x47, 0xa3, 0xc1, 0x92, 0xa5, 0x5c, 0x86, 0xdd, 0x2d, 0x0b, 0xf8, 0xc2, 0x02, 0xd2, 0x4a,
	0x68, 0x54, 0xfa, 0xff, 0x4f, 0x81, 0xc8, 0x1e, 0xed, 0xf7, 0xcb, 0x35, 0x70, 0x13, 0x88, 0xe2,
	0xe6, 0xb0, 0x1b, 0x76, 0x3d, 0x16, 0xc9, 0x93, 0x09, 0x08, 0x48, 0x3b, 0x2c, 0xd0, 0x40, 0xd7,
	0x21, 0xa0, 0x50, 0x3c, 0x9d, 0xee, 0x80, 0xaf, 0x82, 0xc0, 0x9d, 0x88, 0xf6, 0x77, 0x7d, 0xd7,
	0xd2, 0x76, 0xb3, 0x80, 0xca, 0x68, 0xf9, 0x80, 0xf7, 0xb2, 0x1b, 0x26, 0xac, 0x2b, 0x82, 0x32,
	0x09, 0x79, 0x0b, 0x8a, 0xec, 0xb3, 0xa8, 0x1d, 0x46, 0x3d, 0xaa, 0xc5, 0x13, 0x80, 0xf7, 0x9a,
	0xaf, 0xb5, 0x7e, 0x97, 0x5a, 0x2c, 0x74, 0x19, 0xd5, 0xd2, 0x12, 0x0d, 0x5b, 0xb8, 0x16, 0x43,
	0xdd, 0xb0, 0x84, 0x8b, 0x0b, 0x81, 0xbe, 0x6b, 0x89, 0x2e, 0xbc, 0x9d, 0xca, 0xc6, 0x62, 0xe2,
	0xec, 0x02, 0x5a, 0xd9, 0xa9, 0x5f, 0x83, 0xdc, 0x1e, 0x74, 0x06, 0x69, 0xf0, 0x6c, 0x1f, 0x4a,
	0x74, 0x43, 0x97, 0xa6, 0xdb, 0xba, 0xa5, 0x3d, 0x65, 0xbb, 0x87, 0x67, 0xb6, 0x64, 0x40, 0x28,
	0xd2, 0x63, 0x9e, 0x4f, 0x5b, 0x6d, 0xbf, 0x2b, 0x32, 0xf4, 0xc5, 0x3b, 0x00, 0x4c, 0xb8, 0xe3,
	0xa7, 0xd9, 0x7d, 0xbf, 0x5f, 0x78, 0x6f, 0xfd, 0x81, 0x6f, 0x81, 0xb9, 0x78, 0x2c, 0xcd, 0xfb,
	0x75, 0xfc, 0xc3, 0xd1, 0xf8, 0xb0, 0xcf, 0x22, 0x9a, 0xf0, 0x24, 0xe0, 0x20, 0x4e, 0x5d, 0x64,
	0x1e, 0x1e, 0x69, 0xac, 0x00, 0x06, 0xda, 0xa7, 0x11, 0x0b, 0x12, 0xda, 0x15, 0x81, 0x9c, 0x3c,
	0x85, 0x00, 0x45, 0xfa, 0x51, 0xe8, 0x0d, 0xdc, 0xa4, 0x95, 0x67, 0x33, 0x75, 0x73, 0xb2, 0x06,
	0x67, 0x55, 0xf1, 0x2c, 0x80, 0x40, 0x24, 0x62, 0x6e, 0xd8, 0xeb, 0xb1, 0xc0, 0xa3, 0x52, 0x74,
	0xb8, 0x06, 0xc1, 0xf5, 0x68, 0xb4, 0xc7, 0xf8, 0x4c, 0x2a, 0x91, 0x25, 0xc0, 0x0f, 0xd6, 0xec,
	0xbb, 0x10, 0x64, 0x16, 0xa7, 0xeb, 0x41, 0xcb, 0x2a, 0x18, 0x59, 0x46, 0xf8, 0xeb, 0x10, 0x4c,
	0xc8, 0x77, 0xc2, 0x3a, 0xc7, 0x0b, 0x98, 0xde, 0x24, 0xec, 0xfb, 0xae, 0xfe, 0x4a, 0x57, 0xa1,
	0x38, 0x49, 0x16, 0xc0, 0x17, 0x0c, 0x62, 0x16, 0xe9, 0xe1, 0xfa, 0x65, 0x20, 0xac, 0xeb, 0x17,
	0x10, 0x80, 0x7f, 0xdb, 0xf7, 0x3d, 0x16, 0x8e, 0x2a, 0xa3, 0x14, 0x65, 0xbd, 0x4a, 0xed, 0x48,
	0xad, 0xee, 0xd5, 0x5b, 0x9b, 0x91, 0x83, 0x8a, 0xbd, 0x03, 0xc7, 0xca, 0xa9, 0xb4, 0xc6, 0xe5,
	0x3e, 0x9c, 0x8b, 0x56, 0x09, 0xd2, 0x18, 0xad, 0xbf, 0x09, 0x23, 0x95, 0xc5, 0x43, 0x38, 0x8b,
	0x4a, 0xda, 0xa2, 0xb1, 0xba, 0x01, 0x67, 0xc5, 0x43, 0x38, 0x15, 0x7d, 0x13, 0x8e, 0x36, 0x4d,
	0xc5, 0x55, 0x38, 0x5c, 0x05, 0x5e, 0x87, 0x00, 0xfb, 0x34, 0xa2, 0x3d, 0x96, 0x54, 0xde, 0xe4,
	0xa7, 0xa3, 0xc1, 0x71, 0xcc, 0x12, 0x0d, 0x75, 0x7b, 0x24, 0x4a, 0xaf, 0x39, 0x59, 0x9b, 0xa1,
	0xb1, 0xa2, 0xa3, 0x71, 0xb9, 0x65, 0xc1, 0x25, 0xab, 0x17, 0xdb, 0x5a, 0x5f, 0xb5, 0xbe, 0x63,
	0x6d, 0x7d, 0xf5, 0x65, 0x1e, 0x6b, 0xeb, 0x53, 0xaa, 0x3d, 0xd6, 0xd6, 0xa7, 0x16, 0x7d, 0xac,
	0xad, 0xaf, 0xac, 0xfd, 0x28, 0xc0, 0x0d, 0x0b, 0x60, 0xb1, 0xa5, 0x68, 0x3c, 0x46, 0xbb, 0xc4,
	0x4a, 0x59, 0xc6, 0xfe, 0x35, 0xd4, 0xd6, 0x2e, 0xec, 0x5f, 0x83, 0x5c, 0xc2, 0xb0, 0x7f, 0x0d,
	0x4a, 0x25, 0x43, 0x83, 0xff, 0x29, 0x1c, 0x5e, 0xad, 0x48, 0xd8, 0xbf, 0xd2, 0x9c, 0x97, 0xed,
	0x2b, 0x35, 0xa4, 0xf3, 0x1a, 0x8f, 0x2f, 0x46, 0xf2, 0xa8, 0x43, 0xde, 0xb6, 0x40, 0x8a, 0x84,
	0xd6, 0xd6, 0x1f, 0xca, 0x59, 0xbb, 0x06, 0xbe, 0x02, 0x03, 0xdb, 0x3a, 0x51, 0xd3, 0xbb, 0x1e,
	0xfd, 0x7d, 0xaf, 0xcc, 0x1a, 0xac, 0x1d, 0x57, 0x35, 0xdc, 0xb4, 0x9e, 0x66, 0x3d, 0x76, 0xb4,
	0x56, 0xbf, 0x76, 0xbd, 0x8f, 0x36, 0x8e, 0x22, 0xc6, 0xd2, 0x90, 0xa7, 0x72, 0x64, 0xdf, 0x5f,
	0xa1, 0x41, 0x10, 0x26, 0x3c, 0x0a, 0xcf, 0x6b, 0xc2, 0xe2, 0xb3, 0xe7, 0x0a, 0xbf, 0xda, 0x19,
	0xb4, 0x57, 0xda, 0x3e, 0xeb, 0xa6, 0x6f, 0x3a, 0xce, 0x4b, 0x7e, 0x0b, 0xe2, 0x8e, 0xa8, 0xef,
	0xae, 0xc8, 0xe5, 0xe4, 0xe5, 0x7f, 0x6d, 0xa0, 0xe3, 0xdb, 0x3c, 0xcc, 0xbe, 0xcf, 0xef, 0x58,
	0xf7, 0x62, 0x87, 0xbd, 0x18, 0xb0, 0x38, 0xc1, 0x67, 0xd0, 0x78, 0xb1, 0x50, 0x7c, 0x8f, 0x34,
	0x96, 0x1a, 0x17, 0x8f, 0x3a, 0x28, 0x27, 0x3d, 0xf4, 0xf0, 0x1c, 0x3a, 0xf2, 0x62, 0xc0, 0xa2,
	0x03, 0x72, 0x88, 0x0f, 0x65, 0x17, 0xf8, 0x5d, 0x84, 0xfa, 0x69, 0x8e, 0x9a, 0x84, 0x7b, 0x2c,
	0x20, 0x87, 0xf9, 0xd0, 0xd1, 0x94, 0xf2, 0x24, 0x25, 0xe0, 0x93, 0x88, 0x5f, 0xb4, 0x62, 0xff,
	0x15, 0x23, 0x6f, 0x2d, 0x35, 0x2e, 0x1e, 0x71, 0xc6, 0x52, 0xc2, 0xb6, 0xff, 0x8a, 0xe1, 0x73,
	0xe8, 0xd8, 0x3e, 0xed, 0xfa, 0x1e, 0x4d, 0x58, 0x2b, 0x0c, 0xba, 0x07, 0xe4, 0xc8, 0x52, 0xe3,
	0xe2, 0x98, 0x33, 0x91, 0x13, 0xbf, 0x0e, 0xba, 0x07, 0xcb, 0xff, 0xd7, 0x40, 0x0b, 0x15, 0x95,
	0xe3, 0x7e, 0x18, 0xc4, 0x0c, 0x3f, 0x40, 0xef, 0x44, 0x2c, 0x1e, 0x74, 0x93, 0x98, 0x34, 0x96,
	0x0e, 0x5f, 0x1c, 0x5f, 0x6d, 0x36, 0x47, 0x7d, 0x12, 0x6e, 0x96, 0x5c, 0xc2, 0x97, 0x4e, 0x0e,
	0xc7, 0xef, 0xa3, 0xa9, 0x80, 0xfd, 0x90, 0xb4, 0xa4, 0x67, 0xc9, 0x1e, 0xf3, 0x58, 0x4a, 0xde,
	0x2a, 0x9e, 0xa7, 0x89, 0x66, 0x93, 0x30, 0x4d, 0xee, 0x04, 0xb0, 0xc5, 0xbf, 0xd3, 0xf2, 0xe7,
	0x3e, 0xec, 0xcc, 0xf0, 0x21, 0x27, 0x1b, 0xd9, 0x4c, 0x07, 0xf0, 0x35, 0x84, 0xca, 0xb7, 0xc3,
	0x9f, 0x6f, 0x7c, 0x75, 0x31, 0x57, 0x32, 0x7f, 0x81, 0xcd, 0x7b, 0xe9, 0x2d, 0x8f, 0x69, 0xbc,
	0xe7, 0x1c, 0x6d, 0xe7, 0x3f, 0x97, 0xff, 0xf7, 0x36, 0x9a, 0x90, 0x95, 0xc5, 0xdf, 0xa2, 0x49,
	0xf5, 0xbb, 0x30, 0xb9, 0xc4, 0xf9, 0x7d, 0x52, 0xfb, 0xd0, 0x45, 0x68, 0xde, 0x5c, 0xcf, 0x80,
	0x1b, 0x1c, 0xe7, 0x1c, 0xa3, 0xf2, 0x25, 0xee, 0xa3, 0x85, 0x9a, 0x0f, 0xce, 0xe4, 0x43, 0x2e,
	0xe1, 0x0b, 0x5b, 0x09, 0x5b, 0x02, 0xef, 0xcc, 0x53, 0x13, 0x19, 0xdf, 0x45, 0x63, 0x79, 0x98,
	0xc7, 0xe7, 0x6e, 0x7c, 0xf5, 0x12, 0x44, 0x84, 0x77, 0x3f, 0x45, 0x38, 0xef, 0xd0, 0xec, 0x07,
	0x7e, 0x84, 0xc6, 0xa5, 0x1c, 0x80, 0x4c, 0x73, 0x4e, 0x1f, 0xc1, 0x39, 0xad, 0x7b, 0xce, 0x51,
	0x9a, 0xff, 0xc4, 0xcf, 0xd1, 0x4c, 0x25, 0x27, 0x21, 0x3f, 0x70, 0x9e, 0x97, 0x6d, 0x78, 0x3e,
	0x4a, 0x81, 0xce, 0x24, 0x55, 0xae, 0xf1, 0x1e, 0x3a, 0x6e, 0xfe, 0xe4, 0x4d, 0xae, 0x71, 0x11,
	0x9f, 0x5b, 0x88, 0x10, 0xf0, 0xa7, 0x3e, 0x7b, 0xe9, 0xcc, 0xd2, 0x2a, 0x11, 0xef, 0xa2, 0x79,
	0x63, 0x82, 0x43, 0x08, 0x97, 0xf5, 0x19, 0x5c, 0xd6, 0x86, 0xef, 0x3d, 0x16, 0x60, 0x07, 0xd3,
	0x0a, 0x0d, 0x53, 0x84, 0xab, 0xb9, 0x0b, 0x99, 0xe1, 0x62, 0xae, 0xc0, 0xc5, 0x6c, 0xe6, 0x50,
	0x67, 0x9a, 0x6a, 0x14, 0xfc, 0x02, 0x91, 0xba, 0x3c, 0x8b, 0x1c, 0xc0, 0xed, 0x53, 0x63, 0x9b,
	0xbd, 0xa5, 0x79, 0x6a, 0x22, 0xe3, 0x97, 0x68, 0xb1, 0x3e, 0x9d, 0x22, 0x7d, 0x2e, 0x74, 0x0d,
	0x2e, 0xf4, 0x6e, 0xce, 0x62, 0x3b, 0xe3, 0xe0, 0x2c, 0x50, 0xf3, 0x00, 0x76, 0xd0, 0x31, 0x25,
	0xf9, 0x22, 0x9b, 0x5c, 0x56, 0x13, 0x2e, 0xeb, 0x1e, 0x63, 0x9e, 0x33, 0x4e, 0xcb, 0x0b, 0xfc,
	0x0d, 0x9a, 0x54, 0x53, 0x32, 0x12, 0x73, 0xa6, 0x2b, 0x70, 0xa6, 0xd9, 0x64, 0x4d, 0x50, 0xe9,
	0x8a, 0xb3, 0x55, 0xbe, 0xec, 0x93, 0x4f, 0xe0, 0x6c, 0x3b, 0xcc, 0x49, 0x71, 0xdc, 0x82, 0x27,
	0xa8, 0x74, 0x85, 0x9f, 0xa1, 0x69, 0xbd, 0xd5, 0x80, 0xfc, 0xd4, 0x62, 0x11, 0x6e, 0x0b, 0x24,
	0x67, 0x3d, 0x49, 0x95, 0x6b, 0xfc, 0x3d, 0x9a, 0xd2, 0xbe, 0x14, 0x91, 0x67, 0x60, 0xde, 0x77,
	0x38, 0x72, 0x53, 0x00, 0x9d, 0x49, 0x4f, 0xb9, 0xc6, 0xb7, 0xd0, 0x11, 0x9e, 0x44, 0x12, 0x9f,
	0x73, 0xbc, 0x08, 0xd1, 0x36, 0xbd, 0xdf, 0xc9, 0x60, 0xf8, 0x67, 0x68, 0x5a, 0x4f, 0x27, 0x09,
	0xe6, 0xac, 0x56, 0x01, 0xac, 0x36, 0x32, 0xe8, 0xb6, 0x40, 0x3a, 0x53, 0x3b, 0x2a, 0x01, 0x3f,
	0x41, 0xc7, 0x94, 0x3e, 0x07, 0xf2, 0x01, 0xf8, 0x6d, 0x6d, 0x64, 0xb8, 0xed, 0x14, 0xe6, 0x4c,
	0xec, 0x48, 0x57, 0xe9, 0x84, 0x6a, 0xc9, 0x27, 0x99, 0x05, 0x4f, 0xe8, 0xa6, 0x40, 0x8a, 0x5d,
	0x69, 0xd2, 0x55, 0xae, 0xf1, 0x7d, 0x34, 0x96, 0x53, 0xf8, 0x66, 0x3c, 0xbe, 0xfa, 0xa1, 0x05,
	0x53, 0xa7, 0x00, 0xe3, 0x1e, 0x3a, 0x6e, 0xee, 0xbc, 0x20, 0x77, 0x39, 0xdb, 0xab, 0x16, 0x6c,
	0x15, 0xdf, 0x3b, 0xe7, 0x1a, 0xa8, 0xf8, 0xe7, 0x68, 0xde, 0x98, 0xd6, 0x93, 0x45, 0xb0, 0xa3,
	0x2f, 0x66, 0x46, 0xf2, 0xbe, 0xb3, 0x6e, 0x95, 0x88, 0x5d, 0x84, 0xab, 0xc9, 0x3b, 0x99, 0xe3,
	0x82, 0x3e, 0xb5, 0x10, 0x54, 0xfa, 0xdf, 0x19, 0x57, 0x27, 0xe1, 0x03, 0xb4, 0x58, 0x9f, 0xde,
	0x93, 0x17, 0x5c, 0xd8, 0x75, 0x0b, 0x61, 0x15, 0x77, 0x48, 0xdc, 0x9a, 0x91, 0xd4, 0x6a, 0x95,
	0x72, 0x00, 0xb9, 0x0d, 0xb6, 0xda, 0x5c, 0x1a, 0x77, 0x88, 0x13, 0xae, 0x74, 0x95, 0x46, 0x52,
	0x6a, 0x99, 0x80, 0x74, 0xc1, 0x91, 0x54, 0xce, 0x36, 0x73, 0x89, 0x85, 0x76, 0x99, 0x4f, 0xf4,
	0xd0, 0xac, 0xa1, 0x0e, 0x40, 0x4e, 0x5b, 0xbf, 0x8f, 0x6d, 0x0e, 0xde, 0x66, 0x49, 0xf9, 0x3e,
	0x0a, 0x52, 0xea, 0x29, 0xf4, 0x2e, 0x13, 0xb2, 0x01, 0xf6, 0x14, 0x9b, 0x19, 0x74, 0x53, 0x20,
	0x9d, 0x29, 0x57, 0x25, 0xf0, 0x39, 0x97, 0x5b, 0x51, 0xc8, 0x7b, 0xf0, 0x39, 0xe7, 0xb8, 0x6d,
	0x0e, 0x73, 0x26, 0x5c, 0xe9, 0x0a, 0xff, 0x05, 0x9a, 0xa9, 0x94, 0x37, 0x48, 0x07, 0x1c, 0x27,
	0x6c, 0x16, 0xd8, 0x75, 0x0e, 0x75, 0xa6, 0x5d, 0x8d, 0x82, 0xbf, 0x42, 0xa8, 0xec, 0x85, 0x21,
	0xaf, 0xc0, 0xc1, 0xe0, 0x66, 0x0a, 0xe2, 0xeb, 0xf9, 0xa8, 0x9b, 0xff, 0xe4, 0x8e, 0x4d, 0xed,
	0x74, 0x21, 0xbb, 0x70, 0xc7, 0xc6, 0x91, 0x0f, 0x05, 0xd0, 0x99, 0x74, 0x95, 0x6b, 0xee, 0xd8,
	0x44, 0x5e, 0xc5, 0xf3, 0x2c, 0xa0, 0x63, 0x13, 0x10, 0xa7, 0x00, 0x73, 0x4f, 0x63, 0xea, 0xfc,
	0x20, 0x37, 0xe1, 0x9e, 0x46, 0xe0, 0x1f, 0x67, 0xf0, 0x47, 0x7e, 0xb0, 0xe7, 0xcc, 0xba, 0x55,
	0x22, 0xee, 0xa0, 0x39, 0x53, 0x5b, 0x0d, 0xb9, 0x05, 0x8e, 0x28, 0x73, 0x51, 0x9b, 0x1c, 0xcd,
	0x25, 0x61, 0xb7, 0x42, 0x2b, 0x67, 0xbe, 0x10, 0x44, 0xee, 0x59, 0xce, 0x7c, 0xce, 0x2f, 0x9f,
	0xf9, 0xfc, 0x9a, 0x7b, 0xb2, 0xda, 0x0a, 0x19, 0x89, 0xe0, 0x9e, 0x4c, 0x30, 0x31, 0x78, 0xb2,
	0x9a, 0x11, 0xbe, 0xaa, 0xe4, 0x8a, 0x1a, 0xf9, 0x12, 0xbe, 0xaa, 0x04, 0x4e, 0x78, 0x32, 0xe9,
	0x8a, 0x7b, 0x32, 0xa5, 0xd2, 0x46, 0x7e, 0x01, 0xf7, 0x64, 0x02, 0x98, 0x7b, 0x32, 0xf9, 0x12,
	0xff, 0x02, 0x9d, 0x1c, 0x52, 0x83, 0x23, 0xdf, 0x71, 0x29, 0x37, 0x2c, 0xa4, 0xfc, 0x44, 0x30,
	0x29, 0x77, 0x9a, 0x13, 0x6e, 0xdd, 0x50, 0x6a, 0xd8, 0xc6, 0x76, 0x22, 0xb2, 0x0f, 0x36, 0xec,
	0x3b, 0x1c, 0xbf, 0x95, 0xc3, 0xb3, 0x5c, 0xc9, 0xab, 0x12, 0x53, 0xc3, 0x36, 0xf5, 0x1e, 0x91,
	0x15, 0xb0, 0x61, 0xdf, 0xc9, 0xe0, 0x5f, 0x65, 0x68, 0x2e, 0x09, 0x7b, 0x15, 0x1a, 0xfe, 0x6d,
	0x03, 0x9d, 0x03, 0xb4, 0x1b, 0x91, 0x9f, 0x73, 0xc1, 0xeb, 0x10, 0xc1, 0x19, 0xb7, 0xac, 0x3c,
	0xb2, 0xee, 0xc5, 0xd9, 0x8f, 0x27, 0x2c, 0xea, 0x71, 0x25, 0x4e, 0x7b, 0x43, 0xc7, 0xd3, 0xdd,
	0xca, 0x50, 0xe2, 0x24, 0xdf, 0x80, 0x77, 0xab, 0xc2, 0xc8, 0x53, 0x5b, 0x7c, 0x98, 0xb0, 0x9e,
	0x33, 0xc3, 0x74, 0x12, 0xbe, 0x8e, 0xde, 0xe2, 0xf6, 0xde, 0xe4, 0x6c, 0x2f, 0x00, 0xd8, 0x72,
	0x3b, 0xe7, 0x20, 0xfc, 0x00, 0x1d, 0x2d, 0x15, 0x5b, 0x05, 0xfb, 0xca, 0x42, 0x9f, 0xb1, 0x76,
	0xae, 0xc6, 0x33, 0x34, 0xad, 0x57, 0x54, 0x49, 0x02, 0xf6, 0x2b, 0x39, 0xc3, 0x27, 0x1c, 0xe8,
	0x4c, 0xb6, 0x95, 0x6b, 0xfc, 0x67, 0x68, 0x42, 0xae, 0xb6, 0x92, 0x35, 0x70, 0xd6, 0x96, 0x32,
	0x7e, 0x9c, 0xa1, 0x9c, 0xf1, 0x76, 0x79, 0x91, 0x2e, 0x01, 0x63, 0x03, 0x15, 0xa1, 0xe0, 0x25,
	0x90, 0xf2, 0xde, 0x2a, 0xe1, 0xd9, 0x12, 0x68, 0x57, 0x89, 0xf8, 0x27, 0x68, 0x5c, 0xea, 0xb6,
	0x22, 0x17, 0xb9, 0x84, 0x8f, 0x01, 0x12, 0xee, 0x73, 0x14, 0x67, 0x8c, 0x3a, 0xc5, 0xef, 0xd4,
	0xb0, 0x0c, 0x8d, 0x58, 0x64, 0x01, 0x6c, 0x58, 0xf7, 0x59, 0x98, 0xcd, 0x6c, 0x11, 0xa5, 0xcc,
	0x74, 0x74, 0x52, 0xba, 0x51, 0x68, 0x1d, 0x5b, 0xe4, 0x35, 0xf8, 0x85, 0xde, 0x2f, 0x90, 0x59,
	0xa2, 0xd8, 0x51, 0xae, 0x53, 0xa7, 0x60, 0x6a, 0xea, 0x22, 0x2f, 0xc1, 0x4e, 0x81, 0x67, 0xca,
	0xaa, 0xfb, 0xc1, 0x9d, 0x0a, 0x2d, 0x35, 0x4b, 0xbd, 0xff, 0x8b, 0x5c, 0x01, 0x3f, 0xc5, 0x83,
	0x14, 0xca, 0x25, 0x65, 0x4f, 0xb1, 0xab, 0x5c, 0xa7, 0x89, 0x8f, 0xb9, 0x45, 0x8c, 0xdc, 0x07,
	0x27, 0x3e, 0x5c, 0xc4, 0x56, 0x89, 0xcf, 0x12, 0x9f, 0x5d, 0x03, 0x35, 0x5d, 0x05, 0x8a, 0x07,
	0x9d, 0x07, 0xaf, 0x02, 0xd9, 0x75, 0x8e, 0xef, 0x49, 0x3e, 0x53, 0x62, 0xd9, 0xef, 0xd2, 0x80,
	0x2c, 0xd9, 0xb2, 0xdc, 0xea, 0xd2, 0xa0, 0x60, 0x99, 0x5e, 0xa4, 0x0b, 0xcb, 0xd8, 0x82, 0x46,
	0xce, 0x82, 0x17, 0x96, 0xc4, 0xbb, 0x48, 0x37, 0x67, 0xf7, 0xaa, 0x44, 0xfc, 0xab, 0x06, 0x7a,
	0x77, 0x68, 0xcb, 0x19, 0x59, 0xe6, 0x42, 0x6f, 0xda, 0x09, 0xcd, 0x37, 0x4c, 0x41, 0x72, 0x16,
	0xf7, 0x6a, 0xc7, 0xf0, 0xae, 0xf6, 0xb8, 0x45, 0xdd, 0xf5, 0x1c, 0xd8, 0x94, 0x25, 0xc9, 0x79,
	0x09, 0x16, 0xef, 0x55, 0x68, 0xe9, 0x9a, 0x31, 0x35, 0xe7, 0x91, 0xf3, 0x6f, 0x22, 0x28, 0x7f,
	0x34, 0x59, 0x50, 0xfe, 0x48, 0xb7, 0xd0, 0x91, 0x2c, 0xd6, 0xf9, 0x14, 0x5c, 0x69, 0xc9, 0x62,
	0x9c, 0x0c, 0x96, 0xa6, 0x22, 0x95, 0xde, 0x3a, 0x72, 0x15, 0x9c, 0x8a, 0x3c, 0x12, 0xd8, 0xc2,
	0x37, 0x4d, 0x77, 0x35, 0x4a, 0x1a, 0xec, 0x29, 0x2d, 0x78, 0xe4, 0x47, 0x70, 0xb0, 0xf7, 0x48,
	0xe0, 0xb2, 0xd2, 0x58, 0x57, 0xba, 0x4a, 0x97, 0xb3, 0xb9, 0x43, 0x8f, 0x7c, 0x06, 0x5e, 0xce,
	0x59, 0x48, 0xef, 0xa9, 0x8e, 0x69, 0xae, 0x67, 0xa0, 0xa6, 0xf9, 0x54, 0xf9, 0x69, 0x8e, 0x7c,
	0x0f, 0xce, 0xa7, 0x1e, 0xa7, 0xa0, 0x7b, 0x7e, 0x97, 0x39, 0x47, 0x7b, 0xf9, 0x4f, 0xfc, 0x1a,
	0x9d, 0x1a, 0xd6, 0xe9, 0x47, 0xbe, 0x05, 0x07, 0x94, 0x8f, 0x39, 0x9b, 0xf5, 0x7e, 0x3f, 0xaf,
	0xbc, 0x15, 0xef, 0xe1, 0x44, 0xaf, 0x6e, 0x88, 0x4f, 0x9d, 0xb1, 0x45, 0x90, 0xec, 0xc0, 0xa7,
	0x8e, 0x33, 0xb8, 0xc3, 0xf1, 0x85, 0xcc, 0xb9, 0x9e, 0x81, 0x8a, 0xff, 0xae, 0x81, 0xce, 0x8e,
	0x6c, 0x29, 0x24, 0x4f, 0xc1, 0x81, 0xde, 0xd7, 0x39, 0xaf, 0x6d, 0xce, 0xea, 0x69, 0xc6, 0xa9,
	0x50, 0xe2, 0x74, 0x38, 0x74, 0x3c, 0x5d, 0x99, 0xa6, 0xae, 0x44, 0xf2, 0x31, 0x78, 0x65, 0x6e,
	0x09, 0x78, 0x96, 0xcc, 0x67, 0xbb, 0x59, 0xbf, 0x42, 0xe3, 0xcf, 0x3d, 0xb2, 0x83, 0x91, 0xf4,
	0xc0, 0xcf, 0xbd, 0x95, 0xf1, 0x12, 0xc5, 0xcd, 0xca, 0x0b, 0x3f, 0xdd, 0x1f, 0x3a, 0x8e, 0x29,
	0xc2, 0xd5, 0x26, 0x48, 0xf2, 0x39, 0x78, 0xa5, 0x0b, 0xf1, 0xe5, 0x06, 0x3b, 0xdd, 0xd7, 0x28,
	0xf8, 0xa7, 0x68, 0x52, 0xed, 0x95, 0x24, 0xc7, 0xc1, 0xbb, 0xb7, 0xa3, 0x00, 0x1d, 0x8d, 0x51,
	0x1a, 0x1a, 0x54, 0x72, 0x83, 0x3b, 0x60, 0xe6, 0x5a, 0x2e, 0x30, 0x19, 0xab, 0xb1, 0xff, 0xcf,
	0xd0, 0xb4, 0xfe, 0xe5, 0x9b, 0xbc, 0x0b, 0xae, 0x21, 0x65, 0xb5, 0xa8, 0x32, 0x95, 0x9b, 0x8a,
	0x55, 0x42, 0xea, 0x3b, 0xa4, 0xfa, 0xd7, 0x49, 0xb0, 0xef, 0x28, 0xeb, 0x5e, 0x47, 0xe3, 0xa2,
	0xde, 0xb5, 0x8f, 0x4e, 0xd4, 0xf6, 0x5c, 0x92, 0x01, 0xf8, 0x63, 0xcc, 0xb6, 0xe0, 0xa1, 0x07,
	0x33, 0x0b, 0xb1, 0x79, 0x20, 0x7d, 0x88, 0xb2, 0xe1, 0x92, 0x7c, 0x04, 0x7e, 0x88, 0x27, 0x29,
	0x28, 0x2b, 0x28, 0x25, 0xf9, 0xcf, 0x74, 0x4b, 0x50, 0x3a, 0x31, 0xc9, 0x75, 0xf0, 0x96, 0xf0,
	0x4d, 0xcc, 0xa2, 0xa2, 0x98, 0x34, 0x31, 0x90, 0xae, 0xd2, 0xfc, 0xa8, 0x68, 0x22, 0x20, 0xef,
	0x83, 0xf3, 0xa3, 0x94, 0xe3, 0x23, 0x3f, 0x4e, 0x9c, 0xb1, 0x81, 0xf8, 0x85, 0x5d, 0x84, 0xab,
	0xdd, 0x14, 0xe4, 0x06, 0x38, 0x64, 0x77, 0x4a, 0xb0, 0xa8, 0xd0, 0xcd, 0x44, 0x3a, 0x09, 0x7f,
	0x8b, 0x26, 0xd5, 0xd6, 0x57, 0x72, 0x06, 0x5c, 0xae, 0xe0, 0xb3, 0x5a, 0x2c, 0xfd, 0x63, 0x89,
	0x7c, 0x99, 0x86, 0x04, 0xbc, 0xfb, 0x94, 0x5c, 0x00, 0x87, 0x04, 0x4f, 0xd3, 0xfb, 0x9d, 0x0c,
	0x86, 0xd7, 0xd1, 0x3b, 0xe2, 0x2c, 0x38, 0xef, 0x52, 0x18, 0x96, 0xa7, 0x66, 0x87, 0xc1, 0x9b,
	0x8f, 0xb3, 0xdb, 0x9d, 0x1c, 0x87, 0xef, 0xa0, 0xb1, 0xfc, 0x80, 0x38, 0x69, 0x8f, 0xd0, 0x42,
	0xf0, 0xd8, 0x16, 0xf7, 0x3b, 0x05, 0x72, 0xf9, 0xbf, 0x1b, 0xe8, 0xf8, 0xe3, 0x41, 0x42, 0x13,
	0x66, 0xdf, 0xa1, 0xf1, 0xe7, 0x68, 0xa6, 0xc7, 0xa1, 0x2d, 0xb1, 0x1f, 0x84, 0x41, 0x4c, 0x0e,
	0xf1, 0xc6, 0x88, 0xcb, 0xa3, 0x1b, 0x23, 0x32, 0xa9, 0x5f, 0xe7, 0x48, 0x67, 0xba, 0xa7, 0x12,
	0x62, 0x7c, 0x01, 0x4d, 0xf5, 0x69, 0x94, 0xf8, 0xb4, 0xdb, 0x6a, 0x53, 0xbf, 0x3b, 0x88, 0x18,
	0xff, 0x78, 0x3f, 0xe6, 0x4c, 0x0a, 0xf2, 0xbd, 0x8c, 0x5a, 0x6d, 0xec, 0x78, 0xcb, 0xd0, 0xd8,
	0xf1, 0x9f, 0x0d, 0xb4, 0x50, 0x79, 0x52, 0xd1, 0xd8, 0x71, 0x0f, 0xcd, 0x6b, 0x92, 0x5a, 0x2c,
	0x8a, 0xc2, 0x48, 0x34, 0x0b, 0xe0, 0xfc, 0x69, 0xa2, 0xbe, 0xdb, 0x14, 0xd5, 0xe6, 0x59, 0x55,
	0x87, 0xbb, 0xe9, 0xed, 0xf8, 0x25, 0x5a, 0xd4, 0x67, 0xa4, 0x15, 0x09, 0x21, 0x79, 0xcf, 0xc8,
	0x35, 0xfb, 0xa9, 0x11, 0x1c, 0x1c, 0xd2, 0x33, 0x0f, 0xc4, 0xcb, 0xbf, 0x3e, 0x87, 0xa6, 0x34,
	0x14, 0x3e, 0x40, 0x27, 0xab, 0x3d, 0xcf, 0x85, 0x5e, 0xe2, 0x9b, 0x39, 0x40, 0x1b, 0xb5, 0xd1,
	0xa0, 0xe0, 0xff, 0xe0, 0x4f, 0x8a, 0xcf, 0xca, 0xfa, 0x10, 0xf6, 0xa5, 0x7e, 0x00, 0xea, 0x49,
	0x42, 0x1b, 0x23, 0xd6, 0x77, 0x55, 0xa8, 0x2c, 0x0f, 0xd3, 0x0a, 0x15, 0xff, 0x55, 0x03, 0x9d,
	0x31, 0x37, 0x57, 0x97, 0x52, 0x0f, 0x8d, 0x48, 0x7a, 0x74, 0xa9, 0xd2, 0x17, 0x2f, 0x59, 0xfc,
	0x49, 0x5a, 0x3f, 0x8c, 0x7f, 0xdb, 0x40, 0xcb, 0xb5, 0xed, 0xd9, 0xa5, 0x2a, 0xd9, 0x17, 0xd6,
	0x2f, 0xc1, 0xaa, 0xa8, 0x8d, 0x02, 0xb2, 0x36, 0xa7, 0xe9, 0xd0, 0x3b, 0xf0, 0x2f, 0xd1, 0x29,
	0x83, 0x3e, 0xa5, 0x26, 0x87, 0x47, 0x54, 0x9f, 0x6b, 0x35, 0x91, 0x95, 0x38, 0x41, 0xeb, 0x06,
	0xf1, 0xef, 0x1b, 0xe8, 0xfc, 0x90, 0x1e, 0xf1, 0x52, 0x91, 0xec, 0x03, 0xee, 0x06, 0x58, 0x11,
	0xbd, 0xd4, 0x2d, 0xeb, 0xb3, 0x44, 0x47, 0xdc, 0x83, 0x43, 0xb4, 0xa0, 0xb6, 0x9b, 0x97, 0x8a,
	0xcc, 0x8d, 0x48, 0xc8, 0x75, 0x45, 0xee, 0x31, 0xa6, 0x98, 0xe7, 0x1c, 0x35, 0xd0, 0x71, 0x24,
	0xb5, 0x93, 0xe8, 0xd6, 0x30, 0x3f, 0x22, 0x19, 0xd0, 0x25, 0x56, 0x8c, 0x60, 0x9e, 0x9a, 0x06,
	0xf0, 0x8e, 0xd4, 0x25, 0x53, 0x4a, 0x3b, 0x32, 0x22, 0xde, 0xd2, 0xa5, 0xc9, 0x82, 0xf2, 0x36,
	0x99, 0x52, 0x46, 0xc0, 0x1b, 0x8c, 0xca, 0x0e, 0xf8, 0x52, 0xce, 0x71, 0xf8, 0x3c, 0x6e, 0xe5,
	0x70, 0x6d, 0x1e, 0xab, 0x74, 0xfc, 0x0c, 0x4d, 0x65, 0x4d, 0xf3, 0xa5, 0xa0, 0x85, 0x11, 0x9b,
	0x79, 0x29, 0x28, 0x05, 0xca, 0x22, 0x26, 0xa9, 0x42, 0xc1, 0xaf, 0xd0, 0x62, 0xa5, 0xb7, 0xbe,
	0x94, 0xf3, 0xf6, 0x88, 0x98, 0xaf, 0x90, 0xa3, 0x75, 0x45, 0xc8, 0x12, 0xc9, 0x4e, 0xcd, 0x18,
	0xfe, 0xeb, 0x06, 0x3a, 0x63, 0xee, 0xcb, 0x2f, 0x35, 0x78, 0x87, 0x6b, 0x70, 0x6b, 0xb4, 0x06,
	0x86, 0x2f, 0xf9, 0xb2, 0x16, 0xa7, 0xdc, 0x21, 0xe3, 0xf8, 0x25, 0x3a, 0xa1, 0xb7, 0xf6, 0x97,
	0x2a, 0x8c, 0x41, 0xf7, 0x0b, 0xb5, 0xcd, 0x42, 0xd9, 0x2f, 0x5c, 0xf3, 0x10, 0xfe, 0x55, 0x03,
	0x9d, 0x32, 0x1c, 0x0a, 0x28, 0x85, 0x1f, 0x1b, 0x91, 0xae, 0x57, 0x84, 0x1b, 0xbd, 0xd5, 0xa2,
	0x5b, 0x3b, 0x8a, 0xff, 0xb1, 0x81, 0xce, 0x0f, 0x39, 0x54, 0x50, 0xaa, 0x92, 0x75, 0x55, 0x6c,
	0xc2, 0x55, 0x19, 0xe6, 0xaf, 0xce, 0xba, 0xa3, 0x6e, 0xc2, 0x2f, 0xd0, 0x82, 0x7a, 0x42, 0xa1,
	0x54, 0xe5, 0x24, 0xd4, 0x7d, 0xc8, 0xbd, 0x09, 0x8a, 0xfb, 0x70, 0x4d, 0x03, 0x38, 0x41, 0x44,
	0x3b, 0xd6, 0x50, 0xca, 0x3c, 0x35, 0xa2, 0x03, 0xae, 0x22, 0xb3, 0xe2, 0xb3, 0x8e, 0xbb, 0xc6,
	0x11, 0xec, 0x49, 0xbd, 0x25, 0xa5, 0x3c, 0x34, 0x22, 0x7b, 0xae, 0xc8, 0x93, 0x45, 0x15, 0xcd,
	0x0c, 0xa5, 0x94, 0x5f, 0x37, 0xd0, 0xbb, 0xa6, 0xb3, 0x13, 0xa5, 0xc4, 0x71, 0x5b, 0x5b, 0x2b,
	0x92, 0x48, 0xa3, 0xad, 0x55, 0x47, 0xf1, 0x6b, 0x74, 0xb2, 0x7a, 0xf4, 0xa2, 0x54, 0x60, 0x02,
	0xba, 0x33, 0xeb, 0x4d, 0x0a, 0xca, 0xce, 0xec, 0xd6, 0x0d, 0x66, 0xa6, 0x5e, 0x7f, 0x70, 0xa3,
	0x54, 0xe4, 0x34, 0xd8, 0xd4, 0x6b, 0xbe, 0x42, 0xab, 0xa6, 0x3e, 0xea, 0x26, 0x6e, 0xea, 0xca,
	0x29, 0x90, 0x52, 0x95, 0x33, 0x60, 0x53, 0x97, 0x3e, 0x57, 0xab, 0xa6, 0x6e, 0x1a, 0xe0, 0xa6,
	0xae, 0x1e, 0x1d, 0x29, 0x65, 0x2e, 0x81, 0x4d, 0x5d, 0xfe, 0x94, 0xad, 0x9a, 0xba, 0x71, 0x04,
	0xff, 0x53, 0x03, 0xbd, 0x37, 0xec, 0xc8, 0x49, 0xa9, 0x43, 0x56, 0xaf, 0xbf, 0x03, 0xd7, 0xa1,
	0xf2, 0x71, 0x5b, 0xd6, 0x67, 0xd9, 0x1d, 0x79, 0x17, 0x5f, 0x86, 0xb9, 0x6a, 0xa5, 0x1e, 0xe7,
	0xc0, 0xcb, 0x50, 0x60, 0xd5, 0x65, 0xa8, 0x13, 0xf9, 0x32, 0x34, 0x9d, 0x77, 0x29, 0x25, 0x9e,
	0x87, 0x2e, 0xc3, 0xca, 0x57, 0x61, 0x65, 0x19, 0xb2, 0xda, 0x51, 0xcc, 0xd0, 0xac, 0x49, 0xf0,
	0x7b, 0xd0, 0x47, 0x35, 0xc9, 0x9b, 0x69, 0x57, 0xc4, 0xfc, 0x80, 0x16, 0x2b, 0x67, 0x6b, 0x4a,
	0x69, 0xef, 0x43, 0xb7, 0x55, 0xf5, 0x93, 0xb0, 0xb2, 0xad, 0xb6, 0xcd, 0x43, 0x69, 0x88, 0xa6,
	0x1c, 0xca, 0x29, 0xa5, 0x5e, 0x80, 0x86, 0x68, 0xd2, 0xf7, 0x62, 0x25, 0x44, 0x6b, 0x1b, 0xe8,
	0xf8, 0x3b, 0x34, 0xa9, 0x2d, 0xdb, 0x8b, 0x23, 0x8a, 0x4e, 0x8a, 0x1c, 0x59, 0xc0, 0xb1, 0xb6,
	0xb2, 0x4c, 0x9f, 0xa1, 0x29, 0x7d, 0x75, 0x7e, 0x00, 0x0d, 0xfe, 0x2a, 0xab, 0x72, 0xb2, 0xab,
	0xae, 0xc6, 0x5d, 0x34, 0x27, 0x9d, 0x09, 0x2a, 0x25, 0x5c, 0x82, 0x26, 0xab, 0xc5, 0x17, 0x08,
	0x25, 0x59, 0xed, 0x55, 0xa8, 0x3c, 0xce, 0x31, 0x9c, 0x21, 0x2a, 0x45, 0x7e, 0x08, 0x35, 0xfa,
	0x4a, 0xf9, 0x4b, 0x31, 0xfa, 0xa8, 0x76, 0x34, 0x8d, 0x74, 0x2b, 0x47, 0x90, 0x4a, 0xf9, 0x93,
	0xd0, 0x48, 0x57, 0xab, 0xc8, 0x2a, 0x91, 0x6e, 0x5c, 0x33, 0x96, 0x4e, 0xb4, 0x71, 0xc7, 0x9d,
	0x82, 0x4e, 0xb4, 0x71, 0xa7, 0xc5, 0x71, 0x75, 0x87, 0x65, 0x68, 0xb6, 0x3c, 0xec, 0x54, 0x0a,
	0x9a, 0x86, 0x2e, 0xed, 0xbc, 0x60, 0xa9, 0x2c, 0xed, 0x81, 0x4e, 0xdc, 0x18, 0x47, 0x47, 0x0b,
	0xe6, 0xcb, 0xbf, 0x5f, 0xce, 0x0b, 0x4c, 0x95, 0x02, 0x0d, 0xde, 0x97, 0x92, 0xc0, 0xa2, 0x16,
	0x93, 0x9d, 0xe9, 0x11, 0x85, 0x98, 0x1b, 0xd0, 0xb2, 0x90, 0x76, 0xee, 0x83, 0xf3, 0x90, 0x92,
	0x4f, 0x85, 0x8e, 0xdb, 0x52, 0x22, 0x48, 0xbd, 0x5c, 0x62, 0x03, 0xba, 0x99, 0x6a, 0x12, 0x0b,
	0x61, 0x53, 0x54, 0x25, 0xe1, 0xdf, 0x34, 0xa4, 0x6a, 0x83, 0x92, 0xc3, 0x08, 0x91, 0x87, 0xa0,
	0x75, 0x0f, 0x45, 0xa4, 0xdc, 0x8f, 0x9c, 0xcb, 0x26, 0xb4, 0x66, 0x0c, 0xff, 0xad, 0x5c, 0x0a,
	0xd2, 0x4b, 0x30, 0x42, 0x0f, 0x0c, 0x0d, 0x69, 0x14, 0x3d, 0xb4, 0x53, 0x1c, 0xb9, 0x2a, 0x27,
	0x69, 0xfd, 0x30, 0xfe, 0x11, 0x9d, 0x30, 0x28, 0x23, 0xd4, 0x38, 0x0c, 0xcd, 0xe7, 0xcc, 0x6a,
	0x14, 0x1a, 0x1c, 0xa7, 0xc6, 0x11, 0xfc, 0xf7, 0x0d, 0x74, 0x76, 0x48, 0xf1, 0x45, 0x68, 0x91,
	0x55, 0x5e, 0xee, 0x5a, 0x6a, 0x51, 0x69, 0x42, 0xcc, 0x95, 0x79, 0x97, 0x0e, 0xbb, 0x01, 0x77,
	0xd1, 0x9c, 0x5a, 0x79, 0x11, 0x5a, 0xcc, 0x41, 0x77, 0x40, 0x45, 0x0b, 0xde, 0xb4, 0x95, 0x4b,
	0x9e, 0xa1, 0x3a, 0x11, 0x87, 0x52, 0x09, 0x52, 0xb1, 0x80, 0x79, 0xa8, 0x8b, 0x53, 0xc4, 0xa9,
	0x2f, 0x1e, 0xd3, 0x0a, 0x15, 0xb7, 0xd0, 0x54, 0x21, 0x50, 0x88, 0x3a, 0x32, 0xe2, 0x7b, 0xa7,
	0x59, 0x54, 0x21, 0xe5, 0x18, 0x95, 0x09, 0x78, 0x0f, 0xcd, 0x2a, 0x05, 0x17, 0x21, 0xe4, 0xb8,
	0xed, 0xf4, 0x15, 0xb5, 0x15, 0x79, 0xfa, 0x34, 0x22, 0xfe, 0x0e, 0x4d, 0x64, 0xd5, 0x16, 0x21,
	0x65, 0x01, 0xea, 0x39, 0x85, 0x14, 0x7e, 0xd2, 0x24, 0xe7, 0x3f, 0x4e, 0xcb, 0x4b, 0xfc, 0x12,
	0x2d, 0x54, 0x4a, 0x2d, 0x42, 0xc8, 0xdb, 0xd0, 0x3a, 0x6d, 0x26, 0x44, 0x3f, 0x83, 0x92, 0x8b,
	0x9b, 0xdf, 0x31, 0x0d, 0xe0, 0xbf, 0x94, 0x8b, 0x0c, 0x26, 0x1f, 0xf5, 0xce, 0x88, 0xef, 0xc4,
	0x9a, 0x78, 0xd3, 0xa1, 0x89, 0x5c, 0x85, 0x13, 0x6e, 0xdd, 0x20, 0x4e, 0xa4, 0xd3, 0x21, 0xa2,
	0xc8, 0x22, 0xe4, 0x8f, 0xd9, 0x6d, 0x04, 0xda, 0x71, 0x96, 0x62, 0x23, 0x70, 0x0d, 0x74, 0xfc,
	0x5a, 0x2a, 0xed, 0x54, 0xbc, 0x51, 0x56, 0x5d, 0xb9, 0x6d, 0x2b, 0xb8, 0xea, 0x8e, 0x16, 0x5c,
	0xf3, 0x10, 0xfe, 0x5d, 0x03, 0x9d, 0x1d, 0x52, 0x5d, 0x11, 0x7a, 0x64, 0xa5, 0x95, 0x7b, 0xb6,
	0x7a, 0xd4, 0x3a, 0xa4, 0xd3, 0xee, 0xd0, 0x3b, 0x70, 0x80, 0xe6, 0xd4, 0xd2, 0x8a, 0xd0, 0xe3,
	0xa4, 0x9d, 0x8b, 0x50, 0x4e, 0x7e, 0x14, 0x2e, 0xc2, 0xad, 0x50, 0xf1, 0x0b, 0xe9, 0xa4, 0x8e,
	0xe2, 0x93, 0x4e, 0x41, 0x33, 0x7e, 0x55, 0xa0, 0xea, 0x94, 0x66, 0xdd, 0x2a, 0x19, 0x53, 0xe9,
	0xc0, 0x94, 0x10, 0x86, 0xa0, 0xb1, 0xbf, 0x2a, 0xac, 0x90, 0x53, 0x9c, 0x65, 0x11, 0x22, 0x7e,
	0x29, 0x1d, 0xd7, 0x91, 0xc2, 0x3b, 0x21, 0x6d, 0xfc, 0xcd, 0x6c, 0xab, 0xfc, 0x30, 0x5f, 0xb1,
	0x2d, 0x6d, 0x08, 0xbf, 0x42, 0xa4, 0x5a, 0x4d, 0x11, 0xd2, 0x27, 0xec, 0xf6, 0xd9, 0xca, 0xa9,
	0x8f, 0x62, 0x9f, 0x75, 0x8d, 0x23, 0x99, 0x5d, 0xd7, 0x97, 0x52, 0x84, 0x16, 0xa7, 0x2d, 0xed,
	0xba, 0xae, 0xdb, 0xbf, 0xb4, 0xeb, 0xa1, 0x77, 0x70, 0xbb, 0x56, 0xea, 0x28, 0x42, 0x8f, 0x33,
	0x96, 0x76, 0x2d, 0x9f, 0x03, 0x28, 0xed, 0xba, 0x42, 0xe5, 0x76, 0xad, 0x16, 0x51, 0x84, 0xc0,
	0x25, 0x4b, 0xbb, 0x56, 0x4e, 0x08, 0x94, 0x76, 0x5d, 0x25, 0xe3, 0x7f, 0x68, 0xa0, 0xe5, 0x61,
	0x15, 0x14, 0xa1, 0xc0, 0xf2, 0x9b, 0xcd, 0xbc, 0x56, 0x1e, 0xa1, 0x85, 0x2e, 0x67, 0x6a, 0x0b,
	0x28, 0xd2, 0x7a, 0xcb, 0xd5, 0x12, 0x3a, 0x9c, 0xb3, 0x5c, 0x6f, 0xf9, 0xb9, 0x9b, 0x72, 0xbd,
	0x29, 0x94, 0x74, 0xbd, 0x99, 0x2a, 0x27, 0x42, 0xda, 0x79, 0xbb, 0xf5, 0x56, 0x6d, 0xa9, 0x2f,
	0xd6, 0x1b, 0x33, 0x0f, 0xe1, 0x1d, 0xb9, 0xb3, 0x5d, 0x48, 0x7d, 0xcf, 0xee, 0x19, 0x2b, 0xc2,
	0x8a, 0x06, 0x77, 0x21, 0x63, 0x80, 0x16, 0x2a, 0x35, 0x13, 0x21, 0xea, 0x7d, 0xbb, 0x5d, 0x52,
	0xeb, 0xa4, 0x2f, 0x76, 0xc9, 0xb6, 0x81, 0x9e, 0x86, 0x58, 0x4a, 0xc1, 0x44, 0x88, 0xbc, 0x60,
	0x17, 0x62, 0xc9, 0x3d, 0xf6, 0x45, 0x88, 0xd5, 0xd6, 0x89, 0xf8, 0x1b, 0x34, 0x2e, 0x2f, 0xce,
	0x8b, 0xd0, 0xaf, 0x73, 0xa5, 0x90, 0x82, 0x3b, 0x6a, 0x97, 0x8b, 0xf1, 0x3b, 0x34, 0xa1, 0xac,
	0xc1, 0x0f, 0xec, 0x22, 0x37, 0x75, 0xed, 0x8d, 0x77, 0xa5, 0x35, 0xc7, 0xd0, 0x8c, 0x54, 0x27,
	0x11, 0xec, 0x2f, 0xd9, 0xe5, 0x92, 0x65, 0xb3, 0x66, 0x91, 0x4b, 0xf6, 0x54, 0x52, 0x1a, 0xaa,
	0x18, 0x6a, 0x24, 0x42, 0xdc, 0x87, 0x76, 0xe6, 0x5d, 0xed, 0x12, 0x2a, 0xcc, 0x3b, 0x32, 0x0f,
	0xa5, 0xf1, 0x69, 0xa5, 0x40, 0x22, 0x84, 0x4f, 0xda, 0xc5, 0xa7, 0x7a, 0xd7, 0x5a, 0x11, 0x9f,
	0xc6, 0xa6, 0x81, 0x74, 0x7a, 0xab, 0xdb, 0xe7, 0x94, 0xdd, 0xf4, 0x56, 0xb7, 0xcd, 0xa9, 0x58,
	0xdb, 0x2e, 0x77, 0xd0, 0x74, 0x59, 0x1a, 0x11, 0x52, 0xa6, 0xed, 0x96, 0x6f, 0xd1, 0xce, 0x55,
	0x2c, 0xdf, 0x81, 0x42, 0xd9, 0x40, 0x68, 0x2c, 0x6f, 0x7b, 0x59, 0xfd, 0x9b, 0xc3, 0x68, 0xba,
	0xe8, 0xb8, 0xd9, 0xce, 0x18, 0xe1, 0x7f, 0x6b, 0xa0, 0xb7, 0xb3, 0x8e, 0x41, 0x0c, 0xa8, 0xaf,
	0x9b, 0xff, 0x84, 0xcc, 0xe2, 0xb5, 0x37, 0x40, 0x66, 0x4a, 0x2d, 0x5f, 0xfb, 0xcd, 0x7f, 0xfc,
	0xd7, 0xef, 0x0e, 0x5d, 0x59, 0x6e, 0xf2, 0x7f, 0xb7, 0x21, 0xfc, 0x6b, 0xbc, 0xf2, 0xa3, 0xd4,
	0xf0, 0x74, 0xf3, 0xd2, 0x6b, 0xf1, 0x67, 0x74, 0xd6, 0xbd, 0x78, 0x2d, 0x6b, 0x67, 0x5c, 0x6b,
	0x5c, 0xe2, 0xaa, 0x67, 0xd3, 0x00, 0x51, 0xdd, 0xdc, 0x5b, 0xb5, 0x78, 0xed, 0x0d, 0x90, 0x6f,
	0xaa, 0x7a, 0xd6, 0x34, 0xb4, 0xd6, 0xb8, 0xb4, 0xf1, 0xff, 0x0d, 0x74, 0xde, 0x0d, 0x7b, 0x23,
	0x65, 0x6f, 0xcc, 0xeb, 0x2f, 0x6c, 0x2b, 0x0a, 0x93, 0x70, 0xab, 0xf1, 0xfd, 0x03, 0x01, 0xed,
	0x84, 0x5d, 0x1a, 0x74, 0x9a, 0x61, 0xd4, 0x59, 0xe9, 0xb0, 0x80, 0xff, 0x61, 0x99, 0xfc, 0x6f,
	0x0e, 0xf5, 0xfd, 0xb8, 0xfe, 0x4f, 0x10, 0x5d, 0xcf, 0x7f, 0xfc, 0xf3, 0xa1, 0xc3, 0xf7, 0xd7,
	0xd7, 0xff, 0xe5, 0xd0, 0x52, 0x26, 0xa9, 0xb9, 0xee, 0x49, 0x7f, 0x2a, 0xa7, 0xf9, 0xf4, 0x72,
	0x53, 0x08, 0x8e, 0xff, 0x3d, 0xbf, 0xe5, 0xf9, 0xba, 0x17, 0x3f, 0x2f, 0x6e, 0x79, 0xfe, 0xf4,
	0xf2, 0xf3, 0xfc, 0x96, 0xff, 0x39, 0x74, 0x3e, 0xa3, 0xaf, 0xad, 0xa5, 0xcf, 0xbb, 0x56, 0xdc,
	0xb4, 0xb6, 0xf6, 0xf4, 0xf2, 0xda, 0x5a, 0x7e, 0xdb, 0xce, 0xdb, 0x5c, 0xcf, 0x2b, 0x7f, 0x08,
	0x00, 0x00, 0xff, 0xff, 0xa8, 0x2a, 0xf9, 0xec, 0x03, 0x66, 0x00, 0x00,
}

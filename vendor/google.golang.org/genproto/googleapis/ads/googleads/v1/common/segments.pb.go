// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v1/common/segments.proto

package common // import "google.golang.org/genproto/googleapis/ads/googleads/v1/common"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import enums "google.golang.org/genproto/googleapis/ads/googleads/v1/enums"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Segment only fields.
type Segments struct {
	// Ad network type.
	AdNetworkType enums.AdNetworkTypeEnum_AdNetworkType `protobuf:"varint,3,opt,name=ad_network_type,json=adNetworkType,proto3,enum=google.ads.googleads.v1.enums.AdNetworkTypeEnum_AdNetworkType" json:"ad_network_type,omitempty"`
	// Click type.
	ClickType enums.ClickTypeEnum_ClickType `protobuf:"varint,26,opt,name=click_type,json=clickType,proto3,enum=google.ads.googleads.v1.enums.ClickTypeEnum_ClickType" json:"click_type,omitempty"`
	// Resource name of the conversion action.
	ConversionAction *wrappers.StringValue `protobuf:"bytes,52,opt,name=conversion_action,json=conversionAction,proto3" json:"conversion_action,omitempty"`
	// Conversion action category.
	ConversionActionCategory enums.ConversionActionCategoryEnum_ConversionActionCategory `protobuf:"varint,53,opt,name=conversion_action_category,json=conversionActionCategory,proto3,enum=google.ads.googleads.v1.enums.ConversionActionCategoryEnum_ConversionActionCategory" json:"conversion_action_category,omitempty"`
	// Conversion action name.
	ConversionActionName *wrappers.StringValue `protobuf:"bytes,54,opt,name=conversion_action_name,json=conversionActionName,proto3" json:"conversion_action_name,omitempty"`
	// This segments your conversion columns by the original conversion and
	// conversion value vs. the delta if conversions were adjusted. False row has
	// the data as originally stated; While true row has the delta between data
	// now and the data as originally stated. Summing the two together results
	// post-adjustment data.
	ConversionAdjustment *wrappers.BoolValue `protobuf:"bytes,27,opt,name=conversion_adjustment,json=conversionAdjustment,proto3" json:"conversion_adjustment,omitempty"`
	// Conversion attribution event type.
	ConversionAttributionEventType enums.ConversionAttributionEventTypeEnum_ConversionAttributionEventType `protobuf:"varint,2,opt,name=conversion_attribution_event_type,json=conversionAttributionEventType,proto3,enum=google.ads.googleads.v1.enums.ConversionAttributionEventTypeEnum_ConversionAttributionEventType" json:"conversion_attribution_event_type,omitempty"`
	// An enum value representing the number of days between the impression and
	// the conversion.
	ConversionLagBucket enums.ConversionLagBucketEnum_ConversionLagBucket `protobuf:"varint,50,opt,name=conversion_lag_bucket,json=conversionLagBucket,proto3,enum=google.ads.googleads.v1.enums.ConversionLagBucketEnum_ConversionLagBucket" json:"conversion_lag_bucket,omitempty"`
	// An enum value representing the number of days between the impression and
	// the conversion or between the impression and adjustments to the conversion.
	ConversionOrAdjustmentLagBucket enums.ConversionOrAdjustmentLagBucketEnum_ConversionOrAdjustmentLagBucket `protobuf:"varint,51,opt,name=conversion_or_adjustment_lag_bucket,json=conversionOrAdjustmentLagBucket,proto3,enum=google.ads.googleads.v1.enums.ConversionOrAdjustmentLagBucketEnum_ConversionOrAdjustmentLagBucket" json:"conversion_or_adjustment_lag_bucket,omitempty"`
	// Date to which metrics apply.
	// yyyy-MM-dd format, e.g., 2018-04-17.
	Date *wrappers.StringValue `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	// Day of the week, e.g., MONDAY.
	DayOfWeek enums.DayOfWeekEnum_DayOfWeek `protobuf:"varint,5,opt,name=day_of_week,json=dayOfWeek,proto3,enum=google.ads.googleads.v1.enums.DayOfWeekEnum_DayOfWeek" json:"day_of_week,omitempty"`
	// Device to which metrics apply.
	Device enums.DeviceEnum_Device `protobuf:"varint,1,opt,name=device,proto3,enum=google.ads.googleads.v1.enums.DeviceEnum_Device" json:"device,omitempty"`
	// External conversion source.
	ExternalConversionSource enums.ExternalConversionSourceEnum_ExternalConversionSource `protobuf:"varint,55,opt,name=external_conversion_source,json=externalConversionSource,proto3,enum=google.ads.googleads.v1.enums.ExternalConversionSourceEnum_ExternalConversionSource" json:"external_conversion_source,omitempty"`
	// Resource name of the geo target constant that represents an airport.
	GeoTargetAirport *wrappers.StringValue `protobuf:"bytes,65,opt,name=geo_target_airport,json=geoTargetAirport,proto3" json:"geo_target_airport,omitempty"`
	// Resource name of the geo target constant that represents a city.
	GeoTargetCity *wrappers.StringValue `protobuf:"bytes,62,opt,name=geo_target_city,json=geoTargetCity,proto3" json:"geo_target_city,omitempty"`
	// Resource name of the geo target constant that represents a metro.
	GeoTargetMetro *wrappers.StringValue `protobuf:"bytes,63,opt,name=geo_target_metro,json=geoTargetMetro,proto3" json:"geo_target_metro,omitempty"`
	// Resource name of the geo target constant that represents a region.
	GeoTargetRegion *wrappers.StringValue `protobuf:"bytes,64,opt,name=geo_target_region,json=geoTargetRegion,proto3" json:"geo_target_region,omitempty"`
	// Hotel booking window in days.
	HotelBookingWindowDays *wrappers.Int64Value `protobuf:"bytes,6,opt,name=hotel_booking_window_days,json=hotelBookingWindowDays,proto3" json:"hotel_booking_window_days,omitempty"`
	// Hotel center ID.
	HotelCenterId *wrappers.Int64Value `protobuf:"bytes,7,opt,name=hotel_center_id,json=hotelCenterId,proto3" json:"hotel_center_id,omitempty"`
	// Hotel check-in date. Formatted as yyyy-MM-dd.
	HotelCheckInDate *wrappers.StringValue `protobuf:"bytes,8,opt,name=hotel_check_in_date,json=hotelCheckInDate,proto3" json:"hotel_check_in_date,omitempty"`
	// Hotel check-in day of week.
	HotelCheckInDayOfWeek enums.DayOfWeekEnum_DayOfWeek `protobuf:"varint,9,opt,name=hotel_check_in_day_of_week,json=hotelCheckInDayOfWeek,proto3,enum=google.ads.googleads.v1.enums.DayOfWeekEnum_DayOfWeek" json:"hotel_check_in_day_of_week,omitempty"`
	// Hotel city.
	HotelCity *wrappers.StringValue `protobuf:"bytes,10,opt,name=hotel_city,json=hotelCity,proto3" json:"hotel_city,omitempty"`
	// Hotel class.
	HotelClass *wrappers.Int32Value `protobuf:"bytes,11,opt,name=hotel_class,json=hotelClass,proto3" json:"hotel_class,omitempty"`
	// Hotel country.
	HotelCountry *wrappers.StringValue `protobuf:"bytes,12,opt,name=hotel_country,json=hotelCountry,proto3" json:"hotel_country,omitempty"`
	// Hotel date selection type.
	HotelDateSelectionType enums.HotelDateSelectionTypeEnum_HotelDateSelectionType `protobuf:"varint,13,opt,name=hotel_date_selection_type,json=hotelDateSelectionType,proto3,enum=google.ads.googleads.v1.enums.HotelDateSelectionTypeEnum_HotelDateSelectionType" json:"hotel_date_selection_type,omitempty"`
	// Hotel length of stay.
	HotelLengthOfStay *wrappers.Int32Value `protobuf:"bytes,14,opt,name=hotel_length_of_stay,json=hotelLengthOfStay,proto3" json:"hotel_length_of_stay,omitempty"`
	// Hotel state.
	HotelState *wrappers.StringValue `protobuf:"bytes,15,opt,name=hotel_state,json=hotelState,proto3" json:"hotel_state,omitempty"`
	// Hour of day as a number between 0 and 23, inclusive.
	Hour *wrappers.Int32Value `protobuf:"bytes,16,opt,name=hour,proto3" json:"hour,omitempty"`
	// Only used with feed item metrics.
	// Indicates whether the interaction metrics occurred on the feed item itself
	// or a different extension or ad unit.
	InteractionOnThisExtension *wrappers.BoolValue `protobuf:"bytes,49,opt,name=interaction_on_this_extension,json=interactionOnThisExtension,proto3" json:"interaction_on_this_extension,omitempty"`
	// Keyword criterion.
	Keyword *Keyword `protobuf:"bytes,61,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// Month as represented by the date of the first day of a month. Formatted as
	// yyyy-MM-dd.
	Month *wrappers.StringValue `protobuf:"bytes,17,opt,name=month,proto3" json:"month,omitempty"`
	// Month of the year, e.g., January.
	MonthOfYear enums.MonthOfYearEnum_MonthOfYear `protobuf:"varint,18,opt,name=month_of_year,json=monthOfYear,proto3,enum=google.ads.googleads.v1.enums.MonthOfYearEnum_MonthOfYear" json:"month_of_year,omitempty"`
	// Partner hotel ID.
	PartnerHotelId *wrappers.StringValue `protobuf:"bytes,19,opt,name=partner_hotel_id,json=partnerHotelId,proto3" json:"partner_hotel_id,omitempty"`
	// Placeholder type. This is only used with feed item metrics.
	PlaceholderType enums.PlaceholderTypeEnum_PlaceholderType `protobuf:"varint,20,opt,name=placeholder_type,json=placeholderType,proto3,enum=google.ads.googleads.v1.enums.PlaceholderTypeEnum_PlaceholderType" json:"placeholder_type,omitempty"`
	// Aggregator ID of the product.
	ProductAggregatorId *wrappers.UInt64Value `protobuf:"bytes,28,opt,name=product_aggregator_id,json=productAggregatorId,proto3" json:"product_aggregator_id,omitempty"`
	// Bidding category (level 1) of the product.
	ProductBiddingCategoryLevel1 *wrappers.StringValue `protobuf:"bytes,56,opt,name=product_bidding_category_level1,json=productBiddingCategoryLevel1,proto3" json:"product_bidding_category_level1,omitempty"`
	// Bidding category (level 2) of the product.
	ProductBiddingCategoryLevel2 *wrappers.StringValue `protobuf:"bytes,57,opt,name=product_bidding_category_level2,json=productBiddingCategoryLevel2,proto3" json:"product_bidding_category_level2,omitempty"`
	// Bidding category (level 3) of the product.
	ProductBiddingCategoryLevel3 *wrappers.StringValue `protobuf:"bytes,58,opt,name=product_bidding_category_level3,json=productBiddingCategoryLevel3,proto3" json:"product_bidding_category_level3,omitempty"`
	// Bidding category (level 4) of the product.
	ProductBiddingCategoryLevel4 *wrappers.StringValue `protobuf:"bytes,59,opt,name=product_bidding_category_level4,json=productBiddingCategoryLevel4,proto3" json:"product_bidding_category_level4,omitempty"`
	// Bidding category (level 5) of the product.
	ProductBiddingCategoryLevel5 *wrappers.StringValue `protobuf:"bytes,60,opt,name=product_bidding_category_level5,json=productBiddingCategoryLevel5,proto3" json:"product_bidding_category_level5,omitempty"`
	// Brand of the product.
	ProductBrand *wrappers.StringValue `protobuf:"bytes,29,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`
	// Channel of the product.
	ProductChannel enums.ProductChannelEnum_ProductChannel `protobuf:"varint,30,opt,name=product_channel,json=productChannel,proto3,enum=google.ads.googleads.v1.enums.ProductChannelEnum_ProductChannel" json:"product_channel,omitempty"`
	// Channel exclusivity of the product.
	ProductChannelExclusivity enums.ProductChannelExclusivityEnum_ProductChannelExclusivity `protobuf:"varint,31,opt,name=product_channel_exclusivity,json=productChannelExclusivity,proto3,enum=google.ads.googleads.v1.enums.ProductChannelExclusivityEnum_ProductChannelExclusivity" json:"product_channel_exclusivity,omitempty"`
	// Condition of the product.
	ProductCondition enums.ProductConditionEnum_ProductCondition `protobuf:"varint,32,opt,name=product_condition,json=productCondition,proto3,enum=google.ads.googleads.v1.enums.ProductConditionEnum_ProductCondition" json:"product_condition,omitempty"`
	// Resource name of the geo target constant for the country of sale of the
	// product.
	ProductCountry *wrappers.StringValue `protobuf:"bytes,33,opt,name=product_country,json=productCountry,proto3" json:"product_country,omitempty"`
	// Custom attribute 0 of the product.
	ProductCustomAttribute0 *wrappers.StringValue `protobuf:"bytes,34,opt,name=product_custom_attribute0,json=productCustomAttribute0,proto3" json:"product_custom_attribute0,omitempty"`
	// Custom attribute 1 of the product.
	ProductCustomAttribute1 *wrappers.StringValue `protobuf:"bytes,35,opt,name=product_custom_attribute1,json=productCustomAttribute1,proto3" json:"product_custom_attribute1,omitempty"`
	// Custom attribute 2 of the product.
	ProductCustomAttribute2 *wrappers.StringValue `protobuf:"bytes,36,opt,name=product_custom_attribute2,json=productCustomAttribute2,proto3" json:"product_custom_attribute2,omitempty"`
	// Custom attribute 3 of the product.
	ProductCustomAttribute3 *wrappers.StringValue `protobuf:"bytes,37,opt,name=product_custom_attribute3,json=productCustomAttribute3,proto3" json:"product_custom_attribute3,omitempty"`
	// Custom attribute 4 of the product.
	ProductCustomAttribute4 *wrappers.StringValue `protobuf:"bytes,38,opt,name=product_custom_attribute4,json=productCustomAttribute4,proto3" json:"product_custom_attribute4,omitempty"`
	// Item ID of the product.
	ProductItemId *wrappers.StringValue `protobuf:"bytes,39,opt,name=product_item_id,json=productItemId,proto3" json:"product_item_id,omitempty"`
	// Resource name of the language constant for the language of the product.
	ProductLanguage *wrappers.StringValue `protobuf:"bytes,40,opt,name=product_language,json=productLanguage,proto3" json:"product_language,omitempty"`
	// Merchant ID of the product.
	ProductMerchantId *wrappers.UInt64Value `protobuf:"bytes,41,opt,name=product_merchant_id,json=productMerchantId,proto3" json:"product_merchant_id,omitempty"`
	// Store ID of the product.
	ProductStoreId *wrappers.StringValue `protobuf:"bytes,42,opt,name=product_store_id,json=productStoreId,proto3" json:"product_store_id,omitempty"`
	// Title of the product.
	ProductTitle *wrappers.StringValue `protobuf:"bytes,43,opt,name=product_title,json=productTitle,proto3" json:"product_title,omitempty"`
	// Type (level 1) of the product.
	ProductTypeL1 *wrappers.StringValue `protobuf:"bytes,44,opt,name=product_type_l1,json=productTypeL1,proto3" json:"product_type_l1,omitempty"`
	// Type (level 2) of the product.
	ProductTypeL2 *wrappers.StringValue `protobuf:"bytes,45,opt,name=product_type_l2,json=productTypeL2,proto3" json:"product_type_l2,omitempty"`
	// Type (level 3) of the product.
	ProductTypeL3 *wrappers.StringValue `protobuf:"bytes,46,opt,name=product_type_l3,json=productTypeL3,proto3" json:"product_type_l3,omitempty"`
	// Type (level 4) of the product.
	ProductTypeL4 *wrappers.StringValue `protobuf:"bytes,47,opt,name=product_type_l4,json=productTypeL4,proto3" json:"product_type_l4,omitempty"`
	// Type (level 5) of the product.
	ProductTypeL5 *wrappers.StringValue `protobuf:"bytes,48,opt,name=product_type_l5,json=productTypeL5,proto3" json:"product_type_l5,omitempty"`
	// Quarter as represented by the date of the first day of a quarter.
	// Uses the calendar year for quarters, e.g., the second quarter of 2018
	// starts on 2018-04-01. Formatted as yyyy-MM-dd.
	Quarter *wrappers.StringValue `protobuf:"bytes,21,opt,name=quarter,proto3" json:"quarter,omitempty"`
	// Match type of the keyword that triggered the ad, including variants.
	SearchTermMatchType enums.SearchTermMatchTypeEnum_SearchTermMatchType `protobuf:"varint,22,opt,name=search_term_match_type,json=searchTermMatchType,proto3,enum=google.ads.googleads.v1.enums.SearchTermMatchTypeEnum_SearchTermMatchType" json:"search_term_match_type,omitempty"`
	// Position of the ad.
	Slot enums.SlotEnum_Slot `protobuf:"varint,23,opt,name=slot,proto3,enum=google.ads.googleads.v1.enums.SlotEnum_Slot" json:"slot,omitempty"`
	// Resource name of the ad group criterion that represents webpage criterion.
	Webpage *wrappers.StringValue `protobuf:"bytes,66,opt,name=webpage,proto3" json:"webpage,omitempty"`
	// Week as defined as Monday through Sunday, and represented by the date of
	// Monday. Formatted as yyyy-MM-dd.
	Week *wrappers.StringValue `protobuf:"bytes,24,opt,name=week,proto3" json:"week,omitempty"`
	// Year, formatted as yyyy.
	Year                 *wrappers.Int32Value `protobuf:"bytes,25,opt,name=year,proto3" json:"year,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Segments) Reset()         { *m = Segments{} }
func (m *Segments) String() string { return proto.CompactTextString(m) }
func (*Segments) ProtoMessage()    {}
func (*Segments) Descriptor() ([]byte, []int) {
	return fileDescriptor_segments_557a0956ffaccbfe, []int{0}
}
func (m *Segments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Segments.Unmarshal(m, b)
}
func (m *Segments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Segments.Marshal(b, m, deterministic)
}
func (dst *Segments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Segments.Merge(dst, src)
}
func (m *Segments) XXX_Size() int {
	return xxx_messageInfo_Segments.Size(m)
}
func (m *Segments) XXX_DiscardUnknown() {
	xxx_messageInfo_Segments.DiscardUnknown(m)
}

var xxx_messageInfo_Segments proto.InternalMessageInfo

func (m *Segments) GetAdNetworkType() enums.AdNetworkTypeEnum_AdNetworkType {
	if m != nil {
		return m.AdNetworkType
	}
	return enums.AdNetworkTypeEnum_UNSPECIFIED
}

func (m *Segments) GetClickType() enums.ClickTypeEnum_ClickType {
	if m != nil {
		return m.ClickType
	}
	return enums.ClickTypeEnum_UNSPECIFIED
}

func (m *Segments) GetConversionAction() *wrappers.StringValue {
	if m != nil {
		return m.ConversionAction
	}
	return nil
}

func (m *Segments) GetConversionActionCategory() enums.ConversionActionCategoryEnum_ConversionActionCategory {
	if m != nil {
		return m.ConversionActionCategory
	}
	return enums.ConversionActionCategoryEnum_UNSPECIFIED
}

func (m *Segments) GetConversionActionName() *wrappers.StringValue {
	if m != nil {
		return m.ConversionActionName
	}
	return nil
}

func (m *Segments) GetConversionAdjustment() *wrappers.BoolValue {
	if m != nil {
		return m.ConversionAdjustment
	}
	return nil
}

func (m *Segments) GetConversionAttributionEventType() enums.ConversionAttributionEventTypeEnum_ConversionAttributionEventType {
	if m != nil {
		return m.ConversionAttributionEventType
	}
	return enums.ConversionAttributionEventTypeEnum_UNSPECIFIED
}

func (m *Segments) GetConversionLagBucket() enums.ConversionLagBucketEnum_ConversionLagBucket {
	if m != nil {
		return m.ConversionLagBucket
	}
	return enums.ConversionLagBucketEnum_UNSPECIFIED
}

func (m *Segments) GetConversionOrAdjustmentLagBucket() enums.ConversionOrAdjustmentLagBucketEnum_ConversionOrAdjustmentLagBucket {
	if m != nil {
		return m.ConversionOrAdjustmentLagBucket
	}
	return enums.ConversionOrAdjustmentLagBucketEnum_UNSPECIFIED
}

func (m *Segments) GetDate() *wrappers.StringValue {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Segments) GetDayOfWeek() enums.DayOfWeekEnum_DayOfWeek {
	if m != nil {
		return m.DayOfWeek
	}
	return enums.DayOfWeekEnum_UNSPECIFIED
}

func (m *Segments) GetDevice() enums.DeviceEnum_Device {
	if m != nil {
		return m.Device
	}
	return enums.DeviceEnum_UNSPECIFIED
}

func (m *Segments) GetExternalConversionSource() enums.ExternalConversionSourceEnum_ExternalConversionSource {
	if m != nil {
		return m.ExternalConversionSource
	}
	return enums.ExternalConversionSourceEnum_UNSPECIFIED
}

func (m *Segments) GetGeoTargetAirport() *wrappers.StringValue {
	if m != nil {
		return m.GeoTargetAirport
	}
	return nil
}

func (m *Segments) GetGeoTargetCity() *wrappers.StringValue {
	if m != nil {
		return m.GeoTargetCity
	}
	return nil
}

func (m *Segments) GetGeoTargetMetro() *wrappers.StringValue {
	if m != nil {
		return m.GeoTargetMetro
	}
	return nil
}

func (m *Segments) GetGeoTargetRegion() *wrappers.StringValue {
	if m != nil {
		return m.GeoTargetRegion
	}
	return nil
}

func (m *Segments) GetHotelBookingWindowDays() *wrappers.Int64Value {
	if m != nil {
		return m.HotelBookingWindowDays
	}
	return nil
}

func (m *Segments) GetHotelCenterId() *wrappers.Int64Value {
	if m != nil {
		return m.HotelCenterId
	}
	return nil
}

func (m *Segments) GetHotelCheckInDate() *wrappers.StringValue {
	if m != nil {
		return m.HotelCheckInDate
	}
	return nil
}

func (m *Segments) GetHotelCheckInDayOfWeek() enums.DayOfWeekEnum_DayOfWeek {
	if m != nil {
		return m.HotelCheckInDayOfWeek
	}
	return enums.DayOfWeekEnum_UNSPECIFIED
}

func (m *Segments) GetHotelCity() *wrappers.StringValue {
	if m != nil {
		return m.HotelCity
	}
	return nil
}

func (m *Segments) GetHotelClass() *wrappers.Int32Value {
	if m != nil {
		return m.HotelClass
	}
	return nil
}

func (m *Segments) GetHotelCountry() *wrappers.StringValue {
	if m != nil {
		return m.HotelCountry
	}
	return nil
}

func (m *Segments) GetHotelDateSelectionType() enums.HotelDateSelectionTypeEnum_HotelDateSelectionType {
	if m != nil {
		return m.HotelDateSelectionType
	}
	return enums.HotelDateSelectionTypeEnum_UNSPECIFIED
}

func (m *Segments) GetHotelLengthOfStay() *wrappers.Int32Value {
	if m != nil {
		return m.HotelLengthOfStay
	}
	return nil
}

func (m *Segments) GetHotelState() *wrappers.StringValue {
	if m != nil {
		return m.HotelState
	}
	return nil
}

func (m *Segments) GetHour() *wrappers.Int32Value {
	if m != nil {
		return m.Hour
	}
	return nil
}

func (m *Segments) GetInteractionOnThisExtension() *wrappers.BoolValue {
	if m != nil {
		return m.InteractionOnThisExtension
	}
	return nil
}

func (m *Segments) GetKeyword() *Keyword {
	if m != nil {
		return m.Keyword
	}
	return nil
}

func (m *Segments) GetMonth() *wrappers.StringValue {
	if m != nil {
		return m.Month
	}
	return nil
}

func (m *Segments) GetMonthOfYear() enums.MonthOfYearEnum_MonthOfYear {
	if m != nil {
		return m.MonthOfYear
	}
	return enums.MonthOfYearEnum_UNSPECIFIED
}

func (m *Segments) GetPartnerHotelId() *wrappers.StringValue {
	if m != nil {
		return m.PartnerHotelId
	}
	return nil
}

func (m *Segments) GetPlaceholderType() enums.PlaceholderTypeEnum_PlaceholderType {
	if m != nil {
		return m.PlaceholderType
	}
	return enums.PlaceholderTypeEnum_UNSPECIFIED
}

func (m *Segments) GetProductAggregatorId() *wrappers.UInt64Value {
	if m != nil {
		return m.ProductAggregatorId
	}
	return nil
}

func (m *Segments) GetProductBiddingCategoryLevel1() *wrappers.StringValue {
	if m != nil {
		return m.ProductBiddingCategoryLevel1
	}
	return nil
}

func (m *Segments) GetProductBiddingCategoryLevel2() *wrappers.StringValue {
	if m != nil {
		return m.ProductBiddingCategoryLevel2
	}
	return nil
}

func (m *Segments) GetProductBiddingCategoryLevel3() *wrappers.StringValue {
	if m != nil {
		return m.ProductBiddingCategoryLevel3
	}
	return nil
}

func (m *Segments) GetProductBiddingCategoryLevel4() *wrappers.StringValue {
	if m != nil {
		return m.ProductBiddingCategoryLevel4
	}
	return nil
}

func (m *Segments) GetProductBiddingCategoryLevel5() *wrappers.StringValue {
	if m != nil {
		return m.ProductBiddingCategoryLevel5
	}
	return nil
}

func (m *Segments) GetProductBrand() *wrappers.StringValue {
	if m != nil {
		return m.ProductBrand
	}
	return nil
}

func (m *Segments) GetProductChannel() enums.ProductChannelEnum_ProductChannel {
	if m != nil {
		return m.ProductChannel
	}
	return enums.ProductChannelEnum_UNSPECIFIED
}

func (m *Segments) GetProductChannelExclusivity() enums.ProductChannelExclusivityEnum_ProductChannelExclusivity {
	if m != nil {
		return m.ProductChannelExclusivity
	}
	return enums.ProductChannelExclusivityEnum_UNSPECIFIED
}

func (m *Segments) GetProductCondition() enums.ProductConditionEnum_ProductCondition {
	if m != nil {
		return m.ProductCondition
	}
	return enums.ProductConditionEnum_UNSPECIFIED
}

func (m *Segments) GetProductCountry() *wrappers.StringValue {
	if m != nil {
		return m.ProductCountry
	}
	return nil
}

func (m *Segments) GetProductCustomAttribute0() *wrappers.StringValue {
	if m != nil {
		return m.ProductCustomAttribute0
	}
	return nil
}

func (m *Segments) GetProductCustomAttribute1() *wrappers.StringValue {
	if m != nil {
		return m.ProductCustomAttribute1
	}
	return nil
}

func (m *Segments) GetProductCustomAttribute2() *wrappers.StringValue {
	if m != nil {
		return m.ProductCustomAttribute2
	}
	return nil
}

func (m *Segments) GetProductCustomAttribute3() *wrappers.StringValue {
	if m != nil {
		return m.ProductCustomAttribute3
	}
	return nil
}

func (m *Segments) GetProductCustomAttribute4() *wrappers.StringValue {
	if m != nil {
		return m.ProductCustomAttribute4
	}
	return nil
}

func (m *Segments) GetProductItemId() *wrappers.StringValue {
	if m != nil {
		return m.ProductItemId
	}
	return nil
}

func (m *Segments) GetProductLanguage() *wrappers.StringValue {
	if m != nil {
		return m.ProductLanguage
	}
	return nil
}

func (m *Segments) GetProductMerchantId() *wrappers.UInt64Value {
	if m != nil {
		return m.ProductMerchantId
	}
	return nil
}

func (m *Segments) GetProductStoreId() *wrappers.StringValue {
	if m != nil {
		return m.ProductStoreId
	}
	return nil
}

func (m *Segments) GetProductTitle() *wrappers.StringValue {
	if m != nil {
		return m.ProductTitle
	}
	return nil
}

func (m *Segments) GetProductTypeL1() *wrappers.StringValue {
	if m != nil {
		return m.ProductTypeL1
	}
	return nil
}

func (m *Segments) GetProductTypeL2() *wrappers.StringValue {
	if m != nil {
		return m.ProductTypeL2
	}
	return nil
}

func (m *Segments) GetProductTypeL3() *wrappers.StringValue {
	if m != nil {
		return m.ProductTypeL3
	}
	return nil
}

func (m *Segments) GetProductTypeL4() *wrappers.StringValue {
	if m != nil {
		return m.ProductTypeL4
	}
	return nil
}

func (m *Segments) GetProductTypeL5() *wrappers.StringValue {
	if m != nil {
		return m.ProductTypeL5
	}
	return nil
}

func (m *Segments) GetQuarter() *wrappers.StringValue {
	if m != nil {
		return m.Quarter
	}
	return nil
}

func (m *Segments) GetSearchTermMatchType() enums.SearchTermMatchTypeEnum_SearchTermMatchType {
	if m != nil {
		return m.SearchTermMatchType
	}
	return enums.SearchTermMatchTypeEnum_UNSPECIFIED
}

func (m *Segments) GetSlot() enums.SlotEnum_Slot {
	if m != nil {
		return m.Slot
	}
	return enums.SlotEnum_UNSPECIFIED
}

func (m *Segments) GetWebpage() *wrappers.StringValue {
	if m != nil {
		return m.Webpage
	}
	return nil
}

func (m *Segments) GetWeek() *wrappers.StringValue {
	if m != nil {
		return m.Week
	}
	return nil
}

func (m *Segments) GetYear() *wrappers.Int32Value {
	if m != nil {
		return m.Year
	}
	return nil
}

// A Keyword criterion segment.
type Keyword struct {
	// The AdGroupCriterion resource name.
	AdGroupCriterion *wrappers.StringValue `protobuf:"bytes,1,opt,name=ad_group_criterion,json=adGroupCriterion,proto3" json:"ad_group_criterion,omitempty"`
	// Keyword info.
	Info                 *KeywordInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Keyword) Reset()         { *m = Keyword{} }
func (m *Keyword) String() string { return proto.CompactTextString(m) }
func (*Keyword) ProtoMessage()    {}
func (*Keyword) Descriptor() ([]byte, []int) {
	return fileDescriptor_segments_557a0956ffaccbfe, []int{1}
}
func (m *Keyword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Keyword.Unmarshal(m, b)
}
func (m *Keyword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Keyword.Marshal(b, m, deterministic)
}
func (dst *Keyword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Keyword.Merge(dst, src)
}
func (m *Keyword) XXX_Size() int {
	return xxx_messageInfo_Keyword.Size(m)
}
func (m *Keyword) XXX_DiscardUnknown() {
	xxx_messageInfo_Keyword.DiscardUnknown(m)
}

var xxx_messageInfo_Keyword proto.InternalMessageInfo

func (m *Keyword) GetAdGroupCriterion() *wrappers.StringValue {
	if m != nil {
		return m.AdGroupCriterion
	}
	return nil
}

func (m *Keyword) GetInfo() *KeywordInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Segments)(nil), "google.ads.googleads.v1.common.Segments")
	proto.RegisterType((*Keyword)(nil), "google.ads.googleads.v1.common.Keyword")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v1/common/segments.proto", fileDescriptor_segments_557a0956ffaccbfe)
}

var fileDescriptor_segments_557a0956ffaccbfe = []byte{
	// 1885 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x99, 0x5d, 0x7b, 0xdb, 0xb6,
	0x15, 0xc7, 0x1f, 0xa5, 0x6e, 0xd2, 0xc0, 0x75, 0x6c, 0xc3, 0x49, 0x8a, 0x38, 0x69, 0x92, 0xba,
	0xdb, 0x9a, 0xb5, 0xa9, 0x64, 0xbd, 0x38, 0x5b, 0x95, 0xe6, 0x45, 0x96, 0x3d, 0x47, 0xa9, 0x53,
	0xfb, 0xa1, 0x5d, 0x77, 0xdb, 0x93, 0x8d, 0x83, 0x49, 0x98, 0xe2, 0x4c, 0x02, 0x0c, 0x08, 0xd9,
	0xd5, 0xcd, 0xf6, 0x01, 0x76, 0xb7, 0x8b, 0x7e, 0x80, 0x5d, 0x6e, 0x37, 0xfb, 0x1c, 0xfb, 0x24,
	0x7b, 0xf6, 0x11, 0x76, 0xd5, 0x07, 0x00, 0x49, 0x51, 0x96, 0x25, 0x42, 0xf6, 0x95, 0x49, 0xf0,
	0xfc, 0xfe, 0xe7, 0xf0, 0xe8, 0xe0, 0x00, 0xa0, 0xc1, 0x97, 0x1e, 0x63, 0x5e, 0x40, 0x2a, 0xd8,
	0x8d, 0x2b, 0xfa, 0x52, 0x5e, 0x9d, 0x54, 0x2b, 0x0e, 0x0b, 0x43, 0x46, 0x2b, 0x31, 0xf1, 0x42,
	0x42, 0x45, 0x5c, 0x8e, 0x38, 0x13, 0x0c, 0xde, 0xd7, 0x36, 0x65, 0xec, 0xc6, 0xe5, 0xcc, 0xbc,
	0x7c, 0x52, 0x2d, 0x6b, 0xf3, 0xe5, 0x22, 0x39, 0x87, 0xfb, 0x82, 0x70, 0x1f, 0x6b, 0xb9, 0xe5,
	0xfa, 0x38, 0x73, 0x42, 0x7b, 0x61, 0x5c, 0xc1, 0xae, 0x4d, 0x89, 0x38, 0x65, 0xfc, 0xd8, 0x16,
	0xfd, 0x88, 0x24, 0x50, 0x79, 0x32, 0xe4, 0x04, 0xbe, 0x33, 0x64, 0xff, 0xbc, 0xc0, 0x9e, 0xd1,
	0x13, 0xc2, 0x63, 0x9f, 0x51, 0x1b, 0x3b, 0x42, 0xfe, 0x71, 0xb0, 0x20, 0x1e, 0xe3, 0xfd, 0x84,
	0xdf, 0x34, 0xe7, 0x85, 0xe0, 0xfe, 0x61, 0x4f, 0x89, 0x90, 0x13, 0x42, 0x45, 0x3e, 0x8c, 0xaf,
	0x8c, 0x65, 0x02, 0xec, 0xd9, 0x87, 0x3d, 0xe7, 0x98, 0x88, 0x04, 0xdd, 0x32, 0x46, 0x19, 0xb7,
	0xb1, 0xfb, 0xe7, 0x5e, 0x2c, 0xe4, 0x8f, 0x36, 0x2a, 0x54, 0x99, 0x2c, 0xe4, 0xe2, 0xbe, 0xcd,
	0x8e, 0xec, 0x53, 0x42, 0x8e, 0x13, 0xe0, 0xf3, 0x02, 0x80, 0x9c, 0xf8, 0x8e, 0x61, 0x9e, 0xc9,
	0x0f, 0x82, 0x70, 0x8a, 0x03, 0x3b, 0x17, 0x6e, 0xcc, 0x7a, 0x3c, 0xe3, 0x9f, 0x4d, 0xe6, 0xbb,
	0x4c, 0x90, 0xc0, 0x76, 0xb1, 0x20, 0x76, 0x4c, 0x02, 0xa2, 0x7f, 0xaa, 0x5c, 0x7e, 0xab, 0x93,
	0xf1, 0x90, 0x51, 0xd1, 0x95, 0x6f, 0xd7, 0x27, 0x98, 0x27, 0x48, 0x63, 0x32, 0x12, 0x05, 0xd8,
	0x21, 0x5d, 0x16, 0xb8, 0x84, 0xe7, 0x1d, 0x15, 0x14, 0x6d, 0xc4, 0x99, 0xdb, 0x73, 0x84, 0xed,
	0x74, 0x31, 0xa5, 0x24, 0x48, 0xa0, 0x17, 0x53, 0x41, 0x36, 0xf9, 0xc1, 0x09, 0x7a, 0xb1, 0x7f,
	0xe2, 0x8b, 0xb4, 0x0a, 0xd7, 0x0c, 0x05, 0x18, 0x75, 0x7d, 0x99, 0x9a, 0x04, 0x6b, 0x4e, 0xc6,
	0x62, 0x82, 0xb9, 0xd3, 0xb5, 0x05, 0xe1, 0xa1, 0x1d, 0x62, 0x21, 0x2f, 0x07, 0x2f, 0xfa, 0xa8,
	0x80, 0x0d, 0x58, 0x5a, 0x57, 0x49, 0x5b, 0xa8, 0xa8, 0xbb, 0xc3, 0xde, 0x51, 0xe5, 0x94, 0xe3,
	0x28, 0x22, 0x3c, 0x69, 0x1b, 0xcb, 0xf7, 0x52, 0xa5, 0xc8, 0xaf, 0x60, 0x4a, 0x99, 0xc0, 0x32,
	0xc4, 0xe4, 0xe9, 0xca, 0xff, 0x1f, 0x83, 0x0f, 0xf6, 0x92, 0x3e, 0x03, 0x8f, 0xc0, 0xfc, 0x99,
	0x69, 0x8f, 0xde, 0x7b, 0x58, 0x7a, 0x74, 0xa3, 0xf6, 0xbc, 0x3c, 0xae, 0xf7, 0xa8, 0x70, 0xca,
	0x2d, 0xf7, 0x5b, 0x0d, 0xed, 0xf7, 0x23, 0xb2, 0x49, 0x7b, 0xe1, 0xf0, 0x88, 0x35, 0x87, 0xf3,
	0xb7, 0xf0, 0x3b, 0x00, 0x06, 0x9d, 0x02, 0x2d, 0x2b, 0x17, 0x4f, 0x0a, 0x5c, 0xb4, 0x25, 0x90,
	0xc9, 0x67, 0x77, 0xd6, 0x75, 0x27, 0xbd, 0x84, 0x1d, 0xb0, 0x38, 0xd2, 0x50, 0x50, 0xe3, 0x61,
	0xe9, 0xd1, 0x6c, 0xed, 0x5e, 0xaa, 0x9e, 0x66, 0xa9, 0xbc, 0x27, 0xb8, 0x4f, 0xbd, 0x03, 0x1c,
	0xf4, 0x88, 0xb5, 0x30, 0xc0, 0x5a, 0x8a, 0x82, 0x7f, 0x2f, 0x81, 0xe5, 0xf1, 0xcd, 0x09, 0xad,
	0xa9, 0x90, 0xf7, 0x8b, 0x42, 0x3e, 0xa3, 0xda, 0x4e, 0x70, 0xfd, 0x06, 0x63, 0x1e, 0x5a, 0xc8,
	0x19, 0xf3, 0x04, 0x5a, 0xe0, 0xf6, 0x68, 0x4c, 0x14, 0x87, 0x04, 0x3d, 0x31, 0x78, 0xc9, 0x9b,
	0x67, 0x75, 0xbf, 0xc5, 0x21, 0x81, 0x3b, 0xe0, 0x56, 0x5e, 0x33, 0xeb, 0x5f, 0xe8, 0xae, 0x92,
	0x5c, 0x1e, 0x91, 0x5c, 0x67, 0x2c, 0x18, 0x15, 0xcc, 0x38, 0xf8, 0xaf, 0x12, 0xf8, 0xa4, 0xb0,
	0x2d, 0xa3, 0x2b, 0x2a, 0x81, 0x7f, 0x32, 0x4f, 0xe0, 0x40, 0x66, 0x53, 0xaa, 0x0c, 0x0a, 0x61,
	0xa2, 0x89, 0x75, 0xdf, 0x99, 0xf8, 0x1c, 0xfe, 0x65, 0xe8, 0xf5, 0x07, 0x3d, 0x1b, 0xd5, 0x54,
	0x80, 0xaf, 0x8d, 0x03, 0xdc, 0xc6, 0xde, 0xba, 0x22, 0xcf, 0x44, 0x95, 0x8d, 0x5b, 0x4b, 0xce,
	0xe8, 0x20, 0xfc, 0x77, 0x09, 0x7c, 0x6a, 0xb0, 0x84, 0xa0, 0xba, 0x0a, 0xe7, 0xd0, 0x38, 0x9c,
	0x1d, 0x3e, 0xf8, 0x49, 0xc6, 0x85, 0x76, 0xae, 0x8d, 0xf5, 0xc0, 0x99, 0x6c, 0x00, 0x57, 0xc1,
	0x8c, 0x5c, 0x08, 0xd0, 0x8c, 0x41, 0xcd, 0x29, 0x4b, 0x78, 0x00, 0x66, 0x73, 0xab, 0x1b, 0x7a,
	0xdf, 0x68, 0xbe, 0x6f, 0xe0, 0xfe, 0xce, 0xd1, 0xf7, 0x84, 0x1c, 0xab, 0xa8, 0xb3, 0x3b, 0xeb,
	0xba, 0x9b, 0x5e, 0xc2, 0x57, 0xe0, 0xaa, 0x5e, 0x04, 0x51, 0x49, 0x49, 0xae, 0x16, 0x49, 0x2a,
	0x63, 0xad, 0xa7, 0x2e, 0xad, 0x84, 0x57, 0xd3, 0x7d, 0xfc, 0x1a, 0x89, 0x7e, 0x65, 0x34, 0xdd,
	0x37, 0x13, 0x81, 0x41, 0x86, 0xf7, 0x14, 0xae, 0x1c, 0x8e, 0x7b, 0x68, 0x21, 0x32, 0xe6, 0x09,
	0x7c, 0x0d, 0xa0, 0x47, 0x98, 0x2d, 0x30, 0xf7, 0x88, 0xb0, 0xb1, 0xcf, 0x23, 0xc6, 0x05, 0x6a,
	0x99, 0xf4, 0x33, 0x8f, 0xb0, 0x7d, 0x85, 0xb5, 0x34, 0x05, 0x37, 0xc0, 0x7c, 0x4e, 0xcb, 0xf1,
	0x45, 0x1f, 0x3d, 0x37, 0x10, 0x9a, 0xcb, 0x84, 0xda, 0xbe, 0xe8, 0xc3, 0xdf, 0x80, 0x85, 0x9c,
	0x4a, 0x48, 0x04, 0x67, 0xe8, 0x85, 0x81, 0xcc, 0x8d, 0x4c, 0xe6, 0x8d, 0x64, 0xe0, 0x2b, 0xb0,
	0x98, 0xd3, 0xe1, 0xc4, 0x93, 0x8d, 0xfa, 0xa5, 0x81, 0xd0, 0x7c, 0x26, 0x64, 0x29, 0x08, 0x1e,
	0x80, 0x3b, 0x7a, 0x6f, 0x72, 0xc8, 0xd8, 0xb1, 0x4f, 0x3d, 0xfb, 0xd4, 0xa7, 0x2e, 0x3b, 0xb5,
	0x5d, 0xdc, 0x8f, 0xd1, 0x55, 0xa5, 0x78, 0x77, 0x44, 0xb1, 0x43, 0xc5, 0x93, 0x86, 0x16, 0xbc,
	0xad, 0xe8, 0x75, 0x0d, 0x7f, 0xaf, 0xd8, 0x0d, 0xdc, 0x8f, 0x61, 0x1b, 0xcc, 0x6b, 0x5d, 0x87,
	0x50, 0x41, 0xb8, 0xed, 0xbb, 0xe8, 0x5a, 0xb1, 0xda, 0x9c, 0x62, 0xda, 0x0a, 0xe9, 0xb8, 0xf0,
	0x1b, 0xb0, 0x94, 0x88, 0x74, 0x89, 0x73, 0x6c, 0xfb, 0x54, 0xed, 0xa0, 0xd0, 0x07, 0x26, 0xbf,
	0xa0, 0x56, 0x92, 0x5c, 0x87, 0x6e, 0xc8, 0x49, 0xf4, 0x0e, 0x2c, 0x8f, 0x88, 0x0d, 0xe6, 0xd4,
	0xf5, 0x4b, 0xcd, 0xa9, 0x5b, 0xc3, 0xde, 0xd2, 0xf9, 0xf5, 0x14, 0x80, 0xc4, 0xa5, 0xac, 0x17,
	0x60, 0x10, 0xf6, 0x75, 0x2d, 0x24, 0x6b, 0xe5, 0x6b, 0x30, 0x9b, 0xc0, 0x01, 0x8e, 0x63, 0x34,
	0x3b, 0x3e, 0x7b, 0xf5, 0x9a, 0x86, 0xb5, 0xb3, 0xb6, 0x34, 0x87, 0x2d, 0x30, 0x97, 0xd0, 0xac,
	0x47, 0x05, 0xef, 0xa3, 0x0f, 0x0d, 0xbc, 0x7f, 0xa8, 0x05, 0x34, 0x01, 0xff, 0x56, 0x4a, 0x6b,
	0xe3, 0x9c, 0x7d, 0x2b, 0x9a, 0x53, 0x09, 0xdb, 0x2d, 0x48, 0xd8, 0x2b, 0xc9, 0xcb, 0xf4, 0xef,
	0xa5, 0x74, 0xb6, 0xf0, 0x9c, 0xff, 0x28, 0x29, 0xa8, 0x91, 0x71, 0xb8, 0x0d, 0x6e, 0xea, 0x60,
	0x02, 0x42, 0x3d, 0xbd, 0x19, 0x8e, 0x05, 0xee, 0xa3, 0x1b, 0xc5, 0x79, 0x59, 0x54, 0xe0, 0xb6,
	0xe2, 0x76, 0x8e, 0xf6, 0x04, 0xee, 0xc3, 0x67, 0x69, 0x72, 0x63, 0x21, 0x2b, 0x6a, 0xde, 0x20,
	0x39, 0x3a, 0xbb, 0x7b, 0xd2, 0x1e, 0x56, 0xc0, 0x4c, 0x97, 0xf5, 0x38, 0x5a, 0x28, 0x76, 0xae,
	0x0c, 0xe1, 0x1f, 0xc0, 0xc7, 0xbe, 0x2c, 0xea, 0x64, 0xcf, 0x21, 0x93, 0xd8, 0xf5, 0x63, 0x5b,
	0xb6, 0x2e, 0x2a, 0x3b, 0x16, 0xaa, 0x16, 0xee, 0x16, 0x96, 0x73, 0x02, 0x3b, 0x74, 0xbf, 0xeb,
	0xc7, 0x9b, 0x29, 0x0d, 0x5b, 0xe0, 0xda, 0x31, 0xe9, 0x9f, 0x32, 0xee, 0xa2, 0x67, 0x4a, 0xe8,
	0xb3, 0xf2, 0xe4, 0xb3, 0x6e, 0xf9, 0x1b, 0x6d, 0x6e, 0xa5, 0x1c, 0xac, 0x81, 0xf7, 0xd5, 0x29,
	0x03, 0x2d, 0x1a, 0xe4, 0x42, 0x9b, 0xc2, 0x3f, 0x82, 0xb9, 0xa1, 0x93, 0x09, 0x82, 0xaa, 0x28,
	0x9a, 0x05, 0x45, 0xf1, 0x46, 0x32, 0x3b, 0x47, 0xbf, 0x23, 0x98, 0xab, 0x4a, 0xc8, 0xdd, 0x5b,
	0xb3, 0xe1, 0xe0, 0x46, 0xb6, 0xcb, 0x08, 0x73, 0x41, 0x09, 0xb7, 0xf5, 0xaf, 0xe5, 0xbb, 0x68,
	0xc9, 0xa4, 0x5d, 0x26, 0x94, 0x2a, 0xb1, 0x8e, 0x0b, 0x43, 0xb0, 0x70, 0xf6, 0x38, 0x84, 0x6e,
	0xaa, 0x50, 0xd7, 0x0b, 0x42, 0xdd, 0x1d, 0x60, 0x59, 0xe1, 0x9e, 0x19, 0xb3, 0xe6, 0xa3, 0xe1,
	0x01, 0xb8, 0x0b, 0x6e, 0xa5, 0x27, 0x1a, 0xec, 0x79, 0x9c, 0x78, 0x58, 0x30, 0xd5, 0x01, 0xef,
	0x8d, 0x89, 0xfd, 0xbb, 0x5c, 0x0b, 0x5c, 0x4a, 0xd0, 0x56, 0x46, 0x76, 0x5c, 0xe8, 0x80, 0x07,
	0xa9, 0xe2, 0xa1, 0xef, 0xba, 0xb2, 0x4f, 0xa7, 0x5b, 0x69, 0x3b, 0x20, 0x27, 0x24, 0xa8, 0xa2,
	0x5f, 0x1b, 0xe4, 0xe5, 0x5e, 0x22, 0xb2, 0xae, 0x35, 0xd2, 0x7d, 0xf1, 0xb6, 0x52, 0x28, 0x76,
	0x52, 0x43, 0x5f, 0x5d, 0xd2, 0x49, 0xad, 0xd8, 0x49, 0x1d, 0x35, 0x2f, 0xe9, 0xa4, 0x5e, 0xec,
	0xa4, 0x81, 0x9e, 0x5e, 0xd2, 0x49, 0xa3, 0xd8, 0xc9, 0x1a, 0xfa, 0xfa, 0x92, 0x4e, 0xd6, 0x64,
	0x1b, 0xcf, 0x9c, 0x70, 0x4c, 0x5d, 0xf4, 0xb1, 0x49, 0x1b, 0x4f, 0x25, 0x25, 0x01, 0x7d, 0x30,
	0x7f, 0xe6, 0x80, 0x8e, 0xee, 0xab, 0xda, 0x7f, 0x59, 0x54, 0xfb, 0x9a, 0x6a, 0x6b, 0x48, 0x97,
	0xfe, 0xd0, 0x90, 0x75, 0x23, 0x1a, 0xba, 0x87, 0x3f, 0x96, 0xc0, 0xdd, 0x09, 0x1f, 0x03, 0xd0,
	0x03, 0xe5, 0xf7, 0x60, 0x3a, 0xbf, 0x03, 0xfe, 0x9c, 0x10, 0x72, 0x4f, 0xad, 0x3b, 0xd1, 0xb8,
	0x47, 0xf0, 0x1d, 0x58, 0x1c, 0xf9, 0xc6, 0x80, 0x1e, 0xaa, 0x68, 0x36, 0x0c, 0xa3, 0x49, 0xb1,
	0xa1, 0x20, 0xd2, 0x41, 0x6b, 0x21, 0x3a, 0x33, 0x02, 0x37, 0x73, 0x69, 0x4f, 0x96, 0xe0, 0x4f,
	0x8c, 0x5a, 0x57, 0x2a, 0xa4, 0x17, 0xe1, 0xdf, 0x82, 0x3b, 0x99, 0x4c, 0x2f, 0x16, 0x2c, 0xcc,
	0x0e, 0x84, 0x64, 0x15, 0xad, 0x18, 0x08, 0x7e, 0x94, 0x0a, 0x2a, 0xba, 0x95, 0xc1, 0x93, 0x94,
	0xab, 0xe8, 0xd3, 0x8b, 0x2b, 0x57, 0x27, 0x29, 0xd7, 0xd0, 0xcf, 0x2e, 0xae, 0x5c, 0x9b, 0xa4,
	0x5c, 0x47, 0x3f, 0xbf, 0xb8, 0x72, 0x7d, 0x92, 0x72, 0x03, 0xfd, 0xe2, 0xe2, 0xca, 0x0d, 0x79,
	0x72, 0x48, 0x95, 0x7d, 0x41, 0x42, 0xb9, 0x0e, 0x7c, 0x66, 0x72, 0x72, 0x48, 0xa0, 0x8e, 0x20,
	0x61, 0xc7, 0x85, 0x5b, 0x20, 0x2d, 0x31, 0x3b, 0xc0, 0xd4, 0xeb, 0x61, 0x8f, 0xa0, 0x47, 0x26,
	0x1b, 0xfe, 0x84, 0xda, 0x4e, 0x20, 0xb8, 0x0d, 0xd2, 0x15, 0xc6, 0x0e, 0x09, 0x97, 0xb3, 0x54,
	0xc8, 0x90, 0x7e, 0x69, 0xb0, 0x34, 0xa5, 0x73, 0xe8, 0x4d, 0xc2, 0x75, 0x5c, 0xb5, 0x42, 0x27,
	0x6a, 0xb1, 0x60, 0x9c, 0x48, 0xa9, 0xcf, 0xa7, 0x28, 0xf3, 0x3d, 0x09, 0x75, 0xdc, 0x7c, 0x9f,
	0x13, 0xbe, 0x08, 0x08, 0xfa, 0x62, 0x8a, 0x3e, 0xb7, 0x2f, 0x89, 0x7c, 0x9e, 0xe5, 0x02, 0x6f,
	0x07, 0x55, 0xf4, 0x78, 0x8a, 0x3c, 0xcb, 0x95, 0x7b, 0xbb, 0x3a, 0xaa, 0x52, 0x43, 0x5f, 0x4e,
	0xab, 0x52, 0x1b, 0x55, 0xa9, 0xa3, 0xf2, 0xb4, 0x2a, 0xf5, 0x51, 0x95, 0x06, 0xaa, 0x4c, 0xab,
	0xd2, 0x18, 0x55, 0x59, 0x43, 0xab, 0xd3, 0xaa, 0xac, 0xc1, 0x27, 0xe0, 0xda, 0xbb, 0x1e, 0xe6,
	0x82, 0x70, 0x74, 0xcb, 0x80, 0x4e, 0x8d, 0xe1, 0x5f, 0xc1, 0xed, 0xf3, 0x3f, 0xd3, 0xa2, 0xdb,
	0x46, 0x1f, 0x88, 0xf6, 0x14, 0xbc, 0x4f, 0x78, 0xf8, 0x46, 0xa2, 0xd9, 0x26, 0xec, 0x9c, 0x71,
	0x6b, 0x29, 0x1e, 0x1d, 0x84, 0x2f, 0xc1, 0x4c, 0x1c, 0x30, 0x81, 0x3e, 0x52, 0xee, 0x1e, 0x17,
	0xb9, 0x0b, 0x98, 0xfe, 0xca, 0x23, 0x2f, 0x2c, 0x45, 0xca, 0x57, 0x3f, 0x25, 0x87, 0x91, 0x9c,
	0x71, 0xeb, 0x26, 0xaf, 0x9e, 0x18, 0xc3, 0x55, 0x30, 0xa3, 0x8e, 0x96, 0xc8, 0xe4, 0x3b, 0x8f,
	0xb4, 0x94, 0xc7, 0x0a, 0xb5, 0x8d, 0xbe, 0x63, 0x70, 0xac, 0x90, 0x86, 0x2b, 0x3f, 0x96, 0xc0,
	0xb5, 0x64, 0x27, 0x0f, 0x5f, 0x03, 0x88, 0x5d, 0xdb, 0xe3, 0xac, 0x17, 0xd9, 0xc9, 0x7f, 0xaa,
	0x18, 0x55, 0x1f, 0x76, 0x0a, 0xcf, 0xca, 0xd8, 0xdd, 0x92, 0x58, 0x3b, 0xa5, 0xe0, 0x0b, 0x30,
	0xe3, 0xd3, 0x23, 0xa6, 0xbe, 0x32, 0xce, 0xd6, 0xbe, 0x30, 0x3c, 0x4c, 0x74, 0xe8, 0x11, 0xb3,
	0x14, 0xb8, 0xfe, 0xdf, 0x12, 0x58, 0x71, 0x58, 0x58, 0x00, 0xae, 0xcf, 0xa5, 0x5f, 0xce, 0x77,
	0x65, 0x5c, 0xbb, 0xa5, 0xdf, 0x6f, 0x24, 0x80, 0xc7, 0x64, 0x97, 0x2b, 0x33, 0xee, 0x55, 0x3c,
	0x42, 0x55, 0xd4, 0xe9, 0x57, 0xfc, 0xc8, 0x8f, 0xc7, 0xfd, 0x87, 0xee, 0xa9, 0xfe, 0xf3, 0x8f,
	0x2b, 0xef, 0x6d, 0xb5, 0x5a, 0xff, 0xbc, 0x72, 0x7f, 0x4b, 0x8b, 0xb5, 0xdc, 0xb8, 0xac, 0x2f,
	0xe5, 0xd5, 0x41, 0xb5, 0xdc, 0x56, 0x66, 0xff, 0x49, 0x0d, 0xde, 0xb6, 0xdc, 0xf8, 0x6d, 0x66,
	0xf0, 0xf6, 0xa0, 0xfa, 0x56, 0x1b, 0xfc, 0xef, 0xca, 0x8a, 0x1e, 0x6d, 0x36, 0x5b, 0x6e, 0xdc,
	0x6c, 0x66, 0x26, 0xcd, 0xe6, 0x41, 0xb5, 0xd9, 0xd4, 0x46, 0x87, 0x57, 0x55, 0x74, 0xf5, 0x9f,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x92, 0xaf, 0xc1, 0x8d, 0x1c, 0x00, 0x00,
}

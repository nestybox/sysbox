#
# Sysbox-In-Docker Container Dockerfile (CentOS-8 image)
#
# This Dockerfile creates the sysbox-in-docker container image, which holds
# all Sysbox binaries and its dependencies. The goal is to allow users to run
# an entire Sysbox sandbox within a container.
#
# NOTE: Sysbox is a container runtime and thus needs host root privileges. As a
# result, this image must be run as a privileged container, and a few resources
# must be bind-mounted to meet Sysbox requirements as well as those of system-level
# apps running in inner containers. Notice that within the privileged container,
# inner containers launched with Docker + Sysbox will be strongly isolated from the
# host by Sysbox (e.g., via the Linux user-namespace).
#
# Instructions:
#
# * Image creation:
#
#   $ make sysbox-in-docker centos-8
#
# * Container creation:
#
# docker run -it --privileged --rm --hostname sysbox-in-docker --name sysbox-in-docker \
#                -v /var/tmp/sysbox-var-lib-docker:/var/lib/docker \
#                -v /var/tmp/sysbox-var-lib-sysbox:/var/lib/sysbox \
#                -v /lib/modules/$(uname -r):/lib/modules/$(uname -r):ro \
#                -v /usr/src/kernels/$(uname -r):/usr/src/kernels/$(uname -r):ro \
#                nestybox/sysbox-in-docker:centos-8
#

FROM centos:8

RUN dnf update -y && dnf install -y \
    procps \
    curl \
    iproute \
    jq \
    kmod \
    net-tools \
    iputils \
    ca-certificates \
    fuse \
    rsync \
    redhat-lsb-core


# Install Docker.
RUN curl -fsSL https://get.docker.com -o get-docker.sh
RUN sh get-docker.sh

# Copy Sysbox artifacts.
COPY sysbox-mgr /usr/local/sbin/sysbox-mgr
COPY sysbox-fs /usr/local/sbin/sysbox-fs
COPY sysbox-runc /usr/local/sbin/sysbox-runc
COPY sysbox /usr/local/sbin/sysbox
COPY entrypoint.sh /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]

#!/bin/bash -e

#
# script to run shiftfs posix compliance test suite.
#
# Note: must be executed as root
#

progName=$(basename "$0")

usage()
{
  echo "
Usage: $progName <path-to-pjdfstest> <path-to-test-dir>

"
  exit 1
}

# check input params
if [ $# -ne 2 ]; then
  usage
fi

SUITE=$1
TDIR=$2

# check that we are executing as root
if [ "$(whoami)" != "root" ]; then
    echo "Error: must run as root."
    exit 1
fi

# check that shiftfs module is present
lsmod | grep shiftfs > /dev/null
if [ $? -ne 0 ]; then
    echo "Error: shiftfs module is not loaded."
    exit 1
fi

echo "Running shiftfs posix compliance suite ... "
echo "Target dir = $TDIR"
echo "Suite = $SUITE"

# create a test dir
mkdir -p $TDIR/mountpoint
cd $TDIR

# when running on ext4, we mount overlayfs first to test shiftfs on
# top of overlayfs (as this is how a sys container would be
# configured).

fs=$(findmnt | grep /var/lib/sysvisor | grep -v sysvisorfs | awk '{ print $3 }')
if [ $fs != "btrfs" ]; then
  mkdir -p lower/common
  mkdir -p upper/common
  mkdir -p work
  mount -t overlay overlay -o lowerdir=$TDIR/lower,upperdir=$TDIR/upper,workdir=$TDIR/work $TDIR/mountpoint
  ovl=1
fi

# mount shiftfs on top of overlayfs
mount -t shiftfs -o userns=/proc/1/ns/user mountpoint mountpoint

# run pjdfstest suite
if [ -n $ovl ]; then
  cd mountpoint/common
else
  cd mountpoint
fi

prove -rv $SUITE/tests

# unmount shiftfs and overlayfs
cd
if [ -n $ovl ]; then
  umount $TDIR/mountpoint
fi

umount $TDIR/mountpoint

# cleanup
rm -rf $TDIR
